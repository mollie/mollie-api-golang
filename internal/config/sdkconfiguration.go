// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package config

import (
	"context"
	"github.com/mollie/mollie-api-golang/internal/globals"
	"github.com/mollie/mollie-api-golang/internal/utils"
	"github.com/mollie/mollie-api-golang/retry"
	"net/http"
	"time"
)

type HTTPClient interface {
	Do(req *http.Request) (*http.Response, error)
}

type SDKConfiguration struct {
	Client      HTTPClient
	Security    func(context.Context) (interface{}, error)
	ServerURL   string
	ServerIndex int
	ServerList  []string
	UserAgent   string
	Globals     globals.Globals
	RetryConfig *retry.Config
	Timeout     *time.Duration
}

func (c *SDKConfiguration) GetServerDetails() (string, map[string]string) {
	if c.ServerURL != "" {
		return c.ServerURL, nil
	}

	return c.ServerList[c.ServerIndex], nil
}

func (c *SDKConfiguration) FillGlobalsFromEnv() {
	if c.Globals.ProfileID == nil {
		if val := utils.ValueFromEnvVar("CLIENT_PROFILE_ID", c.Globals.ProfileID); val != nil {
			if typedVal, ok := val.(string); ok {
				c.Globals.ProfileID = &typedVal
			}
		}
	}
	if c.Globals.Testmode == nil {
		if val := utils.ValueFromEnvVar("CLIENT_TESTMODE", c.Globals.Testmode); val != nil {
			if typedVal, ok := val.(bool); ok {
				c.Globals.Testmode = &typedVal
			}
		}
	}
	if c.Globals.CustomUserAgent == nil {
		if val := utils.ValueFromEnvVar("CLIENT_CUSTOM_USER_AGENT", c.Globals.CustomUserAgent); val != nil {
			if typedVal, ok := val.(string); ok {
				c.Globals.CustomUserAgent = &typedVal
			}
		}
	}
}
