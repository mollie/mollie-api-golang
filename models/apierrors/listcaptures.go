// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/mollie/mollie-api-golang/models/components"
	"github.com/mollie/mollie-api-golang/models/operations"
)

// ListCapturesNotFoundHalJSONError - An error response object.
type ListCapturesNotFoundHalJSONError struct {
	// The status code of the error message. This is always the same code as the status code of the HTTP message itself.
	Status int64 `json:"status"`
	// The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
	Title string `json:"title"`
	// A detailed human-readable description of the error that occurred.
	Detail string `json:"detail"`
	// If the error was caused by a value provided by you in a specific field, the `field` property will contain the name
	// of the field that caused the issue.
	Field    *string                              `json:"field,omitempty"`
	Links    operations.ListCapturesNotFoundLinks `json:"_links"`
	HTTPMeta components.HTTPMetadata              `json:"-"`
}

var _ error = &ListCapturesNotFoundHalJSONError{}

func (e *ListCapturesNotFoundHalJSONError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ListCapturesBadRequestHalJSONError - An error response object.
type ListCapturesBadRequestHalJSONError struct {
	// The status code of the error message. This is always the same code as the status code of the HTTP message itself.
	Status int64 `json:"status"`
	// The HTTP reason phrase of the error. For example, for a `404` error, the `title` will be `Not Found`.
	Title string `json:"title"`
	// A detailed human-readable description of the error that occurred.
	Detail string `json:"detail"`
	// If the error was caused by a value provided by you in a specific field, the `field` property will contain the name
	// of the field that caused the issue.
	Field    *string                                `json:"field,omitempty"`
	Links    operations.ListCapturesBadRequestLinks `json:"_links"`
	HTTPMeta components.HTTPMetadata                `json:"-"`
}

var _ error = &ListCapturesBadRequestHalJSONError{}

func (e *ListCapturesBadRequestHalJSONError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
