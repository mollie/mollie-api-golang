// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type ListPermissionsRequest struct {
	// A unique key to ensure idempotent requests. This key should be a UUID v4 string.
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (o *ListPermissionsRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

type ListPermissionsEmbedded struct {
	// An array of permission objects.
	Permissions []components.EntityPermission `json:"permissions,omitempty"`
}

func (o *ListPermissionsEmbedded) GetPermissions() []components.EntityPermission {
	if o == nil {
		return nil
	}
	return o.Permissions
}

// ListPermissionsLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type ListPermissionsLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *components.URLObj `json:"self,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *components.URLObj `json:"documentation,omitempty"`
}

func (o *ListPermissionsLinks) GetSelf() *components.URLObj {
	if o == nil {
		return nil
	}
	return o.Self
}

func (o *ListPermissionsLinks) GetDocumentation() *components.URLObj {
	if o == nil {
		return nil
	}
	return o.Documentation
}

// ListPermissionsResponseBody - A list of permission objects.
type ListPermissionsResponseBody struct {
	// The number of items in this result set. If more items are available, a `_links.next` URL will be present in the result
	// as well.
	//
	// The maximum number of items per result set is controlled by the `limit` property provided in the request. The default
	// limit is 50 items.
	Count    *int64                   `json:"count,omitempty"`
	Embedded *ListPermissionsEmbedded `json:"_embedded,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links *ListPermissionsLinks `json:"_links,omitempty"`
}

func (o *ListPermissionsResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *ListPermissionsResponseBody) GetEmbedded() *ListPermissionsEmbedded {
	if o == nil {
		return nil
	}
	return o.Embedded
}

func (o *ListPermissionsResponseBody) GetLinks() *ListPermissionsLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type ListPermissionsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of permission objects.
	Object *ListPermissionsResponseBody
}

func (o *ListPermissionsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListPermissionsResponse) GetObject() *ListPermissionsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
