// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type CreateRefundRequest struct {
	// Provide the ID of the related payment.
	PaymentID string `pathParam:"style=simple,explode=false,name=paymentId"`
	// A unique key to ensure idempotent requests. This key should be a UUID v4 string.
	IdempotencyKey *string                  `header:"style=simple,explode=false,name=idempotency-key"`
	EntityRefund   *components.EntityRefund `request:"mediaType=application/json"`
}

func (c *CreateRefundRequest) GetPaymentID() string {
	if c == nil {
		return ""
	}
	return c.PaymentID
}

func (c *CreateRefundRequest) GetIdempotencyKey() *string {
	if c == nil {
		return nil
	}
	return c.IdempotencyKey
}

func (c *CreateRefundRequest) GetEntityRefund() *components.EntityRefund {
	if c == nil {
		return nil
	}
	return c.EntityRefund
}

type CreateRefundResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The newly created refund object.
	EntityRefundResponse *components.EntityRefundResponse
}

func (c *CreateRefundResponse) GetHTTPMeta() components.HTTPMetadata {
	if c == nil {
		return components.HTTPMetadata{}
	}
	return c.HTTPMeta
}

func (c *CreateRefundResponse) GetEntityRefundResponse() *components.EntityRefundResponse {
	if c == nil {
		return nil
	}
	return c.EntityRefundResponse
}
