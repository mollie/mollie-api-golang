// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type GetMandateRequest struct {
	// Provide the ID of the related customer.
	CustomerID string `pathParam:"style=simple,explode=false,name=customerId"`
	// Provide the ID of the related mandate.
	MandateID string `pathParam:"style=simple,explode=false,name=mandateId"`
	// Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
	// parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
	// setting the `testmode` query parameter to `true`.
	//
	// Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
	Testmode *bool `queryParam:"style=form,explode=true,name=testmode"`
}

func (o *GetMandateRequest) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *GetMandateRequest) GetMandateID() string {
	if o == nil {
		return ""
	}
	return o.MandateID
}

func (o *GetMandateRequest) GetTestmode() *bool {
	if o == nil {
		return nil
	}
	return o.Testmode
}

// GetMandateNotFoundDocumentation - The URL to the generic Mollie API error handling guide.
type GetMandateNotFoundDocumentation struct {
	Href string `json:"href"`
	Type string `json:"type"`
}

func (o *GetMandateNotFoundDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetMandateNotFoundDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetMandateNotFoundLinks struct {
	// The URL to the generic Mollie API error handling guide.
	Documentation GetMandateNotFoundDocumentation `json:"documentation"`
}

func (o *GetMandateNotFoundLinks) GetDocumentation() GetMandateNotFoundDocumentation {
	if o == nil {
		return GetMandateNotFoundDocumentation{}
	}
	return o.Documentation
}

// GetMandateMode - Whether this entity was created in live mode or in test mode.
type GetMandateMode string

const (
	GetMandateModeLive GetMandateMode = "live"
	GetMandateModeTest GetMandateMode = "test"
)

func (e GetMandateMode) ToPointer() *GetMandateMode {
	return &e
}

// GetMandateMethod - Payment method of the mandate.
//
// SEPA Direct Debit and PayPal mandates can be created directly.
type GetMandateMethod string

const (
	GetMandateMethodCreditcard  GetMandateMethod = "creditcard"
	GetMandateMethodDirectdebit GetMandateMethod = "directdebit"
	GetMandateMethodPaypal      GetMandateMethod = "paypal"
)

func (e GetMandateMethod) ToPointer() *GetMandateMethod {
	return &e
}

// GetMandateCardLabel - The card's label. Available for card mandates, if the card label could be detected.
type GetMandateCardLabel string

const (
	GetMandateCardLabelAmericanExpress GetMandateCardLabel = "American Express"
	GetMandateCardLabelCartaSi         GetMandateCardLabel = "Carta Si"
	GetMandateCardLabelCarteBleue      GetMandateCardLabel = "Carte Bleue"
	GetMandateCardLabelDankort         GetMandateCardLabel = "Dankort"
	GetMandateCardLabelDinersClub      GetMandateCardLabel = "Diners Club"
	GetMandateCardLabelDiscover        GetMandateCardLabel = "Discover"
	GetMandateCardLabelJcb             GetMandateCardLabel = "JCB"
	GetMandateCardLabelLaser           GetMandateCardLabel = "Laser"
	GetMandateCardLabelMaestro         GetMandateCardLabel = "Maestro"
	GetMandateCardLabelMastercard      GetMandateCardLabel = "Mastercard"
	GetMandateCardLabelUnionpay        GetMandateCardLabel = "Unionpay"
	GetMandateCardLabelVisa            GetMandateCardLabel = "Visa"
)

func (e GetMandateCardLabel) ToPointer() *GetMandateCardLabel {
	return &e
}

type GetMandateDetails struct {
	// The customer's name. Available for SEPA Direct Debit and PayPal mandates.
	ConsumerName *string `json:"consumerName,omitempty"`
	// The customer's IBAN or email address. Available for SEPA Direct Debit and PayPal mandates.
	ConsumerAccount *string `json:"consumerAccount,omitempty"`
	// The BIC of the customer's bank. Available for SEPA Direct Debit mandates.
	ConsumerBic *string `json:"consumerBic,omitempty"`
	// The card holder's name. Available for card mandates.
	CardHolder *string `json:"cardHolder,omitempty"`
	// The last four digits of the card number. Available for card mandates.
	CardNumber *string `json:"cardNumber,omitempty"`
	// The card's expiry date in `YYYY-MM-DD` format. Available for card mandates.
	CardExpiryDate *string `json:"cardExpiryDate,omitempty"`
	// The card's label. Available for card mandates, if the card label could be detected.
	CardLabel *GetMandateCardLabel `json:"cardLabel,omitempty"`
	// Unique alphanumeric representation of this specific card. Available for card mandates. Can be used to identify
	// returning customers.
	CardFingerprint *string `json:"cardFingerprint,omitempty"`
}

func (o *GetMandateDetails) GetConsumerName() *string {
	if o == nil {
		return nil
	}
	return o.ConsumerName
}

func (o *GetMandateDetails) GetConsumerAccount() *string {
	if o == nil {
		return nil
	}
	return o.ConsumerAccount
}

func (o *GetMandateDetails) GetConsumerBic() *string {
	if o == nil {
		return nil
	}
	return o.ConsumerBic
}

func (o *GetMandateDetails) GetCardHolder() *string {
	if o == nil {
		return nil
	}
	return o.CardHolder
}

func (o *GetMandateDetails) GetCardNumber() *string {
	if o == nil {
		return nil
	}
	return o.CardNumber
}

func (o *GetMandateDetails) GetCardExpiryDate() *string {
	if o == nil {
		return nil
	}
	return o.CardExpiryDate
}

func (o *GetMandateDetails) GetCardLabel() *GetMandateCardLabel {
	if o == nil {
		return nil
	}
	return o.CardLabel
}

func (o *GetMandateDetails) GetCardFingerprint() *string {
	if o == nil {
		return nil
	}
	return o.CardFingerprint
}

// GetMandateStatus - The status of the mandate. A status can be `pending` for mandates when the first payment is not yet finalized, or
// when we did not received the IBAN yet from the first payment.
type GetMandateStatus string

const (
	GetMandateStatusValid   GetMandateStatus = "valid"
	GetMandateStatusPending GetMandateStatus = "pending"
	GetMandateStatusInvalid GetMandateStatus = "invalid"
)

func (e GetMandateStatus) ToPointer() *GetMandateStatus {
	return &e
}

// GetMandateSelf - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type GetMandateSelf struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetMandateSelf) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetMandateSelf) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetMandateCustomer - The API resource URL of the [customer](get-customer) that this mandate belongs to.
type GetMandateCustomer struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetMandateCustomer) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetMandateCustomer) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetMandateDocumentation - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type GetMandateDocumentation struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetMandateDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetMandateDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetMandateLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type GetMandateLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self GetMandateSelf `json:"self"`
	// The API resource URL of the [customer](get-customer) that this mandate belongs to.
	Customer GetMandateCustomer `json:"customer"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation GetMandateDocumentation `json:"documentation"`
}

func (o *GetMandateLinks) GetSelf() GetMandateSelf {
	if o == nil {
		return GetMandateSelf{}
	}
	return o.Self
}

func (o *GetMandateLinks) GetCustomer() GetMandateCustomer {
	if o == nil {
		return GetMandateCustomer{}
	}
	return o.Customer
}

func (o *GetMandateLinks) GetDocumentation() GetMandateDocumentation {
	if o == nil {
		return GetMandateDocumentation{}
	}
	return o.Documentation
}

// GetMandateResponseBody - The mandate object.
type GetMandateResponseBody struct {
	// Indicates the response contains a mandate object. Will always contain the string `mandate` for this endpoint.
	Resource string `json:"resource"`
	// The identifier uniquely referring to this mandate. Example: `mdt_pWUnw6pkBN`.
	ID string `json:"id"`
	// Whether this entity was created in live mode or in test mode.
	Mode GetMandateMode `json:"mode"`
	// Payment method of the mandate.
	//
	// SEPA Direct Debit and PayPal mandates can be created directly.
	Method  GetMandateMethod  `json:"method"`
	Details GetMandateDetails `json:"details"`
	// The date when the mandate was signed in `YYYY-MM-DD` format.
	SignatureDate *string `json:"signatureDate"`
	// A custom mandate reference. For SEPA Direct Debit, it is vital to provide a unique reference. Some banks will
	// decline Direct Debit payments if the mandate reference is not unique.
	MandateReference *string `json:"mandateReference"`
	// The status of the mandate. A status can be `pending` for mandates when the first payment is not yet finalized, or
	// when we did not received the IBAN yet from the first payment.
	Status GetMandateStatus `json:"status"`
	// The identifier referring to the [customer](get-customer) this mandate was linked to.
	CustomerID string `json:"customerId"`
	// The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	CreatedAt string `json:"createdAt"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links GetMandateLinks `json:"_links"`
}

func (o *GetMandateResponseBody) GetResource() string {
	if o == nil {
		return ""
	}
	return o.Resource
}

func (o *GetMandateResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetMandateResponseBody) GetMode() GetMandateMode {
	if o == nil {
		return GetMandateMode("")
	}
	return o.Mode
}

func (o *GetMandateResponseBody) GetMethod() GetMandateMethod {
	if o == nil {
		return GetMandateMethod("")
	}
	return o.Method
}

func (o *GetMandateResponseBody) GetDetails() GetMandateDetails {
	if o == nil {
		return GetMandateDetails{}
	}
	return o.Details
}

func (o *GetMandateResponseBody) GetSignatureDate() *string {
	if o == nil {
		return nil
	}
	return o.SignatureDate
}

func (o *GetMandateResponseBody) GetMandateReference() *string {
	if o == nil {
		return nil
	}
	return o.MandateReference
}

func (o *GetMandateResponseBody) GetStatus() GetMandateStatus {
	if o == nil {
		return GetMandateStatus("")
	}
	return o.Status
}

func (o *GetMandateResponseBody) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *GetMandateResponseBody) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *GetMandateResponseBody) GetLinks() GetMandateLinks {
	if o == nil {
		return GetMandateLinks{}
	}
	return o.Links
}

type GetMandateResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The mandate object.
	Object *GetMandateResponseBody
}

func (o *GetMandateResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetMandateResponse) GetObject() *GetMandateResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
