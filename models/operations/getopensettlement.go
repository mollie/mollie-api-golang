// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

// GetOpenSettlementStatus - The status of the settlement.
type GetOpenSettlementStatus string

const (
	GetOpenSettlementStatusOpen    GetOpenSettlementStatus = "open"
	GetOpenSettlementStatusPending GetOpenSettlementStatus = "pending"
	GetOpenSettlementStatusPaidout GetOpenSettlementStatus = "paidout"
	GetOpenSettlementStatusFailed  GetOpenSettlementStatus = "failed"
)

func (e GetOpenSettlementStatus) ToPointer() *GetOpenSettlementStatus {
	return &e
}

// GetOpenSettlementAmount - The total amount of the settlement.
type GetOpenSettlementAmount struct {
	// A three-character ISO 4217 currency code.
	Currency string `json:"currency"`
	// A string containing an exact monetary amount in the given currency.
	Value string `json:"value"`
}

func (o *GetOpenSettlementAmount) GetCurrency() string {
	if o == nil {
		return ""
	}
	return o.Currency
}

func (o *GetOpenSettlementAmount) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

// GetOpenSettlementSelf - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type GetOpenSettlementSelf struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetOpenSettlementSelf) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetOpenSettlementSelf) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetOpenSettlementPayments - The API resource URL of the [payments](list-payments) included in this settlement.
type GetOpenSettlementPayments struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetOpenSettlementPayments) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetOpenSettlementPayments) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetOpenSettlementCaptures - The API resource URL of the [captures](list-captures) included in this settlement.
type GetOpenSettlementCaptures struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetOpenSettlementCaptures) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetOpenSettlementCaptures) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetOpenSettlementRefunds - The API resource URL of the [refunds](list-refunds) deducted from this settlement.
type GetOpenSettlementRefunds struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetOpenSettlementRefunds) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetOpenSettlementRefunds) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetOpenSettlementChargebacks - The API resource URL of the [chargebacks](list-chargebacks) deducted from this settlement.
type GetOpenSettlementChargebacks struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetOpenSettlementChargebacks) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetOpenSettlementChargebacks) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetOpenSettlementInvoice - The API resource URL of the [invoice](list-invoices).
type GetOpenSettlementInvoice struct {
	// The actual URL string.
	Href *string `json:"href,omitempty"`
	// The content type of the page or endpoint the URL points to.
	Type *string `json:"type,omitempty"`
}

func (o *GetOpenSettlementInvoice) GetHref() *string {
	if o == nil {
		return nil
	}
	return o.Href
}

func (o *GetOpenSettlementInvoice) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

// GetOpenSettlementDocumentation - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type GetOpenSettlementDocumentation struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetOpenSettlementDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetOpenSettlementDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetOpenSettlementLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type GetOpenSettlementLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *GetOpenSettlementSelf `json:"self,omitempty"`
	// The API resource URL of the [payments](list-payments) included in this settlement.
	Payments *GetOpenSettlementPayments `json:"payments,omitempty"`
	// The API resource URL of the [captures](list-captures) included in this settlement.
	Captures *GetOpenSettlementCaptures `json:"captures,omitempty"`
	// The API resource URL of the [refunds](list-refunds) deducted from this settlement.
	Refunds *GetOpenSettlementRefunds `json:"refunds,omitempty"`
	// The API resource URL of the [chargebacks](list-chargebacks) deducted from this settlement.
	Chargebacks *GetOpenSettlementChargebacks `json:"chargebacks,omitempty"`
	// The API resource URL of the [invoice](list-invoices).
	Invoice *GetOpenSettlementInvoice `json:"invoice,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *GetOpenSettlementDocumentation `json:"documentation,omitempty"`
}

func (o *GetOpenSettlementLinks) GetSelf() *GetOpenSettlementSelf {
	if o == nil {
		return nil
	}
	return o.Self
}

func (o *GetOpenSettlementLinks) GetPayments() *GetOpenSettlementPayments {
	if o == nil {
		return nil
	}
	return o.Payments
}

func (o *GetOpenSettlementLinks) GetCaptures() *GetOpenSettlementCaptures {
	if o == nil {
		return nil
	}
	return o.Captures
}

func (o *GetOpenSettlementLinks) GetRefunds() *GetOpenSettlementRefunds {
	if o == nil {
		return nil
	}
	return o.Refunds
}

func (o *GetOpenSettlementLinks) GetChargebacks() *GetOpenSettlementChargebacks {
	if o == nil {
		return nil
	}
	return o.Chargebacks
}

func (o *GetOpenSettlementLinks) GetInvoice() *GetOpenSettlementInvoice {
	if o == nil {
		return nil
	}
	return o.Invoice
}

func (o *GetOpenSettlementLinks) GetDocumentation() *GetOpenSettlementDocumentation {
	if o == nil {
		return nil
	}
	return o.Documentation
}

// GetOpenSettlementResponseBody - A settlement object describing your current balance. For a complete reference of the settlement object, refer to
// the [Get settlement](get-settlement) endpoint documentation.
type GetOpenSettlementResponseBody struct {
	// Indicates the response contains a settlement object. Will always contain the string `settlement` for this
	// endpoint.
	Resource *string `json:"resource,omitempty"`
	// The identifier uniquely referring to this settlement.
	ID *string `json:"id,omitempty"`
	// The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	CreatedAt *string `json:"createdAt,omitempty"`
	// The settlement's bank reference, as found in your Mollie account and on your bank statement.
	Reference *string `json:"reference,omitempty"`
	// The date on which the settlement was settled, in ISO 8601 format.
	//
	// For an [open settlement](get-open-settlement) or for the [next settlement](get-next-settlement), no settlement
	// date is available.
	SettledAt *string `json:"settledAt,omitempty"`
	// The status of the settlement.
	Status *GetOpenSettlementStatus `json:"status,omitempty"`
	// The total amount of the settlement.
	Amount *GetOpenSettlementAmount `json:"amount,omitempty"`
	// The balance token that the settlement was settled to.
	BalanceID *string `json:"balanceId,omitempty"`
	// The ID of the oldest invoice created for all the periods, if the invoice has been created yet.
	InvoiceID *string `json:"invoiceId,omitempty"`
	// For bookkeeping purposes, the settlement includes an overview of transactions included in the settlement. These
	// transactions are grouped into 'period' objects â€” one for each calendar month.
	//
	// For example, if a settlement includes funds from 15 April until 4 May, it will include two period objects. One for
	// all transactions processed between 15 April and 30 April, and one for all transactions between 1 May and 4 May.
	//
	// Period objects are grouped by year, and then by month. So in the above example, the full `periods` collection will
	// look as follows: `{"2024": {"04": {...}, "05": {...}}}`. The year and month in this documentation are referred as `<year>` and `<month>`.
	//
	// The example response should give a good idea of what this looks like in practise.
	Periods map[string]any `json:"periods,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links *GetOpenSettlementLinks `json:"_links,omitempty"`
}

func (o *GetOpenSettlementResponseBody) GetResource() *string {
	if o == nil {
		return nil
	}
	return o.Resource
}

func (o *GetOpenSettlementResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetOpenSettlementResponseBody) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *GetOpenSettlementResponseBody) GetReference() *string {
	if o == nil {
		return nil
	}
	return o.Reference
}

func (o *GetOpenSettlementResponseBody) GetSettledAt() *string {
	if o == nil {
		return nil
	}
	return o.SettledAt
}

func (o *GetOpenSettlementResponseBody) GetStatus() *GetOpenSettlementStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetOpenSettlementResponseBody) GetAmount() *GetOpenSettlementAmount {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *GetOpenSettlementResponseBody) GetBalanceID() *string {
	if o == nil {
		return nil
	}
	return o.BalanceID
}

func (o *GetOpenSettlementResponseBody) GetInvoiceID() *string {
	if o == nil {
		return nil
	}
	return o.InvoiceID
}

func (o *GetOpenSettlementResponseBody) GetPeriods() map[string]any {
	if o == nil {
		return nil
	}
	return o.Periods
}

func (o *GetOpenSettlementResponseBody) GetLinks() *GetOpenSettlementLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type GetOpenSettlementResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A settlement object describing your current balance. For a complete reference of the settlement object, refer to
	// the [Get settlement](get-settlement) endpoint documentation.
	Object *GetOpenSettlementResponseBody
}

func (o *GetOpenSettlementResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetOpenSettlementResponse) GetObject() *GetOpenSettlementResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
