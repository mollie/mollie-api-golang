// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/mollie/mollie-api-golang/models/components"
)

// GetCurrentProfileMode - Whether this entity was created in live mode or in test mode.
type GetCurrentProfileMode string

const (
	GetCurrentProfileModeLive GetCurrentProfileMode = "live"
	GetCurrentProfileModeTest GetCurrentProfileMode = "test"
)

func (e GetCurrentProfileMode) ToPointer() *GetCurrentProfileMode {
	return &e
}
func (e *GetCurrentProfileMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "live":
		fallthrough
	case "test":
		*e = GetCurrentProfileMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCurrentProfileMode: %v", v)
	}
}

// GetCurrentProfileStatus - The profile status determines whether the profile is able to receive live payments.
//
// * `unverified`: The profile has not been verified yet and can only be used to create test payments.
// * `verified`: The profile has been verified and can be used to create live payments and test payments.
// * `blocked`: The profile is blocked and can no longer be used or changed.
type GetCurrentProfileStatus string

const (
	GetCurrentProfileStatusUnverified GetCurrentProfileStatus = "unverified"
	GetCurrentProfileStatusVerified   GetCurrentProfileStatus = "verified"
	GetCurrentProfileStatusBlocked    GetCurrentProfileStatus = "blocked"
)

func (e GetCurrentProfileStatus) ToPointer() *GetCurrentProfileStatus {
	return &e
}
func (e *GetCurrentProfileStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unverified":
		fallthrough
	case "verified":
		fallthrough
	case "blocked":
		*e = GetCurrentProfileStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCurrentProfileStatus: %v", v)
	}
}

// GetCurrentProfileReviewStatus - The status of the requested changes.
type GetCurrentProfileReviewStatus string

const (
	GetCurrentProfileReviewStatusPending  GetCurrentProfileReviewStatus = "pending"
	GetCurrentProfileReviewStatusRejected GetCurrentProfileReviewStatus = "rejected"
)

func (e GetCurrentProfileReviewStatus) ToPointer() *GetCurrentProfileReviewStatus {
	return &e
}
func (e *GetCurrentProfileReviewStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "rejected":
		*e = GetCurrentProfileReviewStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCurrentProfileReviewStatus: %v", v)
	}
}

// GetCurrentProfileReview - Present if changes have been made that have not yet been approved by Mollie. Changes to test profiles are approved
// automatically, unless a switch to a live profile has been requested. The review object will therefore usually be
// `null` in test mode.
type GetCurrentProfileReview struct {
	// The status of the requested changes.
	Status *GetCurrentProfileReviewStatus `json:"status,omitempty"`
}

func (o *GetCurrentProfileReview) GetStatus() *GetCurrentProfileReviewStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetCurrentProfileSelf - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type GetCurrentProfileSelf struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetCurrentProfileSelf) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetCurrentProfileSelf) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetCurrentProfileDashboard - Link to the profile in the Mollie dashboard.
type GetCurrentProfileDashboard struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetCurrentProfileDashboard) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetCurrentProfileDashboard) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetCurrentProfileChargebacks - The API resource URL of the chargebacks that belong to this profile.
type GetCurrentProfileChargebacks struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetCurrentProfileChargebacks) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetCurrentProfileChargebacks) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetCurrentProfileMethods - The API resource URL of the methods that are enabled for this profile.
type GetCurrentProfileMethods struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetCurrentProfileMethods) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetCurrentProfileMethods) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetCurrentProfilePayments - The API resource URL of the payments that belong to this profile.
type GetCurrentProfilePayments struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetCurrentProfilePayments) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetCurrentProfilePayments) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetCurrentProfileRefunds - The API resource URL of the refunds that belong to this profile.
type GetCurrentProfileRefunds struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetCurrentProfileRefunds) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetCurrentProfileRefunds) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetCurrentProfileCheckoutPreviewURL - The hosted checkout preview URL. You need to be logged in to access this page.
type GetCurrentProfileCheckoutPreviewURL struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetCurrentProfileCheckoutPreviewURL) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetCurrentProfileCheckoutPreviewURL) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetCurrentProfileDocumentation - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type GetCurrentProfileDocumentation struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetCurrentProfileDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetCurrentProfileDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetCurrentProfileLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type GetCurrentProfileLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *GetCurrentProfileSelf `json:"self,omitempty"`
	// Link to the profile in the Mollie dashboard.
	Dashboard *GetCurrentProfileDashboard `json:"dashboard,omitempty"`
	// The API resource URL of the chargebacks that belong to this profile.
	Chargebacks *GetCurrentProfileChargebacks `json:"chargebacks,omitempty"`
	// The API resource URL of the methods that are enabled for this profile.
	Methods *GetCurrentProfileMethods `json:"methods,omitempty"`
	// The API resource URL of the payments that belong to this profile.
	Payments *GetCurrentProfilePayments `json:"payments,omitempty"`
	// The API resource URL of the refunds that belong to this profile.
	Refunds *GetCurrentProfileRefunds `json:"refunds,omitempty"`
	// The hosted checkout preview URL. You need to be logged in to access this page.
	CheckoutPreviewURL *GetCurrentProfileCheckoutPreviewURL `json:"checkoutPreviewUrl,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *GetCurrentProfileDocumentation `json:"documentation,omitempty"`
}

func (o *GetCurrentProfileLinks) GetSelf() *GetCurrentProfileSelf {
	if o == nil {
		return nil
	}
	return o.Self
}

func (o *GetCurrentProfileLinks) GetDashboard() *GetCurrentProfileDashboard {
	if o == nil {
		return nil
	}
	return o.Dashboard
}

func (o *GetCurrentProfileLinks) GetChargebacks() *GetCurrentProfileChargebacks {
	if o == nil {
		return nil
	}
	return o.Chargebacks
}

func (o *GetCurrentProfileLinks) GetMethods() *GetCurrentProfileMethods {
	if o == nil {
		return nil
	}
	return o.Methods
}

func (o *GetCurrentProfileLinks) GetPayments() *GetCurrentProfilePayments {
	if o == nil {
		return nil
	}
	return o.Payments
}

func (o *GetCurrentProfileLinks) GetRefunds() *GetCurrentProfileRefunds {
	if o == nil {
		return nil
	}
	return o.Refunds
}

func (o *GetCurrentProfileLinks) GetCheckoutPreviewURL() *GetCurrentProfileCheckoutPreviewURL {
	if o == nil {
		return nil
	}
	return o.CheckoutPreviewURL
}

func (o *GetCurrentProfileLinks) GetDocumentation() *GetCurrentProfileDocumentation {
	if o == nil {
		return nil
	}
	return o.Documentation
}

// GetCurrentProfileResponseBody - The current profile object. For a complete reference of the profile object, refer to the
// [Get profile](get-profile) endpoint documentation.
type GetCurrentProfileResponseBody struct {
	// Indicates the response contains a profile object. Will always contain the string `profile` for this endpoint.
	Resource *string `json:"resource,omitempty"`
	// The identifier uniquely referring to this profile. Example: `pfl_v9hTwCvYqw`.
	ID *string `json:"id,omitempty"`
	// Whether this entity was created in live mode or in test mode.
	Mode *GetCurrentProfileMode `json:"mode,omitempty"`
	// The profile's name, this will usually reflect the trade name or brand name of the profile's website or
	// application.
	Name *string `json:"name,omitempty"`
	// The URL to the profile's website or application. Only `https` or `http` URLs are allowed. No `@` signs are
	// allowed.
	Website *string `json:"website,omitempty"`
	// The email address associated with the profile's trade name or brand.
	Email *string `json:"email,omitempty"`
	// The phone number associated with the profile's trade name or brand.
	Phone *string `json:"phone,omitempty"`
	// The products or services offered by the profile's website or application.
	Description *string `json:"description,omitempty"`
	// A list of countries where you expect that the majority of the profile's customers reside,
	// in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
	CountriesOfActivity []string `json:"countriesOfActivity,omitempty"`
	// The industry associated with the profile's trade name or brand. Please refer to the
	// [business category list](common-data-types#business-category) for all possible options.
	BusinessCategory *string `json:"businessCategory,omitempty"`
	// The profile status determines whether the profile is able to receive live payments.
	//
	// * `unverified`: The profile has not been verified yet and can only be used to create test payments.
	// * `verified`: The profile has been verified and can be used to create live payments and test payments.
	// * `blocked`: The profile is blocked and can no longer be used or changed.
	Status *GetCurrentProfileStatus `json:"status,omitempty"`
	// Present if changes have been made that have not yet been approved by Mollie. Changes to test profiles are approved
	// automatically, unless a switch to a live profile has been requested. The review object will therefore usually be
	// `null` in test mode.
	Review *GetCurrentProfileReview `json:"review,omitempty"`
	// The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	CreatedAt *string `json:"createdAt,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links *GetCurrentProfileLinks `json:"_links,omitempty"`
}

func (o *GetCurrentProfileResponseBody) GetResource() *string {
	if o == nil {
		return nil
	}
	return o.Resource
}

func (o *GetCurrentProfileResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetCurrentProfileResponseBody) GetMode() *GetCurrentProfileMode {
	if o == nil {
		return nil
	}
	return o.Mode
}

func (o *GetCurrentProfileResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetCurrentProfileResponseBody) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *GetCurrentProfileResponseBody) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *GetCurrentProfileResponseBody) GetPhone() *string {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *GetCurrentProfileResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetCurrentProfileResponseBody) GetCountriesOfActivity() []string {
	if o == nil {
		return nil
	}
	return o.CountriesOfActivity
}

func (o *GetCurrentProfileResponseBody) GetBusinessCategory() *string {
	if o == nil {
		return nil
	}
	return o.BusinessCategory
}

func (o *GetCurrentProfileResponseBody) GetStatus() *GetCurrentProfileStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetCurrentProfileResponseBody) GetReview() *GetCurrentProfileReview {
	if o == nil {
		return nil
	}
	return o.Review
}

func (o *GetCurrentProfileResponseBody) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *GetCurrentProfileResponseBody) GetLinks() *GetCurrentProfileLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type GetCurrentProfileResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The current profile object. For a complete reference of the profile object, refer to the
	// [Get profile](get-profile) endpoint documentation.
	Object *GetCurrentProfileResponseBody
}

func (o *GetCurrentProfileResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetCurrentProfileResponse) GetObject() *GetCurrentProfileResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
