// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type RequestApplePayPaymentSessionRequestBody struct {
	// The validationUrl you got from the
	// [ApplePayValidateMerchant event](https://developer.apple.com/documentation/apple_pay_on_the_web/applepayvalidatemerchantevent).
	//
	// A list of all
	// [valid host names](https://developer.apple.com/documentation/apple_pay_on_the_web/setting_up_your_server)
	// for merchant validation is available. You should white list these in your application and reject any
	// `validationUrl`s that have a host name not in the list.
	ValidationURL string `json:"validationUrl"`
	// The domain of your web shop, that is visible in the browser's location bar. For example
	// `pay.myshop.com`.
	Domain string `json:"domain"`
	// The identifier referring to the [profile](get-profile) this entity belongs to.
	//
	// Most API credentials are linked to a single profile. In these cases the `profileId` can be omitted in the creation
	// request. For organization-level credentials such as OAuth access tokens however, the `profileId` parameter is
	// required.
	ProfileID *string `json:"profileId,omitempty"`
}

func (r *RequestApplePayPaymentSessionRequestBody) GetValidationURL() string {
	if r == nil {
		return ""
	}
	return r.ValidationURL
}

func (r *RequestApplePayPaymentSessionRequestBody) GetDomain() string {
	if r == nil {
		return ""
	}
	return r.Domain
}

func (r *RequestApplePayPaymentSessionRequestBody) GetProfileID() *string {
	if r == nil {
		return nil
	}
	return r.ProfileID
}

type RequestApplePayPaymentSessionRequest struct {
	// A unique key to ensure idempotent requests. This key should be a UUID v4 string.
	IdempotencyKey *string                                   `header:"style=simple,explode=false,name=idempotency-key"`
	RequestBody    *RequestApplePayPaymentSessionRequestBody `request:"mediaType=application/json"`
}

func (r *RequestApplePayPaymentSessionRequest) GetIdempotencyKey() *string {
	if r == nil {
		return nil
	}
	return r.IdempotencyKey
}

func (r *RequestApplePayPaymentSessionRequest) GetRequestBody() *RequestApplePayPaymentSessionRequestBody {
	if r == nil {
		return nil
	}
	return r.RequestBody
}

type RequestApplePayPaymentSessionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The Apple Pay payment session object generated by Apple. This object, as mentioned in the Apple's Documentation,
	// is opaque, so we are not defining a response schema.
	EntitySession map[string]any
}

func (r *RequestApplePayPaymentSessionResponse) GetHTTPMeta() components.HTTPMetadata {
	if r == nil {
		return components.HTTPMetadata{}
	}
	return r.HTTPMeta
}

func (r *RequestApplePayPaymentSessionResponse) GetEntitySession() map[string]any {
	if r == nil {
		return nil
	}
	return r.EntitySession
}
