// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type CancelSubscriptionRequestBody struct {
	// Most API credentials are specifically created for either live mode or test mode. For organization-level credentials
	// such as OAuth access tokens, you can enable test mode by setting `testmode` to `true`.
	//
	// Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
	Testmode *bool `json:"testmode,omitempty"`
}

func (o *CancelSubscriptionRequestBody) GetTestmode() *bool {
	if o == nil {
		return nil
	}
	return o.Testmode
}

type CancelSubscriptionRequest struct {
	// Provide the ID of the related customer.
	CustomerID string `pathParam:"style=simple,explode=false,name=customerId"`
	// Provide the ID of the related subscription.
	SubscriptionID string                         `pathParam:"style=simple,explode=false,name=subscriptionId"`
	RequestBody    *CancelSubscriptionRequestBody `request:"mediaType=application/json"`
}

func (o *CancelSubscriptionRequest) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *CancelSubscriptionRequest) GetSubscriptionID() string {
	if o == nil {
		return ""
	}
	return o.SubscriptionID
}

func (o *CancelSubscriptionRequest) GetRequestBody() *CancelSubscriptionRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type CancelSubscriptionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The updated subscription object with status `canceled`. For a complete reference of the subscription object,
	// refer to the [Get subscription endpoint](get-subscription) documentation.
	SubscriptionResponse *components.SubscriptionResponse
}

func (o *CancelSubscriptionResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CancelSubscriptionResponse) GetSubscriptionResponse() *components.SubscriptionResponse {
	if o == nil {
		return nil
	}
	return o.SubscriptionResponse
}
