// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type PaymentListRoutesRequest struct {
	// Provide the ID of the related payment.
	PaymentID string `pathParam:"style=simple,explode=false,name=paymentId"`
	// Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
	// parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
	// setting the `testmode` query parameter to `true`.
	//
	// Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
	Testmode *bool `queryParam:"style=form,explode=true,name=testmode"`
	// A unique key to ensure idempotent requests. This key should be a UUID v4 string.
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (p *PaymentListRoutesRequest) GetPaymentID() string {
	if p == nil {
		return ""
	}
	return p.PaymentID
}

func (p *PaymentListRoutesRequest) GetTestmode() *bool {
	if p == nil {
		return nil
	}
	return p.Testmode
}

func (p *PaymentListRoutesRequest) GetIdempotencyKey() *string {
	if p == nil {
		return nil
	}
	return p.IdempotencyKey
}

type PaymentListRoutesEmbedded struct {
	// An array of route objects.
	Routes []components.RouteGetResponse `json:"routes"`
}

func (p *PaymentListRoutesEmbedded) GetRoutes() []components.RouteGetResponse {
	if p == nil {
		return []components.RouteGetResponse{}
	}
	return p.Routes
}

// PaymentListRoutesLinks - Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
type PaymentListRoutesLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *components.URLObj `json:"self,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *components.URLObj `json:"documentation,omitempty"`
}

func (p *PaymentListRoutesLinks) GetSelf() *components.URLObj {
	if p == nil {
		return nil
	}
	return p.Self
}

func (p *PaymentListRoutesLinks) GetDocumentation() *components.URLObj {
	if p == nil {
		return nil
	}
	return p.Documentation
}

// PaymentListRoutesResponseBody - A list of route objects.
type PaymentListRoutesResponseBody struct {
	// The number of items in this result set. If more items are available, a `_links.next` URL will be present in the result
	// as well.
	//
	// The maximum number of items per result set is controlled by the `limit` property provided in the request. The default
	// limit is 50 items.
	Count    int64                     `json:"count"`
	Embedded PaymentListRoutesEmbedded `json:"_embedded"`
	// Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
	Links PaymentListRoutesLinks `json:"_links"`
}

func (p *PaymentListRoutesResponseBody) GetCount() int64 {
	if p == nil {
		return 0
	}
	return p.Count
}

func (p *PaymentListRoutesResponseBody) GetEmbedded() PaymentListRoutesEmbedded {
	if p == nil {
		return PaymentListRoutesEmbedded{}
	}
	return p.Embedded
}

func (p *PaymentListRoutesResponseBody) GetLinks() PaymentListRoutesLinks {
	if p == nil {
		return PaymentListRoutesLinks{}
	}
	return p.Links
}

type PaymentListRoutesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of route objects.
	Object *PaymentListRoutesResponseBody
}

func (p *PaymentListRoutesResponse) GetHTTPMeta() components.HTTPMetadata {
	if p == nil {
		return components.HTTPMetadata{}
	}
	return p.HTTPMeta
}

func (p *PaymentListRoutesResponse) GetObject() *PaymentListRoutesResponseBody {
	if p == nil {
		return nil
	}
	return p.Object
}
