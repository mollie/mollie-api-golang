// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type PaymentListRoutesRequest struct {
	// Provide the ID of the related payment.
	PaymentID string `pathParam:"style=simple,explode=false,name=paymentId"`
	// Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
	// parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
	// setting the `testmode` query parameter to `true`.
	//
	// Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
	Testmode *bool `queryParam:"style=form,explode=true,name=testmode"`
}

func (o *PaymentListRoutesRequest) GetPaymentID() string {
	if o == nil {
		return ""
	}
	return o.PaymentID
}

func (o *PaymentListRoutesRequest) GetTestmode() *bool {
	if o == nil {
		return nil
	}
	return o.Testmode
}

// PaymentListRoutesNotFoundDocumentation - The URL to the generic Mollie API error handling guide.
type PaymentListRoutesNotFoundDocumentation struct {
	Href string `json:"href"`
	Type string `json:"type"`
}

func (o *PaymentListRoutesNotFoundDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *PaymentListRoutesNotFoundDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type PaymentListRoutesNotFoundLinks struct {
	// The URL to the generic Mollie API error handling guide.
	Documentation PaymentListRoutesNotFoundDocumentation `json:"documentation"`
}

func (o *PaymentListRoutesNotFoundLinks) GetDocumentation() PaymentListRoutesNotFoundDocumentation {
	if o == nil {
		return PaymentListRoutesNotFoundDocumentation{}
	}
	return o.Documentation
}

// PaymentListRoutesAmount - The amount of the route.
// That amount that will be routed to the specified destination.
type PaymentListRoutesAmount struct {
	// A three-character ISO 4217 currency code.
	Currency string `json:"currency"`
	// A string containing an exact monetary amount in the given currency.
	Value string `json:"value"`
}

func (o *PaymentListRoutesAmount) GetCurrency() string {
	if o == nil {
		return ""
	}
	return o.Currency
}

func (o *PaymentListRoutesAmount) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

// PaymentListRoutesType - The type of destination. Currently only the destination type `organization` is supported.
type PaymentListRoutesType string

const (
	PaymentListRoutesTypeOrganization PaymentListRoutesType = "organization"
)

func (e PaymentListRoutesType) ToPointer() *PaymentListRoutesType {
	return &e
}

// PaymentListRoutesDestination - The destination of the route.
type PaymentListRoutesDestination struct {
	// The type of destination. Currently only the destination type `organization` is supported.
	Type PaymentListRoutesType `json:"type"`
	// Required for destination type `organization`. The ID of the connected organization the funds should be
	// routed to.
	OrganizationID string `json:"organizationId"`
}

func (o *PaymentListRoutesDestination) GetType() PaymentListRoutesType {
	if o == nil {
		return PaymentListRoutesType("")
	}
	return o.Type
}

func (o *PaymentListRoutesDestination) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

// RouteSelf - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type RouteSelf struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *RouteSelf) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *RouteSelf) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// RouteDocumentation - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type RouteDocumentation struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *RouteDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *RouteDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// RouteLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type RouteLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self RouteSelf `json:"self"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation RouteDocumentation `json:"documentation"`
}

func (o *RouteLinks) GetSelf() RouteSelf {
	if o == nil {
		return RouteSelf{}
	}
	return o.Self
}

func (o *RouteLinks) GetDocumentation() RouteDocumentation {
	if o == nil {
		return RouteDocumentation{}
	}
	return o.Documentation
}

type Route struct {
	// Indicates the response contains a route object. Will always contain the string `route` for this endpoint.
	Resource string `json:"resource"`
	// The identifier uniquely referring to this route. Mollie assigns this identifier at route creation time. Mollie
	// will always refer to the route by this ID. Example: `crt_dyARQ3JzCgtPDhU2Pbq3J`.
	ID string `json:"id"`
	// The unique identifier of the payment. For example: `tr_5B8cwPMGnU6qLbRvo7qEZo`.
	// The full payment object can be retrieved via the payment URL in the `_links` object.
	PaymentID string `json:"paymentId"`
	// The amount of the route.
	// That amount that will be routed to the specified destination.
	Amount PaymentListRoutesAmount `json:"amount"`
	// The description of the route. This description is shown in the reports.
	Description string `json:"description"`
	// The destination of the route.
	Destination PaymentListRoutesDestination `json:"destination"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links RouteLinks `json:"_links"`
	// The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	CreatedAt string `json:"createdAt"`
}

func (o *Route) GetResource() string {
	if o == nil {
		return ""
	}
	return o.Resource
}

func (o *Route) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Route) GetPaymentID() string {
	if o == nil {
		return ""
	}
	return o.PaymentID
}

func (o *Route) GetAmount() PaymentListRoutesAmount {
	if o == nil {
		return PaymentListRoutesAmount{}
	}
	return o.Amount
}

func (o *Route) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *Route) GetDestination() PaymentListRoutesDestination {
	if o == nil {
		return PaymentListRoutesDestination{}
	}
	return o.Destination
}

func (o *Route) GetLinks() RouteLinks {
	if o == nil {
		return RouteLinks{}
	}
	return o.Links
}

func (o *Route) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

type PaymentListRoutesEmbedded struct {
	// An array of route objects.
	Routes []Route `json:"routes,omitempty"`
}

func (o *PaymentListRoutesEmbedded) GetRoutes() []Route {
	if o == nil {
		return nil
	}
	return o.Routes
}

// PaymentListRoutesSelf - The URL to the current set of items.
type PaymentListRoutesSelf struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *PaymentListRoutesSelf) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *PaymentListRoutesSelf) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// PaymentListRoutesDocumentation - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type PaymentListRoutesDocumentation struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *PaymentListRoutesDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *PaymentListRoutesDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// PaymentListRoutesLinks - Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
type PaymentListRoutesLinks struct {
	// The URL to the current set of items.
	Self *PaymentListRoutesSelf `json:"self,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *PaymentListRoutesDocumentation `json:"documentation,omitempty"`
}

func (o *PaymentListRoutesLinks) GetSelf() *PaymentListRoutesSelf {
	if o == nil {
		return nil
	}
	return o.Self
}

func (o *PaymentListRoutesLinks) GetDocumentation() *PaymentListRoutesDocumentation {
	if o == nil {
		return nil
	}
	return o.Documentation
}

// PaymentListRoutesResponseBody - A list of route objects.
type PaymentListRoutesResponseBody struct {
	// The number of items in this result set. If more items are available, a `_links.next` URL will be present in the result
	// as well.
	//
	// The maximum number of items per result set is controlled by the `limit` property provided in the request. The default
	// limit is 50 items.
	Count    *int64                     `json:"count,omitempty"`
	Embedded *PaymentListRoutesEmbedded `json:"_embedded,omitempty"`
	// Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
	Links *PaymentListRoutesLinks `json:"_links,omitempty"`
}

func (o *PaymentListRoutesResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *PaymentListRoutesResponseBody) GetEmbedded() *PaymentListRoutesEmbedded {
	if o == nil {
		return nil
	}
	return o.Embedded
}

func (o *PaymentListRoutesResponseBody) GetLinks() *PaymentListRoutesLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type PaymentListRoutesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of route objects.
	Object *PaymentListRoutesResponseBody
}

func (o *PaymentListRoutesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *PaymentListRoutesResponse) GetObject() *PaymentListRoutesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
