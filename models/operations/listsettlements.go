// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type ListSettlementsRequest struct {
	// Provide an ID to start the result set from the item with the given ID and onwards. This allows you to paginate the
	// result set.
	From *string `queryParam:"style=form,explode=true,name=from"`
	// The maximum number of items to return. Defaults to 50 items.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Provide the token of the balance to filter the settlements by. This is
	// the balance token that the settlement was settled to.
	BalanceID *string `queryParam:"style=form,explode=true,name=balanceId"`
	// Provide the year to query the settlements. Must be used combined with `month` parameter
	Year *string `queryParam:"style=form,explode=true,name=year"`
	// Provide the month to query the settlements. Must be used combined with `year` parameter
	Month *string `queryParam:"style=form,explode=true,name=month"`
	// Provides the currencies to retrieve the settlements. It accepts multiple currencies in a comma-separated format.
	Currencies *components.Currencies `queryParam:"style=form,explode=true,name=currencies"`
}

func (o *ListSettlementsRequest) GetFrom() *string {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *ListSettlementsRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListSettlementsRequest) GetBalanceID() *string {
	if o == nil {
		return nil
	}
	return o.BalanceID
}

func (o *ListSettlementsRequest) GetYear() *string {
	if o == nil {
		return nil
	}
	return o.Year
}

func (o *ListSettlementsRequest) GetMonth() *string {
	if o == nil {
		return nil
	}
	return o.Month
}

func (o *ListSettlementsRequest) GetCurrencies() *components.Currencies {
	if o == nil {
		return nil
	}
	return o.Currencies
}

type ListSettlementsEmbedded struct {
	// An array of settlement objects. For a complete reference
	// of the settlement object, refer to the [Get settlement endpoint](get-settlement) documentation.
	Settlements []components.EntitySettlement `json:"settlements,omitempty"`
}

func (o *ListSettlementsEmbedded) GetSettlements() []components.EntitySettlement {
	if o == nil {
		return nil
	}
	return o.Settlements
}

// ListSettlementsResponseBody - A list of settlement objects. For a complete reference of the settlement
// object, refer to the [Get settlement endpoint](get-settlement) documentation.
type ListSettlementsResponseBody struct {
	// The number of items in this result set. If more items are available, a `_links.next` URL will be present in the result
	// as well.
	//
	// The maximum number of items per result set is controlled by the `limit` property provided in the request. The default
	// limit is 50 items.
	Count    *int64                   `json:"count,omitempty"`
	Embedded *ListSettlementsEmbedded `json:"_embedded,omitempty"`
	// Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
	Links *components.ListLinks `json:"_links,omitempty"`
}

func (o *ListSettlementsResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *ListSettlementsResponseBody) GetEmbedded() *ListSettlementsEmbedded {
	if o == nil {
		return nil
	}
	return o.Embedded
}

func (o *ListSettlementsResponseBody) GetLinks() *components.ListLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type ListSettlementsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of settlement objects. For a complete reference of the settlement
	// object, refer to the [Get settlement endpoint](get-settlement) documentation.
	Object *ListSettlementsResponseBody
}

func (o *ListSettlementsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListSettlementsResponse) GetObject() *ListSettlementsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
