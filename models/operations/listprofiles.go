// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type ListProfilesRequest struct {
	// Provide an ID to start the result set from the item with the given ID and onwards. This allows you to paginate the
	// result set.
	From *string `queryParam:"style=form,explode=true,name=from"`
	// The maximum number of items to return. Defaults to 50 items.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// A unique key to ensure idempotent requests. This key should be a UUID v4 string.
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (o *ListProfilesRequest) GetFrom() *string {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *ListProfilesRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListProfilesRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

type ListProfilesEmbedded struct {
	// An array of profile objects.
	Profiles []components.EntityProfileResponse `json:"profiles,omitempty"`
}

func (o *ListProfilesEmbedded) GetProfiles() []components.EntityProfileResponse {
	if o == nil {
		return nil
	}
	return o.Profiles
}

// ListProfilesResponseBody - A list of profile objects.
type ListProfilesResponseBody struct {
	// The number of items in this result set. If more items are available, a `_links.next` URL will be present in the result
	// as well.
	//
	// The maximum number of items per result set is controlled by the `limit` property provided in the request. The default
	// limit is 50 items.
	Count    *int64                `json:"count,omitempty"`
	Embedded *ListProfilesEmbedded `json:"_embedded,omitempty"`
	// Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
	Links *components.ListLinks `json:"_links,omitempty"`
}

func (o *ListProfilesResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *ListProfilesResponseBody) GetEmbedded() *ListProfilesEmbedded {
	if o == nil {
		return nil
	}
	return o.Embedded
}

func (o *ListProfilesResponseBody) GetLinks() *components.ListLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type ListProfilesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of profile objects.
	Object *ListProfilesResponseBody
}

func (o *ListProfilesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListProfilesResponse) GetObject() *ListProfilesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
