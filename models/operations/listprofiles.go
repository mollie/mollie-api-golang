// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type ListProfilesRequest struct {
	// Provide an ID to start the result set from the item with the given ID and onwards. This allows you to paginate the
	// result set.
	From *string `queryParam:"style=form,explode=true,name=from"`
	// The maximum number of items to return. Defaults to 50 items.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
}

func (o *ListProfilesRequest) GetFrom() *string {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *ListProfilesRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

// ListProfilesBadRequestDocumentation - The URL to the generic Mollie API error handling guide.
type ListProfilesBadRequestDocumentation struct {
	Href string `json:"href"`
	Type string `json:"type"`
}

func (o *ListProfilesBadRequestDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ListProfilesBadRequestDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type ListProfilesBadRequestLinks struct {
	// The URL to the generic Mollie API error handling guide.
	Documentation ListProfilesBadRequestDocumentation `json:"documentation"`
}

func (o *ListProfilesBadRequestLinks) GetDocumentation() ListProfilesBadRequestDocumentation {
	if o == nil {
		return ListProfilesBadRequestDocumentation{}
	}
	return o.Documentation
}

// ListProfilesMode - Whether this entity was created in live mode or in test mode.
type ListProfilesMode string

const (
	ListProfilesModeLive ListProfilesMode = "live"
	ListProfilesModeTest ListProfilesMode = "test"
)

func (e ListProfilesMode) ToPointer() *ListProfilesMode {
	return &e
}

// ListProfilesStatus - The profile status determines whether the profile is able to receive live payments.
//
// * `unverified`: The profile has not been verified yet and can only be used to create test payments.
// * `verified`: The profile has been verified and can be used to create live payments and test payments.
// * `blocked`: The profile is blocked and can no longer be used or changed.
type ListProfilesStatus string

const (
	ListProfilesStatusUnverified ListProfilesStatus = "unverified"
	ListProfilesStatusVerified   ListProfilesStatus = "verified"
	ListProfilesStatusBlocked    ListProfilesStatus = "blocked"
)

func (e ListProfilesStatus) ToPointer() *ListProfilesStatus {
	return &e
}

// ListProfilesReviewStatus - The status of the requested changes.
type ListProfilesReviewStatus string

const (
	ListProfilesReviewStatusPending  ListProfilesReviewStatus = "pending"
	ListProfilesReviewStatusRejected ListProfilesReviewStatus = "rejected"
)

func (e ListProfilesReviewStatus) ToPointer() *ListProfilesReviewStatus {
	return &e
}

// ListProfilesReview - Present if changes have been made that have not yet been approved by Mollie. Changes to test profiles are approved
// automatically, unless a switch to a live profile has been requested. The review object will therefore usually be
// `null` in test mode.
type ListProfilesReview struct {
	// The status of the requested changes.
	Status *ListProfilesReviewStatus `json:"status,omitempty"`
}

func (o *ListProfilesReview) GetStatus() *ListProfilesReviewStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

// ProfileSelf - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type ProfileSelf struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *ProfileSelf) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ProfileSelf) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// ListProfilesDashboard - Link to the profile in the Mollie dashboard.
type ListProfilesDashboard struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *ListProfilesDashboard) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ListProfilesDashboard) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// ListProfilesChargebacks - The API resource URL of the chargebacks that belong to this profile.
type ListProfilesChargebacks struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *ListProfilesChargebacks) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ListProfilesChargebacks) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// ListProfilesMethods - The API resource URL of the methods that are enabled for this profile.
type ListProfilesMethods struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *ListProfilesMethods) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ListProfilesMethods) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// ListProfilesPayments - The API resource URL of the payments that belong to this profile.
type ListProfilesPayments struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *ListProfilesPayments) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ListProfilesPayments) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// ListProfilesRefunds - The API resource URL of the refunds that belong to this profile.
type ListProfilesRefunds struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *ListProfilesRefunds) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ListProfilesRefunds) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// ListProfilesCheckoutPreviewURL - The hosted checkout preview URL. You need to be logged in to access this page.
type ListProfilesCheckoutPreviewURL struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *ListProfilesCheckoutPreviewURL) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ListProfilesCheckoutPreviewURL) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// ProfileDocumentation - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type ProfileDocumentation struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *ProfileDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ProfileDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// ProfileLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type ProfileLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *ProfileSelf `json:"self,omitempty"`
	// Link to the profile in the Mollie dashboard.
	Dashboard *ListProfilesDashboard `json:"dashboard,omitempty"`
	// The API resource URL of the chargebacks that belong to this profile.
	Chargebacks *ListProfilesChargebacks `json:"chargebacks,omitempty"`
	// The API resource URL of the methods that are enabled for this profile.
	Methods *ListProfilesMethods `json:"methods,omitempty"`
	// The API resource URL of the payments that belong to this profile.
	Payments *ListProfilesPayments `json:"payments,omitempty"`
	// The API resource URL of the refunds that belong to this profile.
	Refunds *ListProfilesRefunds `json:"refunds,omitempty"`
	// The hosted checkout preview URL. You need to be logged in to access this page.
	CheckoutPreviewURL *ListProfilesCheckoutPreviewURL `json:"checkoutPreviewUrl,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *ProfileDocumentation `json:"documentation,omitempty"`
}

func (o *ProfileLinks) GetSelf() *ProfileSelf {
	if o == nil {
		return nil
	}
	return o.Self
}

func (o *ProfileLinks) GetDashboard() *ListProfilesDashboard {
	if o == nil {
		return nil
	}
	return o.Dashboard
}

func (o *ProfileLinks) GetChargebacks() *ListProfilesChargebacks {
	if o == nil {
		return nil
	}
	return o.Chargebacks
}

func (o *ProfileLinks) GetMethods() *ListProfilesMethods {
	if o == nil {
		return nil
	}
	return o.Methods
}

func (o *ProfileLinks) GetPayments() *ListProfilesPayments {
	if o == nil {
		return nil
	}
	return o.Payments
}

func (o *ProfileLinks) GetRefunds() *ListProfilesRefunds {
	if o == nil {
		return nil
	}
	return o.Refunds
}

func (o *ProfileLinks) GetCheckoutPreviewURL() *ListProfilesCheckoutPreviewURL {
	if o == nil {
		return nil
	}
	return o.CheckoutPreviewURL
}

func (o *ProfileLinks) GetDocumentation() *ProfileDocumentation {
	if o == nil {
		return nil
	}
	return o.Documentation
}

type ListProfilesProfile struct {
	// Indicates the response contains a profile object. Will always contain the string `profile` for this endpoint.
	Resource *string `json:"resource,omitempty"`
	// The identifier uniquely referring to this profile. Example: `pfl_v9hTwCvYqw`.
	ID *string `json:"id,omitempty"`
	// Whether this entity was created in live mode or in test mode.
	Mode *ListProfilesMode `json:"mode,omitempty"`
	// The profile's name, this will usually reflect the trade name or brand name of the profile's website or
	// application.
	Name *string `json:"name,omitempty"`
	// The URL to the profile's website or application. Only `https` or `http` URLs are allowed. No `@` signs are
	// allowed.
	Website *string `json:"website,omitempty"`
	// The email address associated with the profile's trade name or brand.
	Email *string `json:"email,omitempty"`
	// The phone number associated with the profile's trade name or brand.
	Phone *string `json:"phone,omitempty"`
	// The products or services offered by the profile's website or application.
	Description *string `json:"description,omitempty"`
	// A list of countries where you expect that the majority of the profile's customers reside,
	// in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
	CountriesOfActivity []string `json:"countriesOfActivity,omitempty"`
	// The industry associated with the profile's trade name or brand. Please refer to the
	// [business category list](common-data-types#business-category) for all possible options.
	BusinessCategory *string `json:"businessCategory,omitempty"`
	// The profile status determines whether the profile is able to receive live payments.
	//
	// * `unverified`: The profile has not been verified yet and can only be used to create test payments.
	// * `verified`: The profile has been verified and can be used to create live payments and test payments.
	// * `blocked`: The profile is blocked and can no longer be used or changed.
	Status *ListProfilesStatus `json:"status,omitempty"`
	// Present if changes have been made that have not yet been approved by Mollie. Changes to test profiles are approved
	// automatically, unless a switch to a live profile has been requested. The review object will therefore usually be
	// `null` in test mode.
	Review *ListProfilesReview `json:"review,omitempty"`
	// The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	CreatedAt *string `json:"createdAt,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links *ProfileLinks `json:"_links,omitempty"`
}

func (o *ListProfilesProfile) GetResource() *string {
	if o == nil {
		return nil
	}
	return o.Resource
}

func (o *ListProfilesProfile) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ListProfilesProfile) GetMode() *ListProfilesMode {
	if o == nil {
		return nil
	}
	return o.Mode
}

func (o *ListProfilesProfile) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ListProfilesProfile) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *ListProfilesProfile) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *ListProfilesProfile) GetPhone() *string {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *ListProfilesProfile) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ListProfilesProfile) GetCountriesOfActivity() []string {
	if o == nil {
		return nil
	}
	return o.CountriesOfActivity
}

func (o *ListProfilesProfile) GetBusinessCategory() *string {
	if o == nil {
		return nil
	}
	return o.BusinessCategory
}

func (o *ListProfilesProfile) GetStatus() *ListProfilesStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *ListProfilesProfile) GetReview() *ListProfilesReview {
	if o == nil {
		return nil
	}
	return o.Review
}

func (o *ListProfilesProfile) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *ListProfilesProfile) GetLinks() *ProfileLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type ListProfilesEmbedded struct {
	// An array of profile objects.
	Profiles []ListProfilesProfile `json:"profiles,omitempty"`
}

func (o *ListProfilesEmbedded) GetProfiles() []ListProfilesProfile {
	if o == nil {
		return nil
	}
	return o.Profiles
}

// ListProfilesSelf - The URL to the current set of items.
type ListProfilesSelf struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *ListProfilesSelf) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ListProfilesSelf) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// ListProfilesPrevious - The previous set of items, if available.
type ListProfilesPrevious struct {
	// The actual URL string.
	Href *string `json:"href,omitempty"`
	// The content type of the page or endpoint the URL points to.
	Type *string `json:"type,omitempty"`
}

func (o *ListProfilesPrevious) GetHref() *string {
	if o == nil {
		return nil
	}
	return o.Href
}

func (o *ListProfilesPrevious) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

// ListProfilesNext - The next set of items, if available.
type ListProfilesNext struct {
	// The actual URL string.
	Href *string `json:"href,omitempty"`
	// The content type of the page or endpoint the URL points to.
	Type *string `json:"type,omitempty"`
}

func (o *ListProfilesNext) GetHref() *string {
	if o == nil {
		return nil
	}
	return o.Href
}

func (o *ListProfilesNext) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

// ListProfilesDocumentation - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type ListProfilesDocumentation struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *ListProfilesDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ListProfilesDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// ListProfilesLinks - Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
type ListProfilesLinks struct {
	// The URL to the current set of items.
	Self ListProfilesSelf `json:"self"`
	// The previous set of items, if available.
	Previous *ListProfilesPrevious `json:"previous"`
	// The next set of items, if available.
	Next *ListProfilesNext `json:"next"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation ListProfilesDocumentation `json:"documentation"`
}

func (o *ListProfilesLinks) GetSelf() ListProfilesSelf {
	if o == nil {
		return ListProfilesSelf{}
	}
	return o.Self
}

func (o *ListProfilesLinks) GetPrevious() *ListProfilesPrevious {
	if o == nil {
		return nil
	}
	return o.Previous
}

func (o *ListProfilesLinks) GetNext() *ListProfilesNext {
	if o == nil {
		return nil
	}
	return o.Next
}

func (o *ListProfilesLinks) GetDocumentation() ListProfilesDocumentation {
	if o == nil {
		return ListProfilesDocumentation{}
	}
	return o.Documentation
}

// ListProfilesResponseBody - A list of profile objects.
type ListProfilesResponseBody struct {
	// The number of items in this result set. If more items are available, a `_links.next` URL will be present in the result
	// as well.
	//
	// The maximum number of items per result set is controlled by the `limit` property provided in the request. The default
	// limit is 50 items.
	Count    *int64                `json:"count,omitempty"`
	Embedded *ListProfilesEmbedded `json:"_embedded,omitempty"`
	// Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
	Links *ListProfilesLinks `json:"_links,omitempty"`
}

func (o *ListProfilesResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *ListProfilesResponseBody) GetEmbedded() *ListProfilesEmbedded {
	if o == nil {
		return nil
	}
	return o.Embedded
}

func (o *ListProfilesResponseBody) GetLinks() *ListProfilesLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type ListProfilesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of profile objects.
	Object *ListProfilesResponseBody
}

func (o *ListProfilesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListProfilesResponse) GetObject() *ListProfilesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
