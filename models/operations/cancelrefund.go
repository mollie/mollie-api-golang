// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type CancelRefundGlobals struct {
	// Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
	// parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
	// setting the `testmode` query parameter to `true`.
	//
	// Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
	Testmode *bool `queryParam:"style=form,explode=true,name=testmode"`
}

func (c *CancelRefundGlobals) GetTestmode() *bool {
	if c == nil {
		return nil
	}
	return c.Testmode
}

type CancelRefundRequest struct {
	// Provide the ID of the related payment.
	PaymentID string `pathParam:"style=simple,explode=false,name=paymentId"`
	// Provide the ID of the related refund.
	RefundID string `pathParam:"style=simple,explode=false,name=refundId"`
	// Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
	// parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
	// setting the `testmode` query parameter to `true`.
	//
	// Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
	Testmode *bool `queryParam:"style=form,explode=true,name=testmode"`
	// A unique key to ensure idempotent requests. This key should be a UUID v4 string.
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (c *CancelRefundRequest) GetPaymentID() string {
	if c == nil {
		return ""
	}
	return c.PaymentID
}

func (c *CancelRefundRequest) GetRefundID() string {
	if c == nil {
		return ""
	}
	return c.RefundID
}

func (c *CancelRefundRequest) GetTestmode() *bool {
	if c == nil {
		return nil
	}
	return c.Testmode
}

func (c *CancelRefundRequest) GetIdempotencyKey() *string {
	if c == nil {
		return nil
	}
	return c.IdempotencyKey
}

type CancelRefundResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// An empty response if the refund was successfully canceled.
	Any any
}

func (c *CancelRefundResponse) GetHTTPMeta() components.HTTPMetadata {
	if c == nil {
		return components.HTTPMetadata{}
	}
	return c.HTTPMeta
}

func (c *CancelRefundResponse) GetAny() any {
	if c == nil {
		return nil
	}
	return c.Any
}
