// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/mollie/mollie-api-golang/models/components"
)

type CreateProfileRequest struct {
	// The profile's name, this will usually reflect the trade name or brand name of the profile's website or
	// application.
	Name string `json:"name"`
	// The URL to the profile's website or application. Only `https` or `http` URLs are allowed. No `@` signs are
	// allowed.
	Website string `json:"website"`
	// The email address associated with the profile's trade name or brand.
	Email string `json:"email"`
	// The phone number associated with the profile's trade name or brand.
	Phone string `json:"phone"`
	// The products or services offered by the profile's website or application.
	Description *string `json:"description,omitempty"`
	// A list of countries where you expect that the majority of the profile's customers reside,
	// in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
	CountriesOfActivity []string `json:"countriesOfActivity,omitempty"`
	// The industry associated with the profile's trade name or brand. Please refer to the
	// [business category list](common-data-types#business-category) for all possible options.
	BusinessCategory *string `json:"businessCategory,omitempty"`
}

func (o *CreateProfileRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateProfileRequest) GetWebsite() string {
	if o == nil {
		return ""
	}
	return o.Website
}

func (o *CreateProfileRequest) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *CreateProfileRequest) GetPhone() string {
	if o == nil {
		return ""
	}
	return o.Phone
}

func (o *CreateProfileRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateProfileRequest) GetCountriesOfActivity() []string {
	if o == nil {
		return nil
	}
	return o.CountriesOfActivity
}

func (o *CreateProfileRequest) GetBusinessCategory() *string {
	if o == nil {
		return nil
	}
	return o.BusinessCategory
}

// CreateProfileUnprocessableEntityDocumentation - The URL to the generic Mollie API error handling guide.
type CreateProfileUnprocessableEntityDocumentation struct {
	Href string `json:"href"`
	Type string `json:"type"`
}

func (o *CreateProfileUnprocessableEntityDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *CreateProfileUnprocessableEntityDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type CreateProfileUnprocessableEntityLinks struct {
	// The URL to the generic Mollie API error handling guide.
	Documentation CreateProfileUnprocessableEntityDocumentation `json:"documentation"`
}

func (o *CreateProfileUnprocessableEntityLinks) GetDocumentation() CreateProfileUnprocessableEntityDocumentation {
	if o == nil {
		return CreateProfileUnprocessableEntityDocumentation{}
	}
	return o.Documentation
}

// CreateProfileMode - Whether this entity was created in live mode or in test mode.
type CreateProfileMode string

const (
	CreateProfileModeLive CreateProfileMode = "live"
	CreateProfileModeTest CreateProfileMode = "test"
)

func (e CreateProfileMode) ToPointer() *CreateProfileMode {
	return &e
}
func (e *CreateProfileMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "live":
		fallthrough
	case "test":
		*e = CreateProfileMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateProfileMode: %v", v)
	}
}

// CreateProfileStatus - The profile status determines whether the profile is able to receive live payments.
//
// * `unverified`: The profile has not been verified yet and can only be used to create test payments.
// * `verified`: The profile has been verified and can be used to create live payments and test payments.
// * `blocked`: The profile is blocked and can no longer be used or changed.
type CreateProfileStatus string

const (
	CreateProfileStatusUnverified CreateProfileStatus = "unverified"
	CreateProfileStatusVerified   CreateProfileStatus = "verified"
	CreateProfileStatusBlocked    CreateProfileStatus = "blocked"
)

func (e CreateProfileStatus) ToPointer() *CreateProfileStatus {
	return &e
}
func (e *CreateProfileStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unverified":
		fallthrough
	case "verified":
		fallthrough
	case "blocked":
		*e = CreateProfileStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateProfileStatus: %v", v)
	}
}

// CreateProfileReviewStatus - The status of the requested changes.
type CreateProfileReviewStatus string

const (
	CreateProfileReviewStatusPending  CreateProfileReviewStatus = "pending"
	CreateProfileReviewStatusRejected CreateProfileReviewStatus = "rejected"
)

func (e CreateProfileReviewStatus) ToPointer() *CreateProfileReviewStatus {
	return &e
}
func (e *CreateProfileReviewStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "rejected":
		*e = CreateProfileReviewStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateProfileReviewStatus: %v", v)
	}
}

// CreateProfileReview - Present if changes have been made that have not yet been approved by Mollie. Changes to test profiles are approved
// automatically, unless a switch to a live profile has been requested. The review object will therefore usually be
// `null` in test mode.
type CreateProfileReview struct {
	// The status of the requested changes.
	Status *CreateProfileReviewStatus `json:"status,omitempty"`
}

func (o *CreateProfileReview) GetStatus() *CreateProfileReviewStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

// CreateProfileSelf - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type CreateProfileSelf struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *CreateProfileSelf) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *CreateProfileSelf) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// CreateProfileDashboard - Link to the profile in the Mollie dashboard.
type CreateProfileDashboard struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *CreateProfileDashboard) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *CreateProfileDashboard) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// CreateProfileChargebacks - The API resource URL of the chargebacks that belong to this profile.
type CreateProfileChargebacks struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *CreateProfileChargebacks) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *CreateProfileChargebacks) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// CreateProfileMethods - The API resource URL of the methods that are enabled for this profile.
type CreateProfileMethods struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *CreateProfileMethods) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *CreateProfileMethods) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// CreateProfilePayments - The API resource URL of the payments that belong to this profile.
type CreateProfilePayments struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *CreateProfilePayments) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *CreateProfilePayments) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// CreateProfileRefunds - The API resource URL of the refunds that belong to this profile.
type CreateProfileRefunds struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *CreateProfileRefunds) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *CreateProfileRefunds) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// CreateProfileCheckoutPreviewURL - The hosted checkout preview URL. You need to be logged in to access this page.
type CreateProfileCheckoutPreviewURL struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *CreateProfileCheckoutPreviewURL) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *CreateProfileCheckoutPreviewURL) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// CreateProfileDocumentation - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type CreateProfileDocumentation struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *CreateProfileDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *CreateProfileDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// CreateProfileLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type CreateProfileLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *CreateProfileSelf `json:"self,omitempty"`
	// Link to the profile in the Mollie dashboard.
	Dashboard *CreateProfileDashboard `json:"dashboard,omitempty"`
	// The API resource URL of the chargebacks that belong to this profile.
	Chargebacks *CreateProfileChargebacks `json:"chargebacks,omitempty"`
	// The API resource URL of the methods that are enabled for this profile.
	Methods *CreateProfileMethods `json:"methods,omitempty"`
	// The API resource URL of the payments that belong to this profile.
	Payments *CreateProfilePayments `json:"payments,omitempty"`
	// The API resource URL of the refunds that belong to this profile.
	Refunds *CreateProfileRefunds `json:"refunds,omitempty"`
	// The hosted checkout preview URL. You need to be logged in to access this page.
	CheckoutPreviewURL *CreateProfileCheckoutPreviewURL `json:"checkoutPreviewUrl,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *CreateProfileDocumentation `json:"documentation,omitempty"`
}

func (o *CreateProfileLinks) GetSelf() *CreateProfileSelf {
	if o == nil {
		return nil
	}
	return o.Self
}

func (o *CreateProfileLinks) GetDashboard() *CreateProfileDashboard {
	if o == nil {
		return nil
	}
	return o.Dashboard
}

func (o *CreateProfileLinks) GetChargebacks() *CreateProfileChargebacks {
	if o == nil {
		return nil
	}
	return o.Chargebacks
}

func (o *CreateProfileLinks) GetMethods() *CreateProfileMethods {
	if o == nil {
		return nil
	}
	return o.Methods
}

func (o *CreateProfileLinks) GetPayments() *CreateProfilePayments {
	if o == nil {
		return nil
	}
	return o.Payments
}

func (o *CreateProfileLinks) GetRefunds() *CreateProfileRefunds {
	if o == nil {
		return nil
	}
	return o.Refunds
}

func (o *CreateProfileLinks) GetCheckoutPreviewURL() *CreateProfileCheckoutPreviewURL {
	if o == nil {
		return nil
	}
	return o.CheckoutPreviewURL
}

func (o *CreateProfileLinks) GetDocumentation() *CreateProfileDocumentation {
	if o == nil {
		return nil
	}
	return o.Documentation
}

// CreateProfileResponseBody - The newly created profile object.
type CreateProfileResponseBody struct {
	// Indicates the response contains a profile object. Will always contain the string `profile` for this endpoint.
	Resource *string `json:"resource,omitempty"`
	// The identifier uniquely referring to this profile. Example: `pfl_v9hTwCvYqw`.
	ID *string `json:"id,omitempty"`
	// Whether this entity was created in live mode or in test mode.
	Mode *CreateProfileMode `json:"mode,omitempty"`
	// The profile's name, this will usually reflect the trade name or brand name of the profile's website or
	// application.
	Name *string `json:"name,omitempty"`
	// The URL to the profile's website or application. Only `https` or `http` URLs are allowed. No `@` signs are
	// allowed.
	Website *string `json:"website,omitempty"`
	// The email address associated with the profile's trade name or brand.
	Email *string `json:"email,omitempty"`
	// The phone number associated with the profile's trade name or brand.
	Phone *string `json:"phone,omitempty"`
	// The products or services offered by the profile's website or application.
	Description *string `json:"description,omitempty"`
	// A list of countries where you expect that the majority of the profile's customers reside,
	// in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
	CountriesOfActivity []string `json:"countriesOfActivity,omitempty"`
	// The industry associated with the profile's trade name or brand. Please refer to the
	// [business category list](common-data-types#business-category) for all possible options.
	BusinessCategory *string `json:"businessCategory,omitempty"`
	// The profile status determines whether the profile is able to receive live payments.
	//
	// * `unverified`: The profile has not been verified yet and can only be used to create test payments.
	// * `verified`: The profile has been verified and can be used to create live payments and test payments.
	// * `blocked`: The profile is blocked and can no longer be used or changed.
	Status *CreateProfileStatus `json:"status,omitempty"`
	// Present if changes have been made that have not yet been approved by Mollie. Changes to test profiles are approved
	// automatically, unless a switch to a live profile has been requested. The review object will therefore usually be
	// `null` in test mode.
	Review *CreateProfileReview `json:"review,omitempty"`
	// The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	CreatedAt *string `json:"createdAt,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links *CreateProfileLinks `json:"_links,omitempty"`
}

func (o *CreateProfileResponseBody) GetResource() *string {
	if o == nil {
		return nil
	}
	return o.Resource
}

func (o *CreateProfileResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CreateProfileResponseBody) GetMode() *CreateProfileMode {
	if o == nil {
		return nil
	}
	return o.Mode
}

func (o *CreateProfileResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *CreateProfileResponseBody) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *CreateProfileResponseBody) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *CreateProfileResponseBody) GetPhone() *string {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *CreateProfileResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateProfileResponseBody) GetCountriesOfActivity() []string {
	if o == nil {
		return nil
	}
	return o.CountriesOfActivity
}

func (o *CreateProfileResponseBody) GetBusinessCategory() *string {
	if o == nil {
		return nil
	}
	return o.BusinessCategory
}

func (o *CreateProfileResponseBody) GetStatus() *CreateProfileStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *CreateProfileResponseBody) GetReview() *CreateProfileReview {
	if o == nil {
		return nil
	}
	return o.Review
}

func (o *CreateProfileResponseBody) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *CreateProfileResponseBody) GetLinks() *CreateProfileLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type CreateProfileResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The newly created profile object.
	Object *CreateProfileResponseBody
}

func (o *CreateProfileResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateProfileResponse) GetObject() *CreateProfileResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
