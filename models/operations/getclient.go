// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type GetClientRequest struct {
	// Provide the ID of the item you want to perform this operation on.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// This endpoint allows embedding related API items by appending the following values via the `embed` query string
	// parameter.
	Embed *string `queryParam:"style=form,explode=true,name=embed"`
}

func (o *GetClientRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetClientRequest) GetEmbed() *string {
	if o == nil {
		return nil
	}
	return o.Embed
}

// GetClientCommission - The commission object.
type GetClientCommission struct {
	// The commission count.
	Count *int64 `json:"count,omitempty"`
}

func (o *GetClientCommission) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

// GetClientLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type GetClientLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *components.URLObj `json:"self,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Organization *components.URLObj `json:"organization,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Onboarding *components.URLObj `json:"onboarding,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *components.URLObj `json:"documentation,omitempty"`
}

func (o *GetClientLinks) GetSelf() *components.URLObj {
	if o == nil {
		return nil
	}
	return o.Self
}

func (o *GetClientLinks) GetOrganization() *components.URLObj {
	if o == nil {
		return nil
	}
	return o.Organization
}

func (o *GetClientLinks) GetOnboarding() *components.URLObj {
	if o == nil {
		return nil
	}
	return o.Onboarding
}

func (o *GetClientLinks) GetDocumentation() *components.URLObj {
	if o == nil {
		return nil
	}
	return o.Documentation
}

type GetClientEmbedded struct {
	Organization *components.EntityOrganization     `json:"organization,omitempty"`
	Onboarding   *components.EntityOnboardingStatus `json:"onboarding,omitempty"`
	Capabilities *components.EntityCapability       `json:"capabilities,omitempty"`
}

func (o *GetClientEmbedded) GetOrganization() *components.EntityOrganization {
	if o == nil {
		return nil
	}
	return o.Organization
}

func (o *GetClientEmbedded) GetOnboarding() *components.EntityOnboardingStatus {
	if o == nil {
		return nil
	}
	return o.Onboarding
}

func (o *GetClientEmbedded) GetCapabilities() *components.EntityCapability {
	if o == nil {
		return nil
	}
	return o.Capabilities
}

// GetClientResponseBody - The client object.
type GetClientResponseBody struct {
	// Indicates the response contains a client object. Will always contain the string `client` for this resource type.
	Resource *string `json:"resource,omitempty"`
	// The identifier uniquely referring to this client. Example: `org_12345678`.
	ID *string `json:"id,omitempty"`
	// The commission object.
	Commission *GetClientCommission `json:"commission,omitempty"`
	// The date and time the client organization was created, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
	// format.
	OrganizationCreatedAt *string `json:"organizationCreatedAt,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links    *GetClientLinks    `json:"_links,omitempty"`
	Embedded *GetClientEmbedded `json:"_embedded,omitempty"`
}

func (o *GetClientResponseBody) GetResource() *string {
	if o == nil {
		return nil
	}
	return o.Resource
}

func (o *GetClientResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetClientResponseBody) GetCommission() *GetClientCommission {
	if o == nil {
		return nil
	}
	return o.Commission
}

func (o *GetClientResponseBody) GetOrganizationCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationCreatedAt
}

func (o *GetClientResponseBody) GetLinks() *GetClientLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

func (o *GetClientResponseBody) GetEmbedded() *GetClientEmbedded {
	if o == nil {
		return nil
	}
	return o.Embedded
}

type GetClientResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The client object.
	Object *GetClientResponseBody
}

func (o *GetClientResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetClientResponse) GetObject() *GetClientResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
