// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type GetOrganizationRequest struct {
	// Provide the ID of the item you want to perform this operation on.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
	// parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
	// setting the `testmode` query parameter to `true`.
	//
	// Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
	Testmode *bool `queryParam:"style=form,explode=true,name=testmode"`
}

func (o *GetOrganizationRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetOrganizationRequest) GetTestmode() *bool {
	if o == nil {
		return nil
	}
	return o.Testmode
}

// GetOrganizationNotFoundDocumentation - The URL to the generic Mollie API error handling guide.
type GetOrganizationNotFoundDocumentation struct {
	Href string `json:"href"`
	Type string `json:"type"`
}

func (o *GetOrganizationNotFoundDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetOrganizationNotFoundDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetOrganizationNotFoundLinks struct {
	// The URL to the generic Mollie API error handling guide.
	Documentation GetOrganizationNotFoundDocumentation `json:"documentation"`
}

func (o *GetOrganizationNotFoundLinks) GetDocumentation() GetOrganizationNotFoundDocumentation {
	if o == nil {
		return GetOrganizationNotFoundDocumentation{}
	}
	return o.Documentation
}

// GetOrganizationLocale - The preferred locale of the merchant, as set in their Mollie dashboard.
type GetOrganizationLocale string

const (
	GetOrganizationLocaleEnUs GetOrganizationLocale = "en_US"
	GetOrganizationLocaleEnGb GetOrganizationLocale = "en_GB"
	GetOrganizationLocaleNlNl GetOrganizationLocale = "nl_NL"
	GetOrganizationLocaleNlBe GetOrganizationLocale = "nl_BE"
	GetOrganizationLocaleDeDe GetOrganizationLocale = "de_DE"
	GetOrganizationLocaleDeAt GetOrganizationLocale = "de_AT"
	GetOrganizationLocaleDeCh GetOrganizationLocale = "de_CH"
	GetOrganizationLocaleFrFr GetOrganizationLocale = "fr_FR"
	GetOrganizationLocaleFrBe GetOrganizationLocale = "fr_BE"
	GetOrganizationLocaleEsEs GetOrganizationLocale = "es_ES"
	GetOrganizationLocaleCaEs GetOrganizationLocale = "ca_ES"
	GetOrganizationLocalePtPt GetOrganizationLocale = "pt_PT"
	GetOrganizationLocaleItIt GetOrganizationLocale = "it_IT"
	GetOrganizationLocaleNbNo GetOrganizationLocale = "nb_NO"
	GetOrganizationLocaleSvSe GetOrganizationLocale = "sv_SE"
	GetOrganizationLocaleFiFi GetOrganizationLocale = "fi_FI"
	GetOrganizationLocaleDaDk GetOrganizationLocale = "da_DK"
	GetOrganizationLocaleIsIs GetOrganizationLocale = "is_IS"
	GetOrganizationLocaleHuHu GetOrganizationLocale = "hu_HU"
	GetOrganizationLocalePlPl GetOrganizationLocale = "pl_PL"
	GetOrganizationLocaleLvLv GetOrganizationLocale = "lv_LV"
	GetOrganizationLocaleLtLt GetOrganizationLocale = "lt_LT"
)

func (e GetOrganizationLocale) ToPointer() *GetOrganizationLocale {
	return &e
}

// GetOrganizationAddress - The address of the organization.
type GetOrganizationAddress struct {
	// A street and street number.
	StreetAndNumber *string `json:"streetAndNumber,omitempty"`
	// A postal code. This field may be required if the provided country has a postal code system.
	PostalCode *string `json:"postalCode,omitempty"`
	City       *string `json:"city,omitempty"`
	// A country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
	Country *string `json:"country,omitempty"`
}

func (o *GetOrganizationAddress) GetStreetAndNumber() *string {
	if o == nil {
		return nil
	}
	return o.StreetAndNumber
}

func (o *GetOrganizationAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *GetOrganizationAddress) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *GetOrganizationAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

// GetOrganizationVatRegulation - Mollie applies Dutch VAT for merchants based in The Netherlands, British VAT for merchants based in The United
// Kingdom, and shifted VAT for merchants in the European Union.
//
// The field is not present for merchants residing in other countries.
type GetOrganizationVatRegulation string

const (
	GetOrganizationVatRegulationDutch   GetOrganizationVatRegulation = "dutch"
	GetOrganizationVatRegulationBritish GetOrganizationVatRegulation = "british"
	GetOrganizationVatRegulationShifted GetOrganizationVatRegulation = "shifted"
)

func (e GetOrganizationVatRegulation) ToPointer() *GetOrganizationVatRegulation {
	return &e
}

// GetOrganizationSelf - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type GetOrganizationSelf struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetOrganizationSelf) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetOrganizationSelf) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetOrganizationDashboard - Direct link to the organization's Mollie dashboard.
type GetOrganizationDashboard struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetOrganizationDashboard) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetOrganizationDashboard) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetOrganizationDocumentation - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type GetOrganizationDocumentation struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetOrganizationDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetOrganizationDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetOrganizationLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type GetOrganizationLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *GetOrganizationSelf `json:"self,omitempty"`
	// Direct link to the organization's Mollie dashboard.
	Dashboard *GetOrganizationDashboard `json:"dashboard,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *GetOrganizationDocumentation `json:"documentation,omitempty"`
}

func (o *GetOrganizationLinks) GetSelf() *GetOrganizationSelf {
	if o == nil {
		return nil
	}
	return o.Self
}

func (o *GetOrganizationLinks) GetDashboard() *GetOrganizationDashboard {
	if o == nil {
		return nil
	}
	return o.Dashboard
}

func (o *GetOrganizationLinks) GetDocumentation() *GetOrganizationDocumentation {
	if o == nil {
		return nil
	}
	return o.Documentation
}

// GetOrganizationResponseBody - The organization object.
type GetOrganizationResponseBody struct {
	// Indicates the response contains an organization object. Will always contain the string `organization` for this
	// resource type.
	Resource *string `json:"resource,omitempty"`
	// The identifier uniquely referring to this organization. Example: `org_12345678`.
	ID *string `json:"id,omitempty"`
	// The name of the organization.
	Name *string `json:"name,omitempty"`
	// The email address associated with the organization.
	Email *string `json:"email,omitempty"`
	// The preferred locale of the merchant, as set in their Mollie dashboard.
	Locale *GetOrganizationLocale `json:"locale,omitempty"`
	// The address of the organization.
	Address *GetOrganizationAddress `json:"address,omitempty"`
	// The registration number of the organization at their local chamber of commerce.
	RegistrationNumber *string `json:"registrationNumber,omitempty"`
	// The VAT number of the organization, if based in the European Union or in The United Kingdom. VAT numbers are
	// verified against the international registry *VIES*.
	//
	// The field is not present for merchants residing in other countries.
	VatNumber *string `json:"vatNumber,omitempty"`
	// Mollie applies Dutch VAT for merchants based in The Netherlands, British VAT for merchants based in The United
	// Kingdom, and shifted VAT for merchants in the European Union.
	//
	// The field is not present for merchants residing in other countries.
	VatRegulation *GetOrganizationVatRegulation `json:"vatRegulation,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links *GetOrganizationLinks `json:"_links,omitempty"`
}

func (o *GetOrganizationResponseBody) GetResource() *string {
	if o == nil {
		return nil
	}
	return o.Resource
}

func (o *GetOrganizationResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetOrganizationResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetOrganizationResponseBody) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *GetOrganizationResponseBody) GetLocale() *GetOrganizationLocale {
	if o == nil {
		return nil
	}
	return o.Locale
}

func (o *GetOrganizationResponseBody) GetAddress() *GetOrganizationAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *GetOrganizationResponseBody) GetRegistrationNumber() *string {
	if o == nil {
		return nil
	}
	return o.RegistrationNumber
}

func (o *GetOrganizationResponseBody) GetVatNumber() *string {
	if o == nil {
		return nil
	}
	return o.VatNumber
}

func (o *GetOrganizationResponseBody) GetVatRegulation() *GetOrganizationVatRegulation {
	if o == nil {
		return nil
	}
	return o.VatRegulation
}

func (o *GetOrganizationResponseBody) GetLinks() *GetOrganizationLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type GetOrganizationResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The organization object.
	Object *GetOrganizationResponseBody
}

func (o *GetOrganizationResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetOrganizationResponse) GetObject() *GetOrganizationResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
