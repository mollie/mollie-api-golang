// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type ListBalancesRequest struct {
	// Optionally only return balances with the given currency. For example: `EUR`.
	Currency *string `queryParam:"style=form,explode=true,name=currency"`
	// Provide an ID to start the result set from the item with the given ID and onwards. This allows you to paginate the
	// result set.
	From *string `queryParam:"style=form,explode=true,name=from"`
	// The maximum number of items to return. Defaults to 50 items.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
	// parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
	// setting the `testmode` query parameter to `true`.
	//
	// Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
	Testmode *bool `queryParam:"style=form,explode=true,name=testmode"`
	// A unique key to ensure idempotent requests. This key should be a UUID v4 string.
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (l *ListBalancesRequest) GetCurrency() *string {
	if l == nil {
		return nil
	}
	return l.Currency
}

func (l *ListBalancesRequest) GetFrom() *string {
	if l == nil {
		return nil
	}
	return l.From
}

func (l *ListBalancesRequest) GetLimit() *int64 {
	if l == nil {
		return nil
	}
	return l.Limit
}

func (l *ListBalancesRequest) GetTestmode() *bool {
	if l == nil {
		return nil
	}
	return l.Testmode
}

func (l *ListBalancesRequest) GetIdempotencyKey() *string {
	if l == nil {
		return nil
	}
	return l.IdempotencyKey
}

type ListBalancesEmbedded struct {
	// An array of balance objects. For a complete reference of
	// the balance object, refer to the [Get balance endpoint](get-balance) documentation.
	Balances []components.EntityBalance `json:"balances,omitempty"`
}

func (l *ListBalancesEmbedded) GetBalances() []components.EntityBalance {
	if l == nil {
		return nil
	}
	return l.Balances
}

// ListBalancesResponseBody - A list of balance objects. For a complete reference of the balance
// object, refer to the [Get balance endpoint](get-balance) documentation.
type ListBalancesResponseBody struct {
	// The number of items in this result set. If more items are available, a `_links.next` URL will be present in the result
	// as well.
	//
	// The maximum number of items per result set is controlled by the `limit` property provided in the request. The default
	// limit is 50 items.
	Count    *int64                `json:"count,omitempty"`
	Embedded *ListBalancesEmbedded `json:"_embedded,omitempty"`
	// Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
	Links *components.ListLinks `json:"_links,omitempty"`
}

func (l *ListBalancesResponseBody) GetCount() *int64 {
	if l == nil {
		return nil
	}
	return l.Count
}

func (l *ListBalancesResponseBody) GetEmbedded() *ListBalancesEmbedded {
	if l == nil {
		return nil
	}
	return l.Embedded
}

func (l *ListBalancesResponseBody) GetLinks() *components.ListLinks {
	if l == nil {
		return nil
	}
	return l.Links
}

type ListBalancesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of balance objects. For a complete reference of the balance
	// object, refer to the [Get balance endpoint](get-balance) documentation.
	Object *ListBalancesResponseBody
}

func (l *ListBalancesResponse) GetHTTPMeta() components.HTTPMetadata {
	if l == nil {
		return components.HTTPMetadata{}
	}
	return l.HTTPMeta
}

func (l *ListBalancesResponse) GetObject() *ListBalancesResponseBody {
	if l == nil {
		return nil
	}
	return l.Object
}
