// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type GetChargebackRequest struct {
	// Provide the ID of the related payment.
	PaymentID string `pathParam:"style=simple,explode=false,name=paymentId"`
	// Provide the ID of the related chargeback.
	ChargebackID string `pathParam:"style=simple,explode=false,name=chargebackId"`
	// This endpoint allows embedding related API items by appending the following values via the `embed` query string
	// parameter.
	Embed *string `queryParam:"style=form,explode=true,name=embed"`
	// Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
	// parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
	// setting the `testmode` query parameter to `true`.
	//
	// Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
	Testmode *bool `queryParam:"style=form,explode=true,name=testmode"`
}

func (o *GetChargebackRequest) GetPaymentID() string {
	if o == nil {
		return ""
	}
	return o.PaymentID
}

func (o *GetChargebackRequest) GetChargebackID() string {
	if o == nil {
		return ""
	}
	return o.ChargebackID
}

func (o *GetChargebackRequest) GetEmbed() *string {
	if o == nil {
		return nil
	}
	return o.Embed
}

func (o *GetChargebackRequest) GetTestmode() *bool {
	if o == nil {
		return nil
	}
	return o.Testmode
}

type GetChargebackResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The chargeback object.
	EntityChargeback *components.EntityChargeback
}

func (o *GetChargebackResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetChargebackResponse) GetEntityChargeback() *components.EntityChargeback {
	if o == nil {
		return nil
	}
	return o.EntityChargeback
}
