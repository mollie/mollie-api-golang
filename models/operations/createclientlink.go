// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/mollie/mollie-api-golang/models/components"
)

// CreateClientLinkLocale - Preset the language to be used for the login screen, if applicable. For the consent screen, the preferred
// language of the logged in merchant will be used and this parameter is ignored.
//
// When this parameter is omitted, the browser language will be used instead.
type CreateClientLinkLocale string

const (
	CreateClientLinkLocaleEnUs CreateClientLinkLocale = "en_US"
	CreateClientLinkLocaleEnGb CreateClientLinkLocale = "en_GB"
	CreateClientLinkLocaleNlNl CreateClientLinkLocale = "nl_NL"
	CreateClientLinkLocaleNlBe CreateClientLinkLocale = "nl_BE"
	CreateClientLinkLocaleDeDe CreateClientLinkLocale = "de_DE"
	CreateClientLinkLocaleDeAt CreateClientLinkLocale = "de_AT"
	CreateClientLinkLocaleDeCh CreateClientLinkLocale = "de_CH"
	CreateClientLinkLocaleFrFr CreateClientLinkLocale = "fr_FR"
	CreateClientLinkLocaleFrBe CreateClientLinkLocale = "fr_BE"
	CreateClientLinkLocaleEsEs CreateClientLinkLocale = "es_ES"
	CreateClientLinkLocaleCaEs CreateClientLinkLocale = "ca_ES"
	CreateClientLinkLocalePtPt CreateClientLinkLocale = "pt_PT"
	CreateClientLinkLocaleItIt CreateClientLinkLocale = "it_IT"
	CreateClientLinkLocaleNbNo CreateClientLinkLocale = "nb_NO"
	CreateClientLinkLocaleSvSe CreateClientLinkLocale = "sv_SE"
	CreateClientLinkLocaleFiFi CreateClientLinkLocale = "fi_FI"
	CreateClientLinkLocaleDaDk CreateClientLinkLocale = "da_DK"
	CreateClientLinkLocaleIsIs CreateClientLinkLocale = "is_IS"
	CreateClientLinkLocaleHuHu CreateClientLinkLocale = "hu_HU"
	CreateClientLinkLocalePlPl CreateClientLinkLocale = "pl_PL"
	CreateClientLinkLocaleLvLv CreateClientLinkLocale = "lv_LV"
	CreateClientLinkLocaleLtLt CreateClientLinkLocale = "lt_LT"
)

func (e CreateClientLinkLocale) ToPointer() *CreateClientLinkLocale {
	return &e
}
func (e *CreateClientLinkLocale) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "en_US":
		fallthrough
	case "en_GB":
		fallthrough
	case "nl_NL":
		fallthrough
	case "nl_BE":
		fallthrough
	case "de_DE":
		fallthrough
	case "de_AT":
		fallthrough
	case "de_CH":
		fallthrough
	case "fr_FR":
		fallthrough
	case "fr_BE":
		fallthrough
	case "es_ES":
		fallthrough
	case "ca_ES":
		fallthrough
	case "pt_PT":
		fallthrough
	case "it_IT":
		fallthrough
	case "nb_NO":
		fallthrough
	case "sv_SE":
		fallthrough
	case "fi_FI":
		fallthrough
	case "da_DK":
		fallthrough
	case "is_IS":
		fallthrough
	case "hu_HU":
		fallthrough
	case "pl_PL":
		fallthrough
	case "lv_LV":
		fallthrough
	case "lt_LT":
		*e = CreateClientLinkLocale(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateClientLinkLocale: %v", v)
	}
}

// Owner - Personal data of your customer.
type Owner struct {
	// The email address of your customer.
	Email string `json:"email"`
	// The given name (first name) of your customer.
	GivenName string `json:"givenName"`
	// The family name (surname) of your customer.
	FamilyName string `json:"familyName"`
	// Preset the language to be used for the login screen, if applicable. For the consent screen, the preferred
	// language of the logged in merchant will be used and this parameter is ignored.
	//
	// When this parameter is omitted, the browser language will be used instead.
	Locale *CreateClientLinkLocale `json:"locale,omitempty"`
}

func (o *Owner) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *Owner) GetGivenName() string {
	if o == nil {
		return ""
	}
	return o.GivenName
}

func (o *Owner) GetFamilyName() string {
	if o == nil {
		return ""
	}
	return o.FamilyName
}

func (o *Owner) GetLocale() *CreateClientLinkLocale {
	if o == nil {
		return nil
	}
	return o.Locale
}

// CreateClientLinkAddress - Address of the organization.
type CreateClientLinkAddress struct {
	// The street name and house number of the organization.
	StreetAndNumber *string `json:"streetAndNumber,omitempty"`
	// The postal code of the organization. Required if a street address is provided and if the country has a postal
	// code system.
	PostalCode *string `json:"postalCode,omitempty"`
	// The city of the organization. Required if a street address is provided.
	City *string `json:"city,omitempty"`
	// The country of the address in
	// [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
	Country string `json:"country"`
}

func (o *CreateClientLinkAddress) GetStreetAndNumber() *string {
	if o == nil {
		return nil
	}
	return o.StreetAndNumber
}

func (o *CreateClientLinkAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *CreateClientLinkAddress) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *CreateClientLinkAddress) GetCountry() string {
	if o == nil {
		return ""
	}
	return o.Country
}

type CreateClientLinkRequest struct {
	// Personal data of your customer.
	Owner Owner `json:"owner"`
	// Name of the organization.
	Name string `json:"name"`
	// Address of the organization.
	Address CreateClientLinkAddress `json:"address"`
	// The registration number of the organization at their local chamber of commerce.
	RegistrationNumber *string `json:"registrationNumber,omitempty"`
	// The VAT number of the organization, if based in the European Union. VAT numbers are verified against the
	// international registry *VIES*.
	VatNumber *string `json:"vatNumber,omitempty"`
}

func (o *CreateClientLinkRequest) GetOwner() Owner {
	if o == nil {
		return Owner{}
	}
	return o.Owner
}

func (o *CreateClientLinkRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateClientLinkRequest) GetAddress() CreateClientLinkAddress {
	if o == nil {
		return CreateClientLinkAddress{}
	}
	return o.Address
}

func (o *CreateClientLinkRequest) GetRegistrationNumber() *string {
	if o == nil {
		return nil
	}
	return o.RegistrationNumber
}

func (o *CreateClientLinkRequest) GetVatNumber() *string {
	if o == nil {
		return nil
	}
	return o.VatNumber
}

// CreateClientLinkUnprocessableEntityDocumentation - The URL to the generic Mollie API error handling guide.
type CreateClientLinkUnprocessableEntityDocumentation struct {
	Href string `json:"href"`
	Type string `json:"type"`
}

func (o *CreateClientLinkUnprocessableEntityDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *CreateClientLinkUnprocessableEntityDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type CreateClientLinkUnprocessableEntityLinks struct {
	// The URL to the generic Mollie API error handling guide.
	Documentation CreateClientLinkUnprocessableEntityDocumentation `json:"documentation"`
}

func (o *CreateClientLinkUnprocessableEntityLinks) GetDocumentation() CreateClientLinkUnprocessableEntityDocumentation {
	if o == nil {
		return CreateClientLinkUnprocessableEntityDocumentation{}
	}
	return o.Documentation
}

// CreateClientLinkNotFoundDocumentation - The URL to the generic Mollie API error handling guide.
type CreateClientLinkNotFoundDocumentation struct {
	Href string `json:"href"`
	Type string `json:"type"`
}

func (o *CreateClientLinkNotFoundDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *CreateClientLinkNotFoundDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type CreateClientLinkNotFoundLinks struct {
	// The URL to the generic Mollie API error handling guide.
	Documentation CreateClientLinkNotFoundDocumentation `json:"documentation"`
}

func (o *CreateClientLinkNotFoundLinks) GetDocumentation() CreateClientLinkNotFoundDocumentation {
	if o == nil {
		return CreateClientLinkNotFoundDocumentation{}
	}
	return o.Documentation
}

// CreateClientLinkSelf - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type CreateClientLinkSelf struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *CreateClientLinkSelf) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *CreateClientLinkSelf) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// ClientLink - The link you can send your customer to, where they can either log in and link their account, or sign up and
// proceed with onboarding.
type ClientLink struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *ClientLink) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ClientLink) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// CreateClientLinkDocumentation - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type CreateClientLinkDocumentation struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *CreateClientLinkDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *CreateClientLinkDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// CreateClientLinkLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type CreateClientLinkLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *CreateClientLinkSelf `json:"self,omitempty"`
	// The link you can send your customer to, where they can either log in and link their account, or sign up and
	// proceed with onboarding.
	ClientLink *ClientLink `json:"clientLink,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *CreateClientLinkDocumentation `json:"documentation,omitempty"`
}

func (o *CreateClientLinkLinks) GetSelf() *CreateClientLinkSelf {
	if o == nil {
		return nil
	}
	return o.Self
}

func (o *CreateClientLinkLinks) GetClientLink() *ClientLink {
	if o == nil {
		return nil
	}
	return o.ClientLink
}

func (o *CreateClientLinkLinks) GetDocumentation() *CreateClientLinkDocumentation {
	if o == nil {
		return nil
	}
	return o.Documentation
}

// CreateClientLinkResponseBody - The newly created client link object.
type CreateClientLinkResponseBody struct {
	// Indicates the response contains a client link object. Will always contain the string `client-link` for this
	// endpoint.
	Resource *string `json:"resource,omitempty"`
	// The identifier uniquely referring to this client link. Example: `cl_vZCnNQsV2UtfXxYifWKWH`.
	ID *string `json:"id,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links *CreateClientLinkLinks `json:"_links,omitempty"`
}

func (o *CreateClientLinkResponseBody) GetResource() *string {
	if o == nil {
		return nil
	}
	return o.Resource
}

func (o *CreateClientLinkResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CreateClientLinkResponseBody) GetLinks() *CreateClientLinkLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type CreateClientLinkResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The newly created client link object.
	Object *CreateClientLinkResponseBody
}

func (o *CreateClientLinkResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateClientLinkResponse) GetObject() *CreateClientLinkResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
