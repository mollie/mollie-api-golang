// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type RevokeMandateRequestBody struct {
	// Most API credentials are specifically created for either live mode or test mode. For organization-level credentials
	// such as OAuth access tokens, you can enable test mode by setting `testmode` to `true`.
	//
	// Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
	Testmode *bool `json:"testmode,omitempty"`
}

func (r *RevokeMandateRequestBody) GetTestmode() *bool {
	if r == nil {
		return nil
	}
	return r.Testmode
}

type RevokeMandateRequest struct {
	// Provide the ID of the related customer.
	CustomerID string `pathParam:"style=simple,explode=false,name=customerId"`
	// Provide the ID of the related mandate.
	MandateID string `pathParam:"style=simple,explode=false,name=mandateId"`
	// A unique key to ensure idempotent requests. This key should be a UUID v4 string.
	IdempotencyKey *string                   `header:"style=simple,explode=false,name=idempotency-key"`
	RequestBody    *RevokeMandateRequestBody `request:"mediaType=application/json"`
}

func (r *RevokeMandateRequest) GetCustomerID() string {
	if r == nil {
		return ""
	}
	return r.CustomerID
}

func (r *RevokeMandateRequest) GetMandateID() string {
	if r == nil {
		return ""
	}
	return r.MandateID
}

func (r *RevokeMandateRequest) GetIdempotencyKey() *string {
	if r == nil {
		return nil
	}
	return r.IdempotencyKey
}

func (r *RevokeMandateRequest) GetRequestBody() *RevokeMandateRequestBody {
	if r == nil {
		return nil
	}
	return r.RequestBody
}

type RevokeMandateResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// An empty response.
	Any any
}

func (r *RevokeMandateResponse) GetHTTPMeta() components.HTTPMetadata {
	if r == nil {
		return components.HTTPMetadata{}
	}
	return r.HTTPMeta
}

func (r *RevokeMandateResponse) GetAny() any {
	if r == nil {
		return nil
	}
	return r.Any
}
