// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type ListCapabilitiesEmbedded struct {
	Capabilities []components.EntityCapability `json:"capabilities,omitempty"`
}

func (o *ListCapabilitiesEmbedded) GetCapabilities() []components.EntityCapability {
	if o == nil {
		return nil
	}
	return o.Capabilities
}

type Documentation struct {
	Href *string `json:"href,omitempty"`
	Type *string `json:"type,omitempty"`
}

func (o *Documentation) GetHref() *string {
	if o == nil {
		return nil
	}
	return o.Href
}

func (o *Documentation) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

type ListCapabilitiesLinks struct {
	Documentation *Documentation `json:"documentation,omitempty"`
}

func (o *ListCapabilitiesLinks) GetDocumentation() *Documentation {
	if o == nil {
		return nil
	}
	return o.Documentation
}

// ListCapabilitiesResponseBody - A list of capabilities.
type ListCapabilitiesResponseBody struct {
	// The number of items in this result set.
	Count    *int64                    `json:"count,omitempty"`
	Embedded *ListCapabilitiesEmbedded `json:"_embedded,omitempty"`
	Links    *ListCapabilitiesLinks    `json:"_links,omitempty"`
}

func (o *ListCapabilitiesResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *ListCapabilitiesResponseBody) GetEmbedded() *ListCapabilitiesEmbedded {
	if o == nil {
		return nil
	}
	return o.Embedded
}

func (o *ListCapabilitiesResponseBody) GetLinks() *ListCapabilitiesLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type ListCapabilitiesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of capabilities.
	Object *ListCapabilitiesResponseBody
}

func (o *ListCapabilitiesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListCapabilitiesResponse) GetObject() *ListCapabilitiesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
