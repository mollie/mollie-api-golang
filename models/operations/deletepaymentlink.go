// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type DeletePaymentLinkRequestBody struct {
	// Most API credentials are specifically created for either live mode or test mode. For organization-level credentials
	// such as OAuth access tokens, you can enable test mode by setting `testmode` to `true`.
	//
	// Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
	Testmode *bool `json:"testmode,omitempty"`
}

func (d *DeletePaymentLinkRequestBody) GetTestmode() *bool {
	if d == nil {
		return nil
	}
	return d.Testmode
}

type DeletePaymentLinkRequest struct {
	// Provide the ID of the related payment link.
	PaymentLinkID string `pathParam:"style=simple,explode=false,name=paymentLinkId"`
	// A unique key to ensure idempotent requests. This key should be a UUID v4 string.
	IdempotencyKey *string                       `header:"style=simple,explode=false,name=idempotency-key"`
	RequestBody    *DeletePaymentLinkRequestBody `request:"mediaType=application/json"`
}

func (d *DeletePaymentLinkRequest) GetPaymentLinkID() string {
	if d == nil {
		return ""
	}
	return d.PaymentLinkID
}

func (d *DeletePaymentLinkRequest) GetIdempotencyKey() *string {
	if d == nil {
		return nil
	}
	return d.IdempotencyKey
}

func (d *DeletePaymentLinkRequest) GetRequestBody() *DeletePaymentLinkRequestBody {
	if d == nil {
		return nil
	}
	return d.RequestBody
}

type DeletePaymentLinkResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// An empty response.
	Any any
}

func (d *DeletePaymentLinkResponse) GetHTTPMeta() components.HTTPMetadata {
	if d == nil {
		return components.HTTPMetadata{}
	}
	return d.HTTPMeta
}

func (d *DeletePaymentLinkResponse) GetAny() any {
	if d == nil {
		return nil
	}
	return d.Any
}
