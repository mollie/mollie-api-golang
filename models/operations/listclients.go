// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type ListClientsRequest struct {
	// This endpoint allows embedding related API items by appending the following values via the `embed` query string
	// parameter.
	Embed *string `queryParam:"style=form,explode=true,name=embed"`
	// Provide an ID to start the result set from the item with the given ID and onwards. This allows you to paginate the
	// result set.
	From *string `queryParam:"style=form,explode=true,name=from"`
	// The maximum number of items to return. Defaults to 50 items.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// A unique key to ensure idempotent requests. This key should be a UUID v4 string.
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (l *ListClientsRequest) GetEmbed() *string {
	if l == nil {
		return nil
	}
	return l.Embed
}

func (l *ListClientsRequest) GetFrom() *string {
	if l == nil {
		return nil
	}
	return l.From
}

func (l *ListClientsRequest) GetLimit() *int64 {
	if l == nil {
		return nil
	}
	return l.Limit
}

func (l *ListClientsRequest) GetIdempotencyKey() *string {
	if l == nil {
		return nil
	}
	return l.IdempotencyKey
}

// ListClientsCommission - The commission object.
type ListClientsCommission struct {
	// The commission count.
	Count *int64 `json:"count,omitempty"`
}

func (l *ListClientsCommission) GetCount() *int64 {
	if l == nil {
		return nil
	}
	return l.Count
}

// ListClientsLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type ListClientsLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *components.URLObj `json:"self,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Organization *components.URLObj `json:"organization,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Onboarding *components.URLObj `json:"onboarding,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *components.URLObj `json:"documentation,omitempty"`
}

func (l *ListClientsLinks) GetSelf() *components.URLObj {
	if l == nil {
		return nil
	}
	return l.Self
}

func (l *ListClientsLinks) GetOrganization() *components.URLObj {
	if l == nil {
		return nil
	}
	return l.Organization
}

func (l *ListClientsLinks) GetOnboarding() *components.URLObj {
	if l == nil {
		return nil
	}
	return l.Onboarding
}

func (l *ListClientsLinks) GetDocumentation() *components.URLObj {
	if l == nil {
		return nil
	}
	return l.Documentation
}

type ClientEmbedded struct {
	Organization *components.EntityOrganization     `json:"organization,omitempty"`
	Onboarding   *components.EntityOnboardingStatus `json:"onboarding,omitempty"`
	Capabilities *components.EntityCapability       `json:"capabilities,omitempty"`
}

func (c *ClientEmbedded) GetOrganization() *components.EntityOrganization {
	if c == nil {
		return nil
	}
	return c.Organization
}

func (c *ClientEmbedded) GetOnboarding() *components.EntityOnboardingStatus {
	if c == nil {
		return nil
	}
	return c.Onboarding
}

func (c *ClientEmbedded) GetCapabilities() *components.EntityCapability {
	if c == nil {
		return nil
	}
	return c.Capabilities
}

type Client struct {
	// Indicates the response contains a client object. Will always contain the string `client` for this resource type.
	Resource *string `json:"resource,omitempty"`
	// The identifier uniquely referring to this client. Example: `org_12345678`.
	ID *string `json:"id,omitempty"`
	// The commission object.
	Commission *ListClientsCommission `json:"commission,omitempty"`
	// The date and time the client organization was created, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
	// format.
	OrganizationCreatedAt *string `json:"organizationCreatedAt,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links    *ListClientsLinks `json:"_links,omitempty"`
	Embedded *ClientEmbedded   `json:"_embedded,omitempty"`
}

func (c *Client) GetResource() *string {
	if c == nil {
		return nil
	}
	return c.Resource
}

func (c *Client) GetID() *string {
	if c == nil {
		return nil
	}
	return c.ID
}

func (c *Client) GetCommission() *ListClientsCommission {
	if c == nil {
		return nil
	}
	return c.Commission
}

func (c *Client) GetOrganizationCreatedAt() *string {
	if c == nil {
		return nil
	}
	return c.OrganizationCreatedAt
}

func (c *Client) GetLinks() *ListClientsLinks {
	if c == nil {
		return nil
	}
	return c.Links
}

func (c *Client) GetEmbedded() *ClientEmbedded {
	if c == nil {
		return nil
	}
	return c.Embedded
}

type ListClientsEmbedded struct {
	// An array of client objects. For a complete reference of the client object, refer to the
	// [Get client endpoint](get-client) documentation.
	Clients []Client `json:"clients,omitempty"`
}

func (l *ListClientsEmbedded) GetClients() []Client {
	if l == nil {
		return nil
	}
	return l.Clients
}

// ListClientsResponseBody - A list of client objects. For a complete reference of the client object, refer to the
// [Get client endpoint](get-client) documentation.
type ListClientsResponseBody struct {
	// The number of items in this result set. If more items are available, a `_links.next` URL will be present in the result
	// as well.
	//
	// The maximum number of items per result set is controlled by the `limit` property provided in the request. The default
	// limit is 50 items.
	Count    *int64               `json:"count,omitempty"`
	Embedded *ListClientsEmbedded `json:"_embedded,omitempty"`
	// Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
	Links *components.ListLinks `json:"_links,omitempty"`
}

func (l *ListClientsResponseBody) GetCount() *int64 {
	if l == nil {
		return nil
	}
	return l.Count
}

func (l *ListClientsResponseBody) GetEmbedded() *ListClientsEmbedded {
	if l == nil {
		return nil
	}
	return l.Embedded
}

func (l *ListClientsResponseBody) GetLinks() *components.ListLinks {
	if l == nil {
		return nil
	}
	return l.Links
}

type ListClientsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of client objects. For a complete reference of the client object, refer to the
	// [Get client endpoint](get-client) documentation.
	Object *ListClientsResponseBody
}

func (l *ListClientsResponse) GetHTTPMeta() components.HTTPMetadata {
	if l == nil {
		return components.HTTPMetadata{}
	}
	return l.HTTPMeta
}

func (l *ListClientsResponse) GetObject() *ListClientsResponseBody {
	if l == nil {
		return nil
	}
	return l.Object
}
