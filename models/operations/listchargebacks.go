// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type ListChargebacksRequest struct {
	// Provide the ID of the related payment.
	PaymentID string `pathParam:"style=simple,explode=false,name=paymentId"`
	// Provide an ID to start the result set from the item with the given ID and onwards. This allows you to paginate the
	// result set.
	From *string `queryParam:"style=form,explode=true,name=from"`
	// The maximum number of items to return. Defaults to 50 items.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// This endpoint allows embedding related API items by appending the following values via the `embed` query string
	// parameter.
	Embed *string `queryParam:"style=form,explode=true,name=embed"`
	// Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
	// parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
	// setting the `testmode` query parameter to `true`.
	//
	// Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
	Testmode *bool `queryParam:"style=form,explode=true,name=testmode"`
}

func (o *ListChargebacksRequest) GetPaymentID() string {
	if o == nil {
		return ""
	}
	return o.PaymentID
}

func (o *ListChargebacksRequest) GetFrom() *string {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *ListChargebacksRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListChargebacksRequest) GetEmbed() *string {
	if o == nil {
		return nil
	}
	return o.Embed
}

func (o *ListChargebacksRequest) GetTestmode() *bool {
	if o == nil {
		return nil
	}
	return o.Testmode
}

type ListChargebacksEmbedded struct {
	// A list of chargeback objects.
	Chargebacks []components.EntityChargeback `json:"chargebacks,omitempty"`
}

func (o *ListChargebacksEmbedded) GetChargebacks() []components.EntityChargeback {
	if o == nil {
		return nil
	}
	return o.Chargebacks
}

// ListChargebacksResponseBody - A list of chargeback objects.
type ListChargebacksResponseBody struct {
	// The number of items in this result set. If more items are available, a `_links.next` URL will be present in the result
	// as well.
	//
	// The maximum number of items per result set is controlled by the `limit` property provided in the request. The default
	// limit is 50 items.
	Count    *int64                   `json:"count,omitempty"`
	Embedded *ListChargebacksEmbedded `json:"_embedded,omitempty"`
	// Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
	Links *components.ListLinks `json:"_links,omitempty"`
}

func (o *ListChargebacksResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *ListChargebacksResponseBody) GetEmbedded() *ListChargebacksEmbedded {
	if o == nil {
		return nil
	}
	return o.Embedded
}

func (o *ListChargebacksResponseBody) GetLinks() *components.ListLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type ListChargebacksResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of chargeback objects.
	Object *ListChargebacksResponseBody
}

func (o *ListChargebacksResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListChargebacksResponse) GetObject() *ListChargebacksResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
