// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/mollie/mollie-api-golang/models/components"
)

// ListWebhooksSort - Used for setting the direction of the result set. Defaults to descending order, meaning the results are ordered from
// newest to oldest.
type ListWebhooksSort string

const (
	ListWebhooksSortAsc  ListWebhooksSort = "asc"
	ListWebhooksSortDesc ListWebhooksSort = "desc"
)

func (e ListWebhooksSort) ToPointer() *ListWebhooksSort {
	return &e
}
func (e *ListWebhooksSort) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = ListWebhooksSort(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListWebhooksSort: %v", v)
	}
}

// ListWebhooksEventTypes - Used to filter out only the webhooks that are subscribed to certain types of events.
type ListWebhooksEventTypes string

const (
	ListWebhooksEventTypesPaymentLinkPaid           ListWebhooksEventTypes = "payment-link.paid"
	ListWebhooksEventTypesBalanceTransactionCreated ListWebhooksEventTypes = "balance-transaction.created"
	ListWebhooksEventTypesSalesInvoiceCreated       ListWebhooksEventTypes = "sales-invoice.created"
	ListWebhooksEventTypesSalesInvoiceIssued        ListWebhooksEventTypes = "sales-invoice.issued"
	ListWebhooksEventTypesSalesInvoiceCanceled      ListWebhooksEventTypes = "sales-invoice.canceled"
	ListWebhooksEventTypesSalesInvoicePaid          ListWebhooksEventTypes = "sales-invoice.paid"
)

func (e ListWebhooksEventTypes) ToPointer() *ListWebhooksEventTypes {
	return &e
}
func (e *ListWebhooksEventTypes) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "payment-link.paid":
		fallthrough
	case "balance-transaction.created":
		fallthrough
	case "sales-invoice.created":
		fallthrough
	case "sales-invoice.issued":
		fallthrough
	case "sales-invoice.canceled":
		fallthrough
	case "sales-invoice.paid":
		*e = ListWebhooksEventTypes(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListWebhooksEventTypes: %v", v)
	}
}

type ListWebhooksRequest struct {
	// Provide an ID to start the result set from the item with the given ID and onwards. This allows you to paginate the
	// result set.
	From *string `queryParam:"style=form,explode=true,name=from"`
	// The maximum number of items to return. Defaults to 50 items.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Used for setting the direction of the result set. Defaults to descending order, meaning the results are ordered from
	// newest to oldest.
	Sort *ListWebhooksSort `queryParam:"style=form,explode=true,name=sort"`
	// Used to filter out only the webhooks that are subscribed to certain types of events.
	EventTypes *ListWebhooksEventTypes `queryParam:"style=form,explode=true,name=eventTypes"`
	// Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
	// parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
	// setting the `testmode` query parameter to `true`.
	//
	// Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
	Testmode *bool `queryParam:"style=form,explode=true,name=testmode"`
}

func (o *ListWebhooksRequest) GetFrom() *string {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *ListWebhooksRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListWebhooksRequest) GetSort() *ListWebhooksSort {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListWebhooksRequest) GetEventTypes() *ListWebhooksEventTypes {
	if o == nil {
		return nil
	}
	return o.EventTypes
}

func (o *ListWebhooksRequest) GetTestmode() *bool {
	if o == nil {
		return nil
	}
	return o.Testmode
}

// ListWebhooksBadRequestDocumentation - The URL to the generic Mollie API error handling guide.
type ListWebhooksBadRequestDocumentation struct {
	Href string `json:"href"`
	Type string `json:"type"`
}

func (o *ListWebhooksBadRequestDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ListWebhooksBadRequestDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type ListWebhooksBadRequestLinks struct {
	// The URL to the generic Mollie API error handling guide.
	Documentation ListWebhooksBadRequestDocumentation `json:"documentation"`
}

func (o *ListWebhooksBadRequestLinks) GetDocumentation() ListWebhooksBadRequestDocumentation {
	if o == nil {
		return ListWebhooksBadRequestDocumentation{}
	}
	return o.Documentation
}

// ListWebhooksStatus - The subscription's current status.
type ListWebhooksStatus string

const (
	ListWebhooksStatusEnabled  ListWebhooksStatus = "enabled"
	ListWebhooksStatusBlocked  ListWebhooksStatus = "blocked"
	ListWebhooksStatusDisabled ListWebhooksStatus = "disabled"
	ListWebhooksStatusDeleted  ListWebhooksStatus = "deleted"
)

func (e ListWebhooksStatus) ToPointer() *ListWebhooksStatus {
	return &e
}

// ListWebhooksMode - The subscription's mode.
type ListWebhooksMode string

const (
	ListWebhooksModeLive ListWebhooksMode = "live"
	ListWebhooksModeTest ListWebhooksMode = "test"
)

func (e ListWebhooksMode) ToPointer() *ListWebhooksMode {
	return &e
}

type Webhook struct {
	// Indicates the response contains a webhook subscription object.
	// Will always contain the string `webhook` for this endpoint.
	Resource *string `json:"resource,omitempty"`
	// The identifier uniquely referring to this subscription.
	ID *string `json:"id,omitempty"`
	// The subscription's events destination.
	URL *string `json:"url,omitempty"`
	// The identifier uniquely referring to the profile that created the subscription.
	ProfileID *string `json:"profileId,omitempty"`
	// The subscription's date time of creation.
	CreatedAt *string `json:"createdAt,omitempty"`
	// The subscription's name.
	Name *string `json:"name,omitempty"`
	// The events types that are subscribed.
	EventTypes []string `json:"eventTypes,omitempty"`
	// The subscription's current status.
	Status *ListWebhooksStatus `json:"status,omitempty"`
	// The subscription's mode.
	Mode *ListWebhooksMode `json:"mode,omitempty"`
}

func (o *Webhook) GetResource() *string {
	if o == nil {
		return nil
	}
	return o.Resource
}

func (o *Webhook) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Webhook) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}

func (o *Webhook) GetProfileID() *string {
	if o == nil {
		return nil
	}
	return o.ProfileID
}

func (o *Webhook) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Webhook) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Webhook) GetEventTypes() []string {
	if o == nil {
		return nil
	}
	return o.EventTypes
}

func (o *Webhook) GetStatus() *ListWebhooksStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *Webhook) GetMode() *ListWebhooksMode {
	if o == nil {
		return nil
	}
	return o.Mode
}

type ListWebhooksEmbedded struct {
	// A list of webhooks.
	Webhooks []Webhook `json:"webhooks,omitempty"`
}

func (o *ListWebhooksEmbedded) GetWebhooks() []Webhook {
	if o == nil {
		return nil
	}
	return o.Webhooks
}

// ListWebhooksSelf - The URL to the current set of items.
type ListWebhooksSelf struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *ListWebhooksSelf) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ListWebhooksSelf) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// ListWebhooksPrevious - The previous set of items, if available.
type ListWebhooksPrevious struct {
	// The actual URL string.
	Href *string `json:"href,omitempty"`
	// The content type of the page or endpoint the URL points to.
	Type *string `json:"type,omitempty"`
}

func (o *ListWebhooksPrevious) GetHref() *string {
	if o == nil {
		return nil
	}
	return o.Href
}

func (o *ListWebhooksPrevious) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

// ListWebhooksNext - The next set of items, if available.
type ListWebhooksNext struct {
	// The actual URL string.
	Href *string `json:"href,omitempty"`
	// The content type of the page or endpoint the URL points to.
	Type *string `json:"type,omitempty"`
}

func (o *ListWebhooksNext) GetHref() *string {
	if o == nil {
		return nil
	}
	return o.Href
}

func (o *ListWebhooksNext) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

// ListWebhooksDocumentation - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type ListWebhooksDocumentation struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *ListWebhooksDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *ListWebhooksDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// ListWebhooksLinks - Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
type ListWebhooksLinks struct {
	// The URL to the current set of items.
	Self ListWebhooksSelf `json:"self"`
	// The previous set of items, if available.
	Previous *ListWebhooksPrevious `json:"previous"`
	// The next set of items, if available.
	Next *ListWebhooksNext `json:"next"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation ListWebhooksDocumentation `json:"documentation"`
}

func (o *ListWebhooksLinks) GetSelf() ListWebhooksSelf {
	if o == nil {
		return ListWebhooksSelf{}
	}
	return o.Self
}

func (o *ListWebhooksLinks) GetPrevious() *ListWebhooksPrevious {
	if o == nil {
		return nil
	}
	return o.Previous
}

func (o *ListWebhooksLinks) GetNext() *ListWebhooksNext {
	if o == nil {
		return nil
	}
	return o.Next
}

func (o *ListWebhooksLinks) GetDocumentation() ListWebhooksDocumentation {
	if o == nil {
		return ListWebhooksDocumentation{}
	}
	return o.Documentation
}

// ListWebhooksResponseBody - A list of webhooks. For a complete reference of the webhook
// object, refer to the [Get hook endpoint](get-webhook) documentation.
type ListWebhooksResponseBody struct {
	// The number of items in this result set. If more items are available, a `_links.next` URL will be present in the result
	// as well.
	//
	// The maximum number of items per result set is controlled by the `limit` property provided in the request. The default
	// limit is 50 items.
	Count    *int64                `json:"count,omitempty"`
	Embedded *ListWebhooksEmbedded `json:"_embedded,omitempty"`
	// Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
	Links *ListWebhooksLinks `json:"_links,omitempty"`
}

func (o *ListWebhooksResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *ListWebhooksResponseBody) GetEmbedded() *ListWebhooksEmbedded {
	if o == nil {
		return nil
	}
	return o.Embedded
}

func (o *ListWebhooksResponseBody) GetLinks() *ListWebhooksLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type ListWebhooksResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of webhooks. For a complete reference of the webhook
	// object, refer to the [Get hook endpoint](get-webhook) documentation.
	Object *ListWebhooksResponseBody
}

func (o *ListWebhooksResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListWebhooksResponse) GetObject() *ListWebhooksResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
