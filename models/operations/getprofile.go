// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type GetProfileRequest struct {
	// Provide the ID of the item you want to perform this operation on.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
	// parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
	// setting the `testmode` query parameter to `true`.
	//
	// Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
	Testmode *bool `queryParam:"style=form,explode=true,name=testmode"`
}

func (o *GetProfileRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetProfileRequest) GetTestmode() *bool {
	if o == nil {
		return nil
	}
	return o.Testmode
}

// GetProfileGoneDocumentation - The URL to the generic Mollie API error handling guide.
type GetProfileGoneDocumentation struct {
	Href string `json:"href"`
	Type string `json:"type"`
}

func (o *GetProfileGoneDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetProfileGoneDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetProfileGoneLinks struct {
	// The URL to the generic Mollie API error handling guide.
	Documentation GetProfileGoneDocumentation `json:"documentation"`
}

func (o *GetProfileGoneLinks) GetDocumentation() GetProfileGoneDocumentation {
	if o == nil {
		return GetProfileGoneDocumentation{}
	}
	return o.Documentation
}

// GetProfileNotFoundDocumentation - The URL to the generic Mollie API error handling guide.
type GetProfileNotFoundDocumentation struct {
	Href string `json:"href"`
	Type string `json:"type"`
}

func (o *GetProfileNotFoundDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetProfileNotFoundDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

type GetProfileNotFoundLinks struct {
	// The URL to the generic Mollie API error handling guide.
	Documentation GetProfileNotFoundDocumentation `json:"documentation"`
}

func (o *GetProfileNotFoundLinks) GetDocumentation() GetProfileNotFoundDocumentation {
	if o == nil {
		return GetProfileNotFoundDocumentation{}
	}
	return o.Documentation
}

// GetProfileMode - Whether this entity was created in live mode or in test mode.
type GetProfileMode string

const (
	GetProfileModeLive GetProfileMode = "live"
	GetProfileModeTest GetProfileMode = "test"
)

func (e GetProfileMode) ToPointer() *GetProfileMode {
	return &e
}

// GetProfileStatus - The profile status determines whether the profile is able to receive live payments.
//
// * `unverified`: The profile has not been verified yet and can only be used to create test payments.
// * `verified`: The profile has been verified and can be used to create live payments and test payments.
// * `blocked`: The profile is blocked and can no longer be used or changed.
type GetProfileStatus string

const (
	GetProfileStatusUnverified GetProfileStatus = "unverified"
	GetProfileStatusVerified   GetProfileStatus = "verified"
	GetProfileStatusBlocked    GetProfileStatus = "blocked"
)

func (e GetProfileStatus) ToPointer() *GetProfileStatus {
	return &e
}

// GetProfileReviewStatus - The status of the requested changes.
type GetProfileReviewStatus string

const (
	GetProfileReviewStatusPending  GetProfileReviewStatus = "pending"
	GetProfileReviewStatusRejected GetProfileReviewStatus = "rejected"
)

func (e GetProfileReviewStatus) ToPointer() *GetProfileReviewStatus {
	return &e
}

// GetProfileReview - Present if changes have been made that have not yet been approved by Mollie. Changes to test profiles are approved
// automatically, unless a switch to a live profile has been requested. The review object will therefore usually be
// `null` in test mode.
type GetProfileReview struct {
	// The status of the requested changes.
	Status *GetProfileReviewStatus `json:"status,omitempty"`
}

func (o *GetProfileReview) GetStatus() *GetProfileReviewStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetProfileSelf - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type GetProfileSelf struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetProfileSelf) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetProfileSelf) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetProfileDashboard - Link to the profile in the Mollie dashboard.
type GetProfileDashboard struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetProfileDashboard) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetProfileDashboard) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetProfileChargebacks - The API resource URL of the chargebacks that belong to this profile.
type GetProfileChargebacks struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetProfileChargebacks) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetProfileChargebacks) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetProfileMethods - The API resource URL of the methods that are enabled for this profile.
type GetProfileMethods struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetProfileMethods) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetProfileMethods) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetProfilePayments - The API resource URL of the payments that belong to this profile.
type GetProfilePayments struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetProfilePayments) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetProfilePayments) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetProfileRefunds - The API resource URL of the refunds that belong to this profile.
type GetProfileRefunds struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetProfileRefunds) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetProfileRefunds) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetProfileCheckoutPreviewURL - The hosted checkout preview URL. You need to be logged in to access this page.
type GetProfileCheckoutPreviewURL struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetProfileCheckoutPreviewURL) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetProfileCheckoutPreviewURL) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetProfileDocumentation - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type GetProfileDocumentation struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetProfileDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetProfileDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetProfileLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type GetProfileLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *GetProfileSelf `json:"self,omitempty"`
	// Link to the profile in the Mollie dashboard.
	Dashboard *GetProfileDashboard `json:"dashboard,omitempty"`
	// The API resource URL of the chargebacks that belong to this profile.
	Chargebacks *GetProfileChargebacks `json:"chargebacks,omitempty"`
	// The API resource URL of the methods that are enabled for this profile.
	Methods *GetProfileMethods `json:"methods,omitempty"`
	// The API resource URL of the payments that belong to this profile.
	Payments *GetProfilePayments `json:"payments,omitempty"`
	// The API resource URL of the refunds that belong to this profile.
	Refunds *GetProfileRefunds `json:"refunds,omitempty"`
	// The hosted checkout preview URL. You need to be logged in to access this page.
	CheckoutPreviewURL *GetProfileCheckoutPreviewURL `json:"checkoutPreviewUrl,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *GetProfileDocumentation `json:"documentation,omitempty"`
}

func (o *GetProfileLinks) GetSelf() *GetProfileSelf {
	if o == nil {
		return nil
	}
	return o.Self
}

func (o *GetProfileLinks) GetDashboard() *GetProfileDashboard {
	if o == nil {
		return nil
	}
	return o.Dashboard
}

func (o *GetProfileLinks) GetChargebacks() *GetProfileChargebacks {
	if o == nil {
		return nil
	}
	return o.Chargebacks
}

func (o *GetProfileLinks) GetMethods() *GetProfileMethods {
	if o == nil {
		return nil
	}
	return o.Methods
}

func (o *GetProfileLinks) GetPayments() *GetProfilePayments {
	if o == nil {
		return nil
	}
	return o.Payments
}

func (o *GetProfileLinks) GetRefunds() *GetProfileRefunds {
	if o == nil {
		return nil
	}
	return o.Refunds
}

func (o *GetProfileLinks) GetCheckoutPreviewURL() *GetProfileCheckoutPreviewURL {
	if o == nil {
		return nil
	}
	return o.CheckoutPreviewURL
}

func (o *GetProfileLinks) GetDocumentation() *GetProfileDocumentation {
	if o == nil {
		return nil
	}
	return o.Documentation
}

// GetProfileResponseBody - The profile object.
type GetProfileResponseBody struct {
	// Indicates the response contains a profile object. Will always contain the string `profile` for this endpoint.
	Resource *string `json:"resource,omitempty"`
	// The identifier uniquely referring to this profile. Example: `pfl_v9hTwCvYqw`.
	ID *string `json:"id,omitempty"`
	// Whether this entity was created in live mode or in test mode.
	Mode *GetProfileMode `json:"mode,omitempty"`
	// The profile's name, this will usually reflect the trade name or brand name of the profile's website or
	// application.
	Name *string `json:"name,omitempty"`
	// The URL to the profile's website or application. Only `https` or `http` URLs are allowed. No `@` signs are
	// allowed.
	Website *string `json:"website,omitempty"`
	// The email address associated with the profile's trade name or brand.
	Email *string `json:"email,omitempty"`
	// The phone number associated with the profile's trade name or brand.
	Phone *string `json:"phone,omitempty"`
	// The products or services offered by the profile's website or application.
	Description *string `json:"description,omitempty"`
	// A list of countries where you expect that the majority of the profile's customers reside,
	// in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
	CountriesOfActivity []string `json:"countriesOfActivity,omitempty"`
	// The industry associated with the profile's trade name or brand. Please refer to the
	// [business category list](common-data-types#business-category) for all possible options.
	BusinessCategory *string `json:"businessCategory,omitempty"`
	// The profile status determines whether the profile is able to receive live payments.
	//
	// * `unverified`: The profile has not been verified yet and can only be used to create test payments.
	// * `verified`: The profile has been verified and can be used to create live payments and test payments.
	// * `blocked`: The profile is blocked and can no longer be used or changed.
	Status *GetProfileStatus `json:"status,omitempty"`
	// Present if changes have been made that have not yet been approved by Mollie. Changes to test profiles are approved
	// automatically, unless a switch to a live profile has been requested. The review object will therefore usually be
	// `null` in test mode.
	Review *GetProfileReview `json:"review,omitempty"`
	// The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	CreatedAt *string `json:"createdAt,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links *GetProfileLinks `json:"_links,omitempty"`
}

func (o *GetProfileResponseBody) GetResource() *string {
	if o == nil {
		return nil
	}
	return o.Resource
}

func (o *GetProfileResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetProfileResponseBody) GetMode() *GetProfileMode {
	if o == nil {
		return nil
	}
	return o.Mode
}

func (o *GetProfileResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetProfileResponseBody) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

func (o *GetProfileResponseBody) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *GetProfileResponseBody) GetPhone() *string {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *GetProfileResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetProfileResponseBody) GetCountriesOfActivity() []string {
	if o == nil {
		return nil
	}
	return o.CountriesOfActivity
}

func (o *GetProfileResponseBody) GetBusinessCategory() *string {
	if o == nil {
		return nil
	}
	return o.BusinessCategory
}

func (o *GetProfileResponseBody) GetStatus() *GetProfileStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetProfileResponseBody) GetReview() *GetProfileReview {
	if o == nil {
		return nil
	}
	return o.Review
}

func (o *GetProfileResponseBody) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *GetProfileResponseBody) GetLinks() *GetProfileLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type GetProfileResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The profile object.
	Object *GetProfileResponseBody
}

func (o *GetProfileResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetProfileResponse) GetObject() *GetProfileResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
