// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/mollie/mollie-api-golang/models/components"
)

// GetCurrentOrganizationLocale - The preferred locale of the merchant, as set in their Mollie dashboard.
type GetCurrentOrganizationLocale string

const (
	GetCurrentOrganizationLocaleEnUs GetCurrentOrganizationLocale = "en_US"
	GetCurrentOrganizationLocaleEnGb GetCurrentOrganizationLocale = "en_GB"
	GetCurrentOrganizationLocaleNlNl GetCurrentOrganizationLocale = "nl_NL"
	GetCurrentOrganizationLocaleNlBe GetCurrentOrganizationLocale = "nl_BE"
	GetCurrentOrganizationLocaleDeDe GetCurrentOrganizationLocale = "de_DE"
	GetCurrentOrganizationLocaleDeAt GetCurrentOrganizationLocale = "de_AT"
	GetCurrentOrganizationLocaleDeCh GetCurrentOrganizationLocale = "de_CH"
	GetCurrentOrganizationLocaleFrFr GetCurrentOrganizationLocale = "fr_FR"
	GetCurrentOrganizationLocaleFrBe GetCurrentOrganizationLocale = "fr_BE"
	GetCurrentOrganizationLocaleEsEs GetCurrentOrganizationLocale = "es_ES"
	GetCurrentOrganizationLocaleCaEs GetCurrentOrganizationLocale = "ca_ES"
	GetCurrentOrganizationLocalePtPt GetCurrentOrganizationLocale = "pt_PT"
	GetCurrentOrganizationLocaleItIt GetCurrentOrganizationLocale = "it_IT"
	GetCurrentOrganizationLocaleNbNo GetCurrentOrganizationLocale = "nb_NO"
	GetCurrentOrganizationLocaleSvSe GetCurrentOrganizationLocale = "sv_SE"
	GetCurrentOrganizationLocaleFiFi GetCurrentOrganizationLocale = "fi_FI"
	GetCurrentOrganizationLocaleDaDk GetCurrentOrganizationLocale = "da_DK"
	GetCurrentOrganizationLocaleIsIs GetCurrentOrganizationLocale = "is_IS"
	GetCurrentOrganizationLocaleHuHu GetCurrentOrganizationLocale = "hu_HU"
	GetCurrentOrganizationLocalePlPl GetCurrentOrganizationLocale = "pl_PL"
	GetCurrentOrganizationLocaleLvLv GetCurrentOrganizationLocale = "lv_LV"
	GetCurrentOrganizationLocaleLtLt GetCurrentOrganizationLocale = "lt_LT"
)

func (e GetCurrentOrganizationLocale) ToPointer() *GetCurrentOrganizationLocale {
	return &e
}
func (e *GetCurrentOrganizationLocale) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "en_US":
		fallthrough
	case "en_GB":
		fallthrough
	case "nl_NL":
		fallthrough
	case "nl_BE":
		fallthrough
	case "de_DE":
		fallthrough
	case "de_AT":
		fallthrough
	case "de_CH":
		fallthrough
	case "fr_FR":
		fallthrough
	case "fr_BE":
		fallthrough
	case "es_ES":
		fallthrough
	case "ca_ES":
		fallthrough
	case "pt_PT":
		fallthrough
	case "it_IT":
		fallthrough
	case "nb_NO":
		fallthrough
	case "sv_SE":
		fallthrough
	case "fi_FI":
		fallthrough
	case "da_DK":
		fallthrough
	case "is_IS":
		fallthrough
	case "hu_HU":
		fallthrough
	case "pl_PL":
		fallthrough
	case "lv_LV":
		fallthrough
	case "lt_LT":
		*e = GetCurrentOrganizationLocale(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCurrentOrganizationLocale: %v", v)
	}
}

// GetCurrentOrganizationAddress - The address of the organization.
type GetCurrentOrganizationAddress struct {
	// A street and street number.
	StreetAndNumber *string `json:"streetAndNumber,omitempty"`
	// A postal code. This field may be required if the provided country has a postal code system.
	PostalCode *string `json:"postalCode,omitempty"`
	City       *string `json:"city,omitempty"`
	// A country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
	Country *string `json:"country,omitempty"`
}

func (o *GetCurrentOrganizationAddress) GetStreetAndNumber() *string {
	if o == nil {
		return nil
	}
	return o.StreetAndNumber
}

func (o *GetCurrentOrganizationAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *GetCurrentOrganizationAddress) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *GetCurrentOrganizationAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

// GetCurrentOrganizationVatRegulation - Mollie applies Dutch VAT for merchants based in The Netherlands, British VAT for merchants based in The United
// Kingdom, and shifted VAT for merchants in the European Union.
//
// The field is not present for merchants residing in other countries.
type GetCurrentOrganizationVatRegulation string

const (
	GetCurrentOrganizationVatRegulationDutch   GetCurrentOrganizationVatRegulation = "dutch"
	GetCurrentOrganizationVatRegulationBritish GetCurrentOrganizationVatRegulation = "british"
	GetCurrentOrganizationVatRegulationShifted GetCurrentOrganizationVatRegulation = "shifted"
)

func (e GetCurrentOrganizationVatRegulation) ToPointer() *GetCurrentOrganizationVatRegulation {
	return &e
}
func (e *GetCurrentOrganizationVatRegulation) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dutch":
		fallthrough
	case "british":
		fallthrough
	case "shifted":
		*e = GetCurrentOrganizationVatRegulation(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCurrentOrganizationVatRegulation: %v", v)
	}
}

// GetCurrentOrganizationSelf - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type GetCurrentOrganizationSelf struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetCurrentOrganizationSelf) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetCurrentOrganizationSelf) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetCurrentOrganizationDashboard - Direct link to the organization's Mollie dashboard.
type GetCurrentOrganizationDashboard struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetCurrentOrganizationDashboard) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetCurrentOrganizationDashboard) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetCurrentOrganizationDocumentation - In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
type GetCurrentOrganizationDocumentation struct {
	// The actual URL string.
	Href string `json:"href"`
	// The content type of the page or endpoint the URL points to.
	Type string `json:"type"`
}

func (o *GetCurrentOrganizationDocumentation) GetHref() string {
	if o == nil {
		return ""
	}
	return o.Href
}

func (o *GetCurrentOrganizationDocumentation) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

// GetCurrentOrganizationLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type GetCurrentOrganizationLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *GetCurrentOrganizationSelf `json:"self,omitempty"`
	// Direct link to the organization's Mollie dashboard.
	Dashboard *GetCurrentOrganizationDashboard `json:"dashboard,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *GetCurrentOrganizationDocumentation `json:"documentation,omitempty"`
}

func (o *GetCurrentOrganizationLinks) GetSelf() *GetCurrentOrganizationSelf {
	if o == nil {
		return nil
	}
	return o.Self
}

func (o *GetCurrentOrganizationLinks) GetDashboard() *GetCurrentOrganizationDashboard {
	if o == nil {
		return nil
	}
	return o.Dashboard
}

func (o *GetCurrentOrganizationLinks) GetDocumentation() *GetCurrentOrganizationDocumentation {
	if o == nil {
		return nil
	}
	return o.Documentation
}

// GetCurrentOrganizationResponseBody - The current organization object.
type GetCurrentOrganizationResponseBody struct {
	// Indicates the response contains an organization object. Will always contain the string `organization` for this
	// resource type.
	Resource *string `json:"resource,omitempty"`
	// The identifier uniquely referring to this organization. Example: `org_12345678`.
	ID *string `json:"id,omitempty"`
	// The name of the organization.
	Name *string `json:"name,omitempty"`
	// The email address associated with the organization.
	Email *string `json:"email,omitempty"`
	// The preferred locale of the merchant, as set in their Mollie dashboard.
	Locale *GetCurrentOrganizationLocale `json:"locale,omitempty"`
	// The address of the organization.
	Address *GetCurrentOrganizationAddress `json:"address,omitempty"`
	// The registration number of the organization at their local chamber of commerce.
	RegistrationNumber *string `json:"registrationNumber,omitempty"`
	// The VAT number of the organization, if based in the European Union or in The United Kingdom. VAT numbers are
	// verified against the international registry *VIES*.
	//
	// The field is not present for merchants residing in other countries.
	VatNumber *string `json:"vatNumber,omitempty"`
	// Mollie applies Dutch VAT for merchants based in The Netherlands, British VAT for merchants based in The United
	// Kingdom, and shifted VAT for merchants in the European Union.
	//
	// The field is not present for merchants residing in other countries.
	VatRegulation *GetCurrentOrganizationVatRegulation `json:"vatRegulation,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links *GetCurrentOrganizationLinks `json:"_links,omitempty"`
}

func (o *GetCurrentOrganizationResponseBody) GetResource() *string {
	if o == nil {
		return nil
	}
	return o.Resource
}

func (o *GetCurrentOrganizationResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetCurrentOrganizationResponseBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetCurrentOrganizationResponseBody) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *GetCurrentOrganizationResponseBody) GetLocale() *GetCurrentOrganizationLocale {
	if o == nil {
		return nil
	}
	return o.Locale
}

func (o *GetCurrentOrganizationResponseBody) GetAddress() *GetCurrentOrganizationAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *GetCurrentOrganizationResponseBody) GetRegistrationNumber() *string {
	if o == nil {
		return nil
	}
	return o.RegistrationNumber
}

func (o *GetCurrentOrganizationResponseBody) GetVatNumber() *string {
	if o == nil {
		return nil
	}
	return o.VatNumber
}

func (o *GetCurrentOrganizationResponseBody) GetVatRegulation() *GetCurrentOrganizationVatRegulation {
	if o == nil {
		return nil
	}
	return o.VatRegulation
}

func (o *GetCurrentOrganizationResponseBody) GetLinks() *GetCurrentOrganizationLinks {
	if o == nil {
		return nil
	}
	return o.Links
}

type GetCurrentOrganizationResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The current organization object.
	Object *GetCurrentOrganizationResponseBody
}

func (o *GetCurrentOrganizationResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetCurrentOrganizationResponse) GetObject() *GetCurrentOrganizationResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
