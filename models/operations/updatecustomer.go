// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/mollie/mollie-api-golang/models/components"
)

type UpdateCustomerRequest struct {
	// Provide the ID of the related customer.
	CustomerID string `pathParam:"style=simple,explode=false,name=customerId"`
	// A unique key to ensure idempotent requests. This key should be a UUID v4 string.
	IdempotencyKey *string                    `header:"style=simple,explode=false,name=idempotency-key"`
	EntityCustomer *components.EntityCustomer `request:"mediaType=application/json"`
}

func (u *UpdateCustomerRequest) GetCustomerID() string {
	if u == nil {
		return ""
	}
	return u.CustomerID
}

func (u *UpdateCustomerRequest) GetIdempotencyKey() *string {
	if u == nil {
		return nil
	}
	return u.IdempotencyKey
}

func (u *UpdateCustomerRequest) GetEntityCustomer() *components.EntityCustomer {
	if u == nil {
		return nil
	}
	return u.EntityCustomer
}

type UpdateCustomerResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The updated customer object.
	CustomerResponse *components.CustomerResponse
}

func (u *UpdateCustomerResponse) GetHTTPMeta() components.HTTPMetadata {
	if u == nil {
		return components.HTTPMetadata{}
	}
	return u.HTTPMeta
}

func (u *UpdateCustomerResponse) GetCustomerResponse() *components.CustomerResponse {
	if u == nil {
		return nil
	}
	return u.CustomerResponse
}
