// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type EntityCapabilityRequirementLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Dashboard *URLObj `json:"dashboard,omitempty"`
}

func (e *EntityCapabilityRequirementLinks) GetDashboard() *URLObj {
	if e == nil {
		return nil
	}
	return e.Dashboard
}

type EntityCapabilityRequirement struct {
	// The name of this requirement, referring to the task to be fulfilled by the organization
	// to enable or re-enable the capability. The name is unique among other requirements
	// of the same capability.
	ID string `json:"id"`
	// The status of the requirement depends on its due date.
	// If no due date is given, the status will be `requested`.
	Status CapabilityRequirementStatus `json:"status"`
	// Due date until the requirement must be fulfilled, if any. The date is shown in ISO-8601 format.
	DueDate *string                          `json:"dueDate"`
	Links   EntityCapabilityRequirementLinks `json:"_links"`
}

func (e *EntityCapabilityRequirement) GetID() string {
	if e == nil {
		return ""
	}
	return e.ID
}

func (e *EntityCapabilityRequirement) GetStatus() CapabilityRequirementStatus {
	if e == nil {
		return CapabilityRequirementStatus("")
	}
	return e.Status
}

func (e *EntityCapabilityRequirement) GetDueDate() *string {
	if e == nil {
		return nil
	}
	return e.DueDate
}

func (e *EntityCapabilityRequirement) GetLinks() EntityCapabilityRequirementLinks {
	if e == nil {
		return EntityCapabilityRequirementLinks{}
	}
	return e.Links
}
