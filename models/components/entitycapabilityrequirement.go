// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// Dashboard - If known, a deep link to the Mollie dashboard of the client, where the requirement can be fulfilled.
// For example, where necessary documents are to be uploaded.
type Dashboard struct {
	// The actual URL string.
	Href *string `json:"href,omitempty"`
	// The content type of the page or endpoint the URL points to.
	Type *string `json:"type,omitempty"`
}

func (d *Dashboard) GetHref() *string {
	if d == nil {
		return nil
	}
	return d.Href
}

func (d *Dashboard) GetType() *string {
	if d == nil {
		return nil
	}
	return d.Type
}

type EntityCapabilityRequirementLinks struct {
	// If known, a deep link to the Mollie dashboard of the client, where the requirement can be fulfilled.
	// For example, where necessary documents are to be uploaded.
	Dashboard *Dashboard `json:"dashboard,omitempty"`
}

func (e *EntityCapabilityRequirementLinks) GetDashboard() *Dashboard {
	if e == nil {
		return nil
	}
	return e.Dashboard
}

type EntityCapabilityRequirement struct {
	// The name of this requirement, referring to the task to be fulfilled by the organization
	// to enable or re-enable the capability. The name is unique among other requirements
	// of the same capability.
	ID *string `json:"id,omitempty"`
	// The status of the requirement depends on its due date.
	// If no due date is given, the status will be `requested`.
	Status *CapabilityRequirementStatus `json:"status,omitempty"`
	// Due date until the requirement must be fulfilled, if any. The date is shown in ISO-8601 format.
	DueDate *string                           `json:"dueDate,omitempty"`
	Links   *EntityCapabilityRequirementLinks `json:"_links,omitempty"`
}

func (e *EntityCapabilityRequirement) GetID() *string {
	if e == nil {
		return nil
	}
	return e.ID
}

func (e *EntityCapabilityRequirement) GetStatus() *CapabilityRequirementStatus {
	if e == nil {
		return nil
	}
	return e.Status
}

func (e *EntityCapabilityRequirement) GetDueDate() *string {
	if e == nil {
		return nil
	}
	return e.DueDate
}

func (e *EntityCapabilityRequirement) GetLinks() *EntityCapabilityRequirementLinks {
	if e == nil {
		return nil
	}
	return e.Links
}
