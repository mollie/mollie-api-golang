// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type RecurringLineItem struct {
	// A description of the recurring item. If not present, the main description of the item will be used.
	Description *string `json:"description,omitempty"`
	// Cadence unit of the recurring item. For example: `12 months`, `52 weeks` or `365 days`.
	//
	// Possible values: `... days`, `... weeks`, `... months`.
	Interval string `json:"interval"`
	// In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
	Amount *Amount `json:"amount,omitempty"`
	// Total number of charges for the subscription to complete. Leave empty for ongoing subscription.
	Times *int64 `json:"times,omitempty"`
	// The start date of the subscription if it does not start right away (format `YYYY-MM-DD`)
	StartDate *string `json:"startDate,omitempty"`
}

func (r *RecurringLineItem) GetDescription() *string {
	if r == nil {
		return nil
	}
	return r.Description
}

func (r *RecurringLineItem) GetInterval() string {
	if r == nil {
		return ""
	}
	return r.Interval
}

func (r *RecurringLineItem) GetAmount() *Amount {
	if r == nil {
		return nil
	}
	return r.Amount
}

func (r *RecurringLineItem) GetTimes() *int64 {
	if r == nil {
		return nil
	}
	return r.Times
}

func (r *RecurringLineItem) GetStartDate() *string {
	if r == nil {
		return nil
	}
	return r.StartDate
}
