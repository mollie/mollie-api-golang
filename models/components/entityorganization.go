// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// EntityOrganizationLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type EntityOrganizationLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *URLObj `json:"self,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Dashboard *URLObj `json:"dashboard,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *URLObj `json:"documentation,omitempty"`
}

func (o *EntityOrganizationLinks) GetSelf() *URLObj {
	if o == nil {
		return nil
	}
	return o.Self
}

func (o *EntityOrganizationLinks) GetDashboard() *URLObj {
	if o == nil {
		return nil
	}
	return o.Dashboard
}

func (o *EntityOrganizationLinks) GetDocumentation() *URLObj {
	if o == nil {
		return nil
	}
	return o.Documentation
}

type EntityOrganization struct {
	// Indicates the response contains an organization object. Will always contain the string `organization` for this
	// resource type.
	Resource *string `json:"resource,omitempty"`
	// The identifier uniquely referring to this organization. Example: `org_12345678`.
	ID *string `json:"id,omitempty"`
	// The name of the organization.
	Name *string `json:"name,omitempty"`
	// The email address associated with the organization.
	Email *string `json:"email,omitempty"`
	// Allows you to preset the language to be used.
	Locale  *LocaleResponse `json:"locale,omitempty"`
	Address *Address        `json:"address,omitempty"`
	// The registration number of the organization at their local chamber of commerce.
	RegistrationNumber *string `json:"registrationNumber,omitempty"`
	// The VAT number of the organization, if based in the European Union or in The United Kingdom. VAT numbers are
	// verified against the international registry *VIES*.
	//
	// The field is not present for merchants residing in other countries.
	VatNumber *string `json:"vatNumber,omitempty"`
	// Mollie applies Dutch VAT for merchants based in The Netherlands, British VAT for merchants based in The United
	// Kingdom, and shifted VAT for merchants in the European Union.
	//
	// The field is not present for merchants residing in other countries.
	VatRegulation *OrganizationVatRegulation `json:"vatRegulation,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links *EntityOrganizationLinks `json:"_links,omitempty"`
}

func (o *EntityOrganization) GetResource() *string {
	if o == nil {
		return nil
	}
	return o.Resource
}

func (o *EntityOrganization) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *EntityOrganization) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *EntityOrganization) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *EntityOrganization) GetLocale() *LocaleResponse {
	if o == nil {
		return nil
	}
	return o.Locale
}

func (o *EntityOrganization) GetAddress() *Address {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *EntityOrganization) GetRegistrationNumber() *string {
	if o == nil {
		return nil
	}
	return o.RegistrationNumber
}

func (o *EntityOrganization) GetVatNumber() *string {
	if o == nil {
		return nil
	}
	return o.VatNumber
}

func (o *EntityOrganization) GetVatRegulation() *OrganizationVatRegulation {
	if o == nil {
		return nil
	}
	return o.VatRegulation
}

func (o *EntityOrganization) GetLinks() *EntityOrganizationLinks {
	if o == nil {
		return nil
	}
	return o.Links
}
