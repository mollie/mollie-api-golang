// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// Method - Normally, a payment method screen is shown. However, when using this parameter, you can choose a specific payment
// method and your customer will skip the selection screen and is sent directly to the chosen payment method. The
// parameter enables you to fully integrate the payment method selection into your website.
//
// You can also specify the methods in an array. By doing so we will still show the payment method selection screen
// but will only show the methods specified in the array. For example, you can use this functionality to only show
// payment methods from a specific country to your customer `['bancontact', 'belfius']`.
type Method string

const (
	MethodAlma         Method = "alma"
	MethodApplepay     Method = "applepay"
	MethodBacs         Method = "bacs"
	MethodBancomatpay  Method = "bancomatpay"
	MethodBancontact   Method = "bancontact"
	MethodBanktransfer Method = "banktransfer"
	MethodBelfius      Method = "belfius"
	MethodBillie       Method = "billie"
	MethodBizum        Method = "bizum"
	MethodBlik         Method = "blik"
	MethodCreditcard   Method = "creditcard"
	MethodDirectdebit  Method = "directdebit"
	MethodEps          Method = "eps"
	MethodGiftcard     Method = "giftcard"
	MethodIdeal        Method = "ideal"
	MethodIn3          Method = "in3"
	MethodKbc          Method = "kbc"
	MethodKlarna       Method = "klarna"
	MethodMbway        Method = "mbway"
	MethodMobilepay    Method = "mobilepay"
	MethodMultibanco   Method = "multibanco"
	MethodMybank       Method = "mybank"
	MethodPaybybank    Method = "paybybank"
	MethodPayconiq     Method = "payconiq"
	MethodPaypal       Method = "paypal"
	MethodPaysafecard  Method = "paysafecard"
	MethodPointofsale  Method = "pointofsale"
	MethodPrzelewy24   Method = "przelewy24"
	MethodRiverty      Method = "riverty"
	MethodSatispay     Method = "satispay"
	MethodSwish        Method = "swish"
	MethodTrustly      Method = "trustly"
	MethodTwint        Method = "twint"
	MethodVipps        Method = "vipps"
	MethodVoucher      Method = "voucher"
)

func (e Method) ToPointer() *Method {
	return &e
}
func (e *Method) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "alma":
		fallthrough
	case "applepay":
		fallthrough
	case "bacs":
		fallthrough
	case "bancomatpay":
		fallthrough
	case "bancontact":
		fallthrough
	case "banktransfer":
		fallthrough
	case "belfius":
		fallthrough
	case "billie":
		fallthrough
	case "bizum":
		fallthrough
	case "blik":
		fallthrough
	case "creditcard":
		fallthrough
	case "directdebit":
		fallthrough
	case "eps":
		fallthrough
	case "giftcard":
		fallthrough
	case "ideal":
		fallthrough
	case "in3":
		fallthrough
	case "kbc":
		fallthrough
	case "klarna":
		fallthrough
	case "mbway":
		fallthrough
	case "mobilepay":
		fallthrough
	case "multibanco":
		fallthrough
	case "mybank":
		fallthrough
	case "paybybank":
		fallthrough
	case "payconiq":
		fallthrough
	case "paypal":
		fallthrough
	case "paysafecard":
		fallthrough
	case "pointofsale":
		fallthrough
	case "przelewy24":
		fallthrough
	case "riverty":
		fallthrough
	case "satispay":
		fallthrough
	case "swish":
		fallthrough
	case "trustly":
		fallthrough
	case "twint":
		fallthrough
	case "vipps":
		fallthrough
	case "voucher":
		*e = Method(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Method: %v", v)
	}
}
