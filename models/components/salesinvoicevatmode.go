// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// SalesInvoiceVatMode - The VAT mode to use for VAT calculation. `exclusive` mode means we will apply the relevant VAT on top of the
// price. `inclusive` means the prices you are providing to us already contain the VAT you want to apply.
type SalesInvoiceVatMode string

const (
	SalesInvoiceVatModeExclusive SalesInvoiceVatMode = "exclusive"
	SalesInvoiceVatModeInclusive SalesInvoiceVatMode = "inclusive"
)

func (e SalesInvoiceVatMode) ToPointer() *SalesInvoiceVatMode {
	return &e
}
func (e *SalesInvoiceVatMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "exclusive":
		fallthrough
	case "inclusive":
		*e = SalesInvoiceVatMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SalesInvoiceVatMode: %v", v)
	}
}
