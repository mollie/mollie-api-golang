// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type SequenceType string

const (
	SequenceTypeOneoff    SequenceType = "oneoff"
	SequenceTypeFirst     SequenceType = "first"
	SequenceTypeRecurring SequenceType = "recurring"
)

func (e SequenceType) ToPointer() *SequenceType {
	return &e
}
func (e *SequenceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "oneoff":
		fallthrough
	case "first":
		fallthrough
	case "recurring":
		*e = SequenceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SequenceType: %v", v)
	}
}
