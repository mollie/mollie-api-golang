// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/mollie/mollie-api-golang/internal/utils"
)

// Amount - In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
type Amount struct {
	// A three-character ISO 4217 currency code.
	Currency string `json:"currency" queryParam:"name=currency"`
	// A string containing an exact monetary amount in the given currency.
	Value string `json:"value" queryParam:"name=value"`
}

func (a Amount) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *Amount) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"currency", "value"}); err != nil {
		return err
	}
	return nil
}

func (o *Amount) GetCurrency() string {
	if o == nil {
		return ""
	}
	return o.Currency
}

func (o *Amount) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}
