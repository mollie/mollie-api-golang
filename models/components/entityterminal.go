// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// EntityTerminalLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type EntityTerminalLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self URLObj `json:"self"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation URLObj `json:"documentation"`
}

func (e *EntityTerminalLinks) GetSelf() URLObj {
	if e == nil {
		return URLObj{}
	}
	return e.Self
}

func (e *EntityTerminalLinks) GetDocumentation() URLObj {
	if e == nil {
		return URLObj{}
	}
	return e.Documentation
}

type EntityTerminal struct {
	// Indicates the response contains a terminal object. Will always contain the string `terminal` for this endpoint.
	Resource string `json:"resource"`
	ID       string `json:"id"`
	// Whether this entity was created in live mode or in test mode.
	Mode Mode `json:"mode"`
	// A short description of the terminal. The description can be used as an identifier for the terminal. Currently, the
	// description is set when the terminal is initially configured. It will be visible in the Mollie Dashboard, and it
	// may be visible on the device itself depending on the device.
	Description string `json:"description"`
	// The status of the terminal.
	Status TerminalStatus `json:"status"`
	// The brand of the terminal.
	Brand *TerminalBrand `json:"brand"`
	// The model of the terminal. For example for a PAX A920, this field's value will be `A920`.
	Model *TerminalModel `json:"model"`
	// The serial number of the terminal. The serial number is provided at terminal creation time.
	SerialNumber *string `json:"serialNumber"`
	// The currency configured on the terminal, in ISO 4217 format. Currently most of our terminals are bound to a
	// specific currency, chosen during setup.
	Currency string `json:"currency"`
	// The identifier referring to the [profile](get-profile) this entity belongs to.
	//
	// Most API credentials are linked to a single profile. In these cases the `profileId` can be omitted in the creation
	// request. For organization-level credentials such as OAuth access tokens however, the `profileId` parameter is
	// required.
	ProfileID string `json:"profileId"`
	// The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	CreatedAt string `json:"createdAt"`
	// The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	UpdatedAt string `json:"updatedAt"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links EntityTerminalLinks `json:"_links"`
}

func (e *EntityTerminal) GetResource() string {
	if e == nil {
		return ""
	}
	return e.Resource
}

func (e *EntityTerminal) GetID() string {
	if e == nil {
		return ""
	}
	return e.ID
}

func (e *EntityTerminal) GetMode() Mode {
	if e == nil {
		return Mode("")
	}
	return e.Mode
}

func (e *EntityTerminal) GetDescription() string {
	if e == nil {
		return ""
	}
	return e.Description
}

func (e *EntityTerminal) GetStatus() TerminalStatus {
	if e == nil {
		return TerminalStatus("")
	}
	return e.Status
}

func (e *EntityTerminal) GetBrand() *TerminalBrand {
	if e == nil {
		return nil
	}
	return e.Brand
}

func (e *EntityTerminal) GetModel() *TerminalModel {
	if e == nil {
		return nil
	}
	return e.Model
}

func (e *EntityTerminal) GetSerialNumber() *string {
	if e == nil {
		return nil
	}
	return e.SerialNumber
}

func (e *EntityTerminal) GetCurrency() string {
	if e == nil {
		return ""
	}
	return e.Currency
}

func (e *EntityTerminal) GetProfileID() string {
	if e == nil {
		return ""
	}
	return e.ProfileID
}

func (e *EntityTerminal) GetCreatedAt() string {
	if e == nil {
		return ""
	}
	return e.CreatedAt
}

func (e *EntityTerminal) GetUpdatedAt() string {
	if e == nil {
		return ""
	}
	return e.UpdatedAt
}

func (e *EntityTerminal) GetLinks() EntityTerminalLinks {
	if e == nil {
		return EntityTerminalLinks{}
	}
	return e.Links
}
