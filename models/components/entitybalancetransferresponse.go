// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// EntityBalanceTransferResponseStatusReason - The reason for the current status of the transfer, if applicable.
type EntityBalanceTransferResponseStatusReason struct {
	// A machine-readable code that indicates the reason for the transfer's status.
	Code BalanceTransferStatusReasonResponse `json:"code"`
	// A description of the status reason, localized according to the transfer.
	Message string `json:"message"`
}

func (e *EntityBalanceTransferResponseStatusReason) GetCode() BalanceTransferStatusReasonResponse {
	if e == nil {
		return BalanceTransferStatusReasonResponse("")
	}
	return e.Code
}

func (e *EntityBalanceTransferResponseStatusReason) GetMessage() string {
	if e == nil {
		return ""
	}
	return e.Message
}

type EntityBalanceTransferResponse struct {
	// Indicates the response contains a balance transfer object. Will always contain the string `connect-balance-transfer` for this endpoint.
	Resource string `json:"resource"`
	ID       string `json:"id"`
	// In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
	Amount Amount `json:"amount"`
	// A party involved in the balance transfer, either the sender or the receiver.
	Source EntityBalanceTransferPartyResponse `json:"source"`
	// A party involved in the balance transfer, either the sender or the receiver.
	Destination EntityBalanceTransferPartyResponse `json:"destination"`
	// The transfer description for initiating party.
	Description string `json:"description"`
	// The status of the transfer.
	Status BalanceTransferStatus `json:"status"`
	// The reason for the current status of the transfer, if applicable.
	StatusReason EntityBalanceTransferResponseStatusReason `json:"statusReason"`
	// The type of the transfer. Different fees may apply to different types of transfers.
	Category *BalanceTransferCategoryResponse `json:"category,omitempty"`
	// The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	CreatedAt string `json:"createdAt"`
	// The date and time when the transfer was completed, in ISO 8601 format. This parameter is omitted if the transfer is
	// not executed (yet).
	ExecutedAt *string `json:"executedAt,omitempty"`
	// Whether this entity was created in live mode or in test mode.
	Mode Mode `json:"mode"`
}

func (e *EntityBalanceTransferResponse) GetResource() string {
	if e == nil {
		return ""
	}
	return e.Resource
}

func (e *EntityBalanceTransferResponse) GetID() string {
	if e == nil {
		return ""
	}
	return e.ID
}

func (e *EntityBalanceTransferResponse) GetAmount() Amount {
	if e == nil {
		return Amount{}
	}
	return e.Amount
}

func (e *EntityBalanceTransferResponse) GetSource() EntityBalanceTransferPartyResponse {
	if e == nil {
		return EntityBalanceTransferPartyResponse{}
	}
	return e.Source
}

func (e *EntityBalanceTransferResponse) GetDestination() EntityBalanceTransferPartyResponse {
	if e == nil {
		return EntityBalanceTransferPartyResponse{}
	}
	return e.Destination
}

func (e *EntityBalanceTransferResponse) GetDescription() string {
	if e == nil {
		return ""
	}
	return e.Description
}

func (e *EntityBalanceTransferResponse) GetStatus() BalanceTransferStatus {
	if e == nil {
		return BalanceTransferStatus("")
	}
	return e.Status
}

func (e *EntityBalanceTransferResponse) GetStatusReason() EntityBalanceTransferResponseStatusReason {
	if e == nil {
		return EntityBalanceTransferResponseStatusReason{}
	}
	return e.StatusReason
}

func (e *EntityBalanceTransferResponse) GetCategory() *BalanceTransferCategoryResponse {
	if e == nil {
		return nil
	}
	return e.Category
}

func (e *EntityBalanceTransferResponse) GetCreatedAt() string {
	if e == nil {
		return ""
	}
	return e.CreatedAt
}

func (e *EntityBalanceTransferResponse) GetExecutedAt() *string {
	if e == nil {
		return nil
	}
	return e.ExecutedAt
}

func (e *EntityBalanceTransferResponse) GetMode() Mode {
	if e == nil {
		return Mode("")
	}
	return e.Mode
}
