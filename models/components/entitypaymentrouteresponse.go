// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// EntityPaymentRouteResponseDestination - The destination of this portion of the payment.
type EntityPaymentRouteResponseDestination struct {
	// The type of destination. Currently only the destination type `organization` is supported.
	Type           RouteDestinationTypeResponse `json:"type"`
	OrganizationID string                       `json:"organizationId"`
}

func (e *EntityPaymentRouteResponseDestination) GetType() RouteDestinationTypeResponse {
	if e == nil {
		return RouteDestinationTypeResponse("")
	}
	return e.Type
}

func (e *EntityPaymentRouteResponseDestination) GetOrganizationID() string {
	if e == nil {
		return ""
	}
	return e.OrganizationID
}

// EntityPaymentRouteResponseLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type EntityPaymentRouteResponseLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self URLObj `json:"self"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Payment URLObj `json:"payment"`
}

func (e *EntityPaymentRouteResponseLinks) GetSelf() URLObj {
	if e == nil {
		return URLObj{}
	}
	return e.Self
}

func (e *EntityPaymentRouteResponseLinks) GetPayment() URLObj {
	if e == nil {
		return URLObj{}
	}
	return e.Payment
}

type EntityPaymentRouteResponse struct {
	// Indicates the response contains a route object. Will always contain the string `route` for this endpoint.
	Resource string `json:"resource"`
	ID       string `json:"id"`
	// Whether this entity was created in live mode or in test mode.
	Mode Mode `json:"mode"`
	// In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
	Amount Amount `json:"amount"`
	// The destination of this portion of the payment.
	Destination EntityPaymentRouteResponseDestination `json:"destination"`
	// The date and time when the route was created. The date is given in ISO 8601 format.
	CreatedAt string `json:"createdAt"`
	// Optionally, schedule this portion of the payment to be transferred to its destination on a later date. The
	// date must be given in `YYYY-MM-DD` format.
	//
	// If no date is given, the funds become available to the connected merchant as soon as the payment succeeds.
	ReleaseDate *string `json:"releaseDate,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links EntityPaymentRouteResponseLinks `json:"_links"`
}

func (e *EntityPaymentRouteResponse) GetResource() string {
	if e == nil {
		return ""
	}
	return e.Resource
}

func (e *EntityPaymentRouteResponse) GetID() string {
	if e == nil {
		return ""
	}
	return e.ID
}

func (e *EntityPaymentRouteResponse) GetMode() Mode {
	if e == nil {
		return Mode("")
	}
	return e.Mode
}

func (e *EntityPaymentRouteResponse) GetAmount() Amount {
	if e == nil {
		return Amount{}
	}
	return e.Amount
}

func (e *EntityPaymentRouteResponse) GetDestination() EntityPaymentRouteResponseDestination {
	if e == nil {
		return EntityPaymentRouteResponseDestination{}
	}
	return e.Destination
}

func (e *EntityPaymentRouteResponse) GetCreatedAt() string {
	if e == nil {
		return ""
	}
	return e.CreatedAt
}

func (e *EntityPaymentRouteResponse) GetReleaseDate() *string {
	if e == nil {
		return nil
	}
	return e.ReleaseDate
}

func (e *EntityPaymentRouteResponse) GetLinks() EntityPaymentRouteResponseLinks {
	if e == nil {
		return EntityPaymentRouteResponseLinks{}
	}
	return e.Links
}
