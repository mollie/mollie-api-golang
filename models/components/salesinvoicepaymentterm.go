// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// SalesInvoicePaymentTerm - The payment term to be set on the invoice.
type SalesInvoicePaymentTerm string

const (
	SalesInvoicePaymentTermSevendays               SalesInvoicePaymentTerm = "7 days"
	SalesInvoicePaymentTermFourteendays            SalesInvoicePaymentTerm = "14 days"
	SalesInvoicePaymentTermThirtydays              SalesInvoicePaymentTerm = "30 days"
	SalesInvoicePaymentTermFortyFivedays           SalesInvoicePaymentTerm = "45 days"
	SalesInvoicePaymentTermSixtydays               SalesInvoicePaymentTerm = "60 days"
	SalesInvoicePaymentTermNinetydays              SalesInvoicePaymentTerm = "90 days"
	SalesInvoicePaymentTermOneHundredAndTwentydays SalesInvoicePaymentTerm = "120 days"
)

func (e SalesInvoicePaymentTerm) ToPointer() *SalesInvoicePaymentTerm {
	return &e
}
func (e *SalesInvoicePaymentTerm) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "7 days":
		fallthrough
	case "14 days":
		fallthrough
	case "30 days":
		fallthrough
	case "45 days":
		fallthrough
	case "60 days":
		fallthrough
	case "90 days":
		fallthrough
	case "120 days":
		*e = SalesInvoicePaymentTerm(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SalesInvoicePaymentTerm: %v", v)
	}
}
