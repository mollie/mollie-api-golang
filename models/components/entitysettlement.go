// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// EntitySettlementLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type EntitySettlementLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *URLObj `json:"self,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Payments *URLObj `json:"payments,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Captures *URLObj `json:"captures,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Refunds *URLObj `json:"refunds,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Chargebacks *URLObj `json:"chargebacks,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Invoice *URLNullable `json:"invoice,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *URLObj `json:"documentation,omitempty"`
}

func (e *EntitySettlementLinks) GetSelf() *URLObj {
	if e == nil {
		return nil
	}
	return e.Self
}

func (e *EntitySettlementLinks) GetPayments() *URLObj {
	if e == nil {
		return nil
	}
	return e.Payments
}

func (e *EntitySettlementLinks) GetCaptures() *URLObj {
	if e == nil {
		return nil
	}
	return e.Captures
}

func (e *EntitySettlementLinks) GetRefunds() *URLObj {
	if e == nil {
		return nil
	}
	return e.Refunds
}

func (e *EntitySettlementLinks) GetChargebacks() *URLObj {
	if e == nil {
		return nil
	}
	return e.Chargebacks
}

func (e *EntitySettlementLinks) GetInvoice() *URLNullable {
	if e == nil {
		return nil
	}
	return e.Invoice
}

func (e *EntitySettlementLinks) GetDocumentation() *URLObj {
	if e == nil {
		return nil
	}
	return e.Documentation
}

type EntitySettlement struct {
	// Indicates the response contains a settlement object. Will always contain the string `settlement` for this
	// endpoint.
	Resource *string `json:"resource,omitempty"`
	ID       *string `json:"id,omitempty"`
	// The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	CreatedAt *string `json:"createdAt,omitempty"`
	// The settlement's bank reference, as found in your Mollie account and on your bank statement.
	Reference *string `json:"reference,omitempty"`
	// The date on which the settlement was settled, in ISO 8601 format.
	//
	// For an [open settlement](get-open-settlement) or for the [next settlement](get-next-settlement), no settlement
	// date is available.
	SettledAt *string `json:"settledAt,omitempty"`
	// The status of the settlement.
	Status *SettlementStatus `json:"status,omitempty"`
	// In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
	Amount    *Amount `json:"amount,omitempty"`
	BalanceID *string `json:"balanceId,omitempty"`
	InvoiceID *string `json:"invoiceId,omitempty"`
	// For bookkeeping purposes, the settlement includes an overview of transactions included in the settlement. These
	// transactions are grouped into 'period' objects â€” one for each calendar month.
	//
	// For example, if a settlement includes funds from 15 April until 4 May, it will include two period objects. One for
	// all transactions processed between 15 April and 30 April, and one for all transactions between 1 May and 4 May.
	//
	// Period objects are grouped by year, and then by month. So in the above example, the full `periods` collection will
	// look as follows: `{"2024": {"04": {...}, "05": {...}}}`. The year and month in this documentation are referred as `<year>` and `<month>`.
	//
	// The example response should give a good idea of what this looks like in practise.
	Periods map[string]any `json:"periods,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links *EntitySettlementLinks `json:"_links,omitempty"`
}

func (e *EntitySettlement) GetResource() *string {
	if e == nil {
		return nil
	}
	return e.Resource
}

func (e *EntitySettlement) GetID() *string {
	if e == nil {
		return nil
	}
	return e.ID
}

func (e *EntitySettlement) GetCreatedAt() *string {
	if e == nil {
		return nil
	}
	return e.CreatedAt
}

func (e *EntitySettlement) GetReference() *string {
	if e == nil {
		return nil
	}
	return e.Reference
}

func (e *EntitySettlement) GetSettledAt() *string {
	if e == nil {
		return nil
	}
	return e.SettledAt
}

func (e *EntitySettlement) GetStatus() *SettlementStatus {
	if e == nil {
		return nil
	}
	return e.Status
}

func (e *EntitySettlement) GetAmount() *Amount {
	if e == nil {
		return nil
	}
	return e.Amount
}

func (e *EntitySettlement) GetBalanceID() *string {
	if e == nil {
		return nil
	}
	return e.BalanceID
}

func (e *EntitySettlement) GetInvoiceID() *string {
	if e == nil {
		return nil
	}
	return e.InvoiceID
}

func (e *EntitySettlement) GetPeriods() map[string]any {
	if e == nil {
		return nil
	}
	return e.Periods
}

func (e *EntitySettlement) GetLinks() *EntitySettlementLinks {
	if e == nil {
		return nil
	}
	return e.Links
}
