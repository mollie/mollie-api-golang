// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// WebhookEventTypes - The event's type
type WebhookEventTypes string

const (
	WebhookEventTypesPaymentLinkPaid           WebhookEventTypes = "payment-link.paid"
	WebhookEventTypesBalanceTransactionCreated WebhookEventTypes = "balance-transaction.created"
	WebhookEventTypesSalesInvoiceCreated       WebhookEventTypes = "sales-invoice.created"
	WebhookEventTypesSalesInvoiceIssued        WebhookEventTypes = "sales-invoice.issued"
	WebhookEventTypesSalesInvoiceCanceled      WebhookEventTypes = "sales-invoice.canceled"
	WebhookEventTypesSalesInvoicePaid          WebhookEventTypes = "sales-invoice.paid"
	WebhookEventTypesWildcard                  WebhookEventTypes = "*"
)

func (e WebhookEventTypes) ToPointer() *WebhookEventTypes {
	return &e
}
func (e *WebhookEventTypes) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "payment-link.paid":
		fallthrough
	case "balance-transaction.created":
		fallthrough
	case "sales-invoice.created":
		fallthrough
	case "sales-invoice.issued":
		fallthrough
	case "sales-invoice.canceled":
		fallthrough
	case "sales-invoice.paid":
		fallthrough
	case "*":
		*e = WebhookEventTypes(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebhookEventTypes: %v", v)
	}
}
