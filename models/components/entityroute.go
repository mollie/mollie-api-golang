// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// EntityRouteDestination - The destination of the route.
type EntityRouteDestination struct {
	// The type of destination. Currently only the destination type `organization` is supported.
	Type           RouteDestinationTypeResponse `json:"type"`
	OrganizationID string                       `json:"organizationId"`
}

func (e *EntityRouteDestination) GetType() RouteDestinationTypeResponse {
	if e == nil {
		return RouteDestinationTypeResponse("")
	}
	return e.Type
}

func (e *EntityRouteDestination) GetOrganizationID() string {
	if e == nil {
		return ""
	}
	return e.OrganizationID
}

type EntityRoute struct {
	ID        *string `json:"id,omitempty"`
	PaymentID *string `json:"paymentId,omitempty"`
	// In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
	Amount *Amount `json:"amount,omitempty"`
	// The description of the route. This description is shown in the reports.
	Description *string `json:"description,omitempty"`
	// The destination of the route.
	Destination *EntityRouteDestination `json:"destination,omitempty"`
	// Whether to create the entity in test mode or live mode.
	//
	// Most API credentials are specifically created for either live mode or test mode, in which case this parameter can be
	// omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by setting
	// `testmode` to `true`.
	Testmode *bool `json:"testmode,omitempty"`
}

func (e *EntityRoute) GetID() *string {
	if e == nil {
		return nil
	}
	return e.ID
}

func (e *EntityRoute) GetPaymentID() *string {
	if e == nil {
		return nil
	}
	return e.PaymentID
}

func (e *EntityRoute) GetAmount() *Amount {
	if e == nil {
		return nil
	}
	return e.Amount
}

func (e *EntityRoute) GetDescription() *string {
	if e == nil {
		return nil
	}
	return e.Description
}

func (e *EntityRoute) GetDestination() *EntityRouteDestination {
	if e == nil {
		return nil
	}
	return e.Destination
}

func (e *EntityRoute) GetTestmode() *bool {
	if e == nil {
		return nil
	}
	return e.Testmode
}
