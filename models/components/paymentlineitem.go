// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type PaymentLineItem struct {
	// The type of product purchased. For example, a physical or a digital product.
	//
	// The `tip` payment line type is not available when creating a payment.
	Type *PaymentLineType `json:"type,omitempty"`
	// A description of the line item. For example *LEGO 4440 Forest Police Station*.
	Description string `json:"description"`
	// The number of items.
	Quantity int64 `json:"quantity"`
	// The unit for the quantity. For example *pcs*, *kg*, or *cm*.
	QuantityUnit *string `json:"quantityUnit,omitempty"`
	// In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
	UnitPrice Amount `json:"unitPrice"`
	// In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
	DiscountAmount *Amount `json:"discountAmount,omitempty"`
	// In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
	TotalAmount Amount `json:"totalAmount"`
	// The VAT rate applied to the line, for example `21.00` for 21%. The vatRate should be passed as a string and
	// not as a float, to ensure the correct number of decimals are passed.
	VatRate *string `json:"vatRate,omitempty"`
	// In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
	VatAmount *Amount `json:"vatAmount,omitempty"`
	// The SKU, EAN, ISBN or UPC of the product sold.
	Sku *string `json:"sku,omitempty"`
	// An array with the voucher categories, in case of a line eligible for a voucher. See the
	// [Integrating Vouchers](https://docs.mollie.com/docs/integrating-vouchers/) guide for more information.
	Categories []LineCategories `json:"categories,omitempty"`
	// A link pointing to an image of the product sold.
	ImageURL *string `json:"imageUrl,omitempty"`
	// A link pointing to the product page in your web shop of the product sold.
	ProductURL *string `json:"productUrl,omitempty"`
}

func (p *PaymentLineItem) GetType() *PaymentLineType {
	if p == nil {
		return nil
	}
	return p.Type
}

func (p *PaymentLineItem) GetDescription() string {
	if p == nil {
		return ""
	}
	return p.Description
}

func (p *PaymentLineItem) GetQuantity() int64 {
	if p == nil {
		return 0
	}
	return p.Quantity
}

func (p *PaymentLineItem) GetQuantityUnit() *string {
	if p == nil {
		return nil
	}
	return p.QuantityUnit
}

func (p *PaymentLineItem) GetUnitPrice() Amount {
	if p == nil {
		return Amount{}
	}
	return p.UnitPrice
}

func (p *PaymentLineItem) GetDiscountAmount() *Amount {
	if p == nil {
		return nil
	}
	return p.DiscountAmount
}

func (p *PaymentLineItem) GetTotalAmount() Amount {
	if p == nil {
		return Amount{}
	}
	return p.TotalAmount
}

func (p *PaymentLineItem) GetVatRate() *string {
	if p == nil {
		return nil
	}
	return p.VatRate
}

func (p *PaymentLineItem) GetVatAmount() *Amount {
	if p == nil {
		return nil
	}
	return p.VatAmount
}

func (p *PaymentLineItem) GetSku() *string {
	if p == nil {
		return nil
	}
	return p.Sku
}

func (p *PaymentLineItem) GetCategories() []LineCategories {
	if p == nil {
		return nil
	}
	return p.Categories
}

func (p *PaymentLineItem) GetImageURL() *string {
	if p == nil {
		return nil
	}
	return p.ImageURL
}

func (p *PaymentLineItem) GetProductURL() *string {
	if p == nil {
		return nil
	}
	return p.ProductURL
}
