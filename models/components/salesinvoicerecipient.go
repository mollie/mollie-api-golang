// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type SalesInvoiceRecipient struct {
	// The type of recipient, either `consumer` or `business`. This will determine what further fields are
	// required on the `recipient` object.
	Type SalesInvoiceRecipientType `json:"type"`
	// The title of the `consumer` type recipient, for example Mr. or Mrs..
	Title *string `json:"title,omitempty"`
	// The given name (first name) of the `consumer` type recipient should be at least two characters and cannot contain
	// only numbers.
	GivenName *string `json:"givenName,omitempty"`
	// The given name (last name) of the `consumer` type recipient should be at least two characters and cannot contain
	// only numbers.
	FamilyName *string `json:"familyName,omitempty"`
	// The trading name of the `business` type recipient.
	OrganizationName *string `json:"organizationName,omitempty"`
	// The Chamber of Commerce number of the organization for a `business` type recipient. Either this or `vatNumber`
	// has to be provided.
	OrganizationNumber *string `json:"organizationNumber,omitempty"`
	// The VAT number of the organization for a `business` type recipient. Either this or `organizationNumber`
	// has to be provided.
	VatNumber *string `json:"vatNumber,omitempty"`
	// The email address of the recipient.
	Email string `json:"email"`
	// The phone number of the recipient.
	Phone *string `json:"phone,omitempty"`
	// A street and street number.
	StreetAndNumber string `json:"streetAndNumber"`
	// Any additional addressing details, for example an apartment number.
	StreetAdditional *string `json:"streetAdditional,omitempty"`
	// A postal code.
	PostalCode string `json:"postalCode"`
	// The recipient's city.
	City string `json:"city"`
	// The recipient's region.
	Region *string `json:"region,omitempty"`
	// A country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
	Country string `json:"country"`
	// The locale for the recipient, to be used for translations in PDF generation and payment pages.
	Locale SalesInvoiceRecipientLocale `json:"locale"`
}

func (s *SalesInvoiceRecipient) GetType() SalesInvoiceRecipientType {
	if s == nil {
		return SalesInvoiceRecipientType("")
	}
	return s.Type
}

func (s *SalesInvoiceRecipient) GetTitle() *string {
	if s == nil {
		return nil
	}
	return s.Title
}

func (s *SalesInvoiceRecipient) GetGivenName() *string {
	if s == nil {
		return nil
	}
	return s.GivenName
}

func (s *SalesInvoiceRecipient) GetFamilyName() *string {
	if s == nil {
		return nil
	}
	return s.FamilyName
}

func (s *SalesInvoiceRecipient) GetOrganizationName() *string {
	if s == nil {
		return nil
	}
	return s.OrganizationName
}

func (s *SalesInvoiceRecipient) GetOrganizationNumber() *string {
	if s == nil {
		return nil
	}
	return s.OrganizationNumber
}

func (s *SalesInvoiceRecipient) GetVatNumber() *string {
	if s == nil {
		return nil
	}
	return s.VatNumber
}

func (s *SalesInvoiceRecipient) GetEmail() string {
	if s == nil {
		return ""
	}
	return s.Email
}

func (s *SalesInvoiceRecipient) GetPhone() *string {
	if s == nil {
		return nil
	}
	return s.Phone
}

func (s *SalesInvoiceRecipient) GetStreetAndNumber() string {
	if s == nil {
		return ""
	}
	return s.StreetAndNumber
}

func (s *SalesInvoiceRecipient) GetStreetAdditional() *string {
	if s == nil {
		return nil
	}
	return s.StreetAdditional
}

func (s *SalesInvoiceRecipient) GetPostalCode() string {
	if s == nil {
		return ""
	}
	return s.PostalCode
}

func (s *SalesInvoiceRecipient) GetCity() string {
	if s == nil {
		return ""
	}
	return s.City
}

func (s *SalesInvoiceRecipient) GetRegion() *string {
	if s == nil {
		return nil
	}
	return s.Region
}

func (s *SalesInvoiceRecipient) GetCountry() string {
	if s == nil {
		return ""
	}
	return s.Country
}

func (s *SalesInvoiceRecipient) GetLocale() SalesInvoiceRecipientLocale {
	if s == nil {
		return SalesInvoiceRecipientLocale("")
	}
	return s.Locale
}
