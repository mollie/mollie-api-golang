// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// CustomerResponseLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type CustomerResponseLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self URLObj `json:"self"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Dashboard URLObj `json:"dashboard"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Payments *URLNullable `json:"payments,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Mandates *URLNullable `json:"mandates,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Subscriptions *URLNullable `json:"subscriptions,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation URLObj `json:"documentation"`
}

func (c *CustomerResponseLinks) GetSelf() URLObj {
	if c == nil {
		return URLObj{}
	}
	return c.Self
}

func (c *CustomerResponseLinks) GetDashboard() URLObj {
	if c == nil {
		return URLObj{}
	}
	return c.Dashboard
}

func (c *CustomerResponseLinks) GetPayments() *URLNullable {
	if c == nil {
		return nil
	}
	return c.Payments
}

func (c *CustomerResponseLinks) GetMandates() *URLNullable {
	if c == nil {
		return nil
	}
	return c.Mandates
}

func (c *CustomerResponseLinks) GetSubscriptions() *URLNullable {
	if c == nil {
		return nil
	}
	return c.Subscriptions
}

func (c *CustomerResponseLinks) GetDocumentation() URLObj {
	if c == nil {
		return URLObj{}
	}
	return c.Documentation
}

type CustomerResponse struct {
	// Indicates the response contains a customer object. Will always contain the string `customer` for this endpoint.
	Resource *string `json:"resource,omitempty"`
	ID       *string `json:"id,omitempty"`
	// Whether this entity was created in live mode or in test mode.
	Mode *Mode `json:"mode,omitempty"`
	// The full name of the customer.
	Name *string `json:"name,omitempty"`
	// The email address of the customer.
	Email *string `json:"email,omitempty"`
	// Allows you to preset the language to be used.
	Locale *LocaleResponse `json:"locale,omitempty"`
	// Provide any data you like, for example a string or a JSON object. We will save the data alongside the entity. Whenever
	// you fetch the entity with our API, we will also include the metadata. You can use up to approximately 1kB.
	Metadata *Metadata `json:"metadata,omitempty"`
	// The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	CreatedAt *string `json:"createdAt,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links *CustomerResponseLinks `json:"_links,omitempty"`
}

func (c *CustomerResponse) GetResource() *string {
	if c == nil {
		return nil
	}
	return c.Resource
}

func (c *CustomerResponse) GetID() *string {
	if c == nil {
		return nil
	}
	return c.ID
}

func (c *CustomerResponse) GetMode() *Mode {
	if c == nil {
		return nil
	}
	return c.Mode
}

func (c *CustomerResponse) GetName() *string {
	if c == nil {
		return nil
	}
	return c.Name
}

func (c *CustomerResponse) GetEmail() *string {
	if c == nil {
		return nil
	}
	return c.Email
}

func (c *CustomerResponse) GetLocale() *LocaleResponse {
	if c == nil {
		return nil
	}
	return c.Locale
}

func (c *CustomerResponse) GetMetadata() *Metadata {
	if c == nil {
		return nil
	}
	return c.Metadata
}

func (c *CustomerResponse) GetCreatedAt() *string {
	if c == nil {
		return nil
	}
	return c.CreatedAt
}

func (c *CustomerResponse) GetLinks() *CustomerResponseLinks {
	if c == nil {
		return nil
	}
	return c.Links
}
