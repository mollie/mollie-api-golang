// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// EntityOnboardingStatusStatus - The current status of the organization's onboarding process.
//
// * `needs-data` — The merchant needs to provide additional information
// * `in-review` — The merchant provided all information, awaiting review from Mollie
// * `completed` — The onboarding is completed
type EntityOnboardingStatusStatus string

const (
	EntityOnboardingStatusStatusNeedsData EntityOnboardingStatusStatus = "needs-data"
	EntityOnboardingStatusStatusInReview  EntityOnboardingStatusStatus = "in-review"
	EntityOnboardingStatusStatusCompleted EntityOnboardingStatusStatus = "completed"
)

func (e EntityOnboardingStatusStatus) ToPointer() *EntityOnboardingStatusStatus {
	return &e
}
func (e *EntityOnboardingStatusStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "needs-data":
		fallthrough
	case "in-review":
		fallthrough
	case "completed":
		*e = EntityOnboardingStatusStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityOnboardingStatusStatus: %v", v)
	}
}

// EntityOnboardingStatusLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type EntityOnboardingStatusLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *URLObj `json:"self,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Dashboard *URLObj `json:"dashboard,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Organization *URLObj `json:"organization,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *URLObj `json:"documentation,omitempty"`
}

func (o *EntityOnboardingStatusLinks) GetSelf() *URLObj {
	if o == nil {
		return nil
	}
	return o.Self
}

func (o *EntityOnboardingStatusLinks) GetDashboard() *URLObj {
	if o == nil {
		return nil
	}
	return o.Dashboard
}

func (o *EntityOnboardingStatusLinks) GetOrganization() *URLObj {
	if o == nil {
		return nil
	}
	return o.Organization
}

func (o *EntityOnboardingStatusLinks) GetDocumentation() *URLObj {
	if o == nil {
		return nil
	}
	return o.Documentation
}

type EntityOnboardingStatus struct {
	// Indicates the response contains an onboarding status object. Will always contain the string `onboarding` for this
	// resource type.
	Resource *string `json:"resource,omitempty"`
	// The name of the organization.
	Name *string `json:"name,omitempty"`
	// The current status of the organization's onboarding process.
	//
	// * `needs-data` — The merchant needs to provide additional information
	// * `in-review` — The merchant provided all information, awaiting review from Mollie
	// * `completed` — The onboarding is completed
	Status *EntityOnboardingStatusStatus `json:"status,omitempty"`
	// Whether the organization can receive payments.
	CanReceivePayments *bool `json:"canReceivePayments,omitempty"`
	// Whether the organization can receive settlements to their external bank account.
	CanReceiveSettlements *bool `json:"canReceiveSettlements,omitempty"`
	// The sign up date time of the organization in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	SignedUpAt *string `json:"signedUpAt,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links *EntityOnboardingStatusLinks `json:"_links,omitempty"`
}

func (o *EntityOnboardingStatus) GetResource() *string {
	if o == nil {
		return nil
	}
	return o.Resource
}

func (o *EntityOnboardingStatus) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *EntityOnboardingStatus) GetStatus() *EntityOnboardingStatusStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *EntityOnboardingStatus) GetCanReceivePayments() *bool {
	if o == nil {
		return nil
	}
	return o.CanReceivePayments
}

func (o *EntityOnboardingStatus) GetCanReceiveSettlements() *bool {
	if o == nil {
		return nil
	}
	return o.CanReceiveSettlements
}

func (o *EntityOnboardingStatus) GetSignedUpAt() *string {
	if o == nil {
		return nil
	}
	return o.SignedUpAt
}

func (o *EntityOnboardingStatus) GetLinks() *EntityOnboardingStatusLinks {
	if o == nil {
		return nil
	}
	return o.Links
}
