// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type EntityInvoiceLine struct {
	// The administrative period in `YYYY-MM` on which the line should be booked.
	Period *string `json:"period,omitempty"`
	// Description of the product.
	Description *string `json:"description,omitempty"`
	// Number of products invoiced. For example, the number of payments.
	Count *int64 `json:"count,omitempty"`
	// VAT percentage rate that applies to this product.
	VatPercentage *int64 `json:"vatPercentage,omitempty"`
	// In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
	Amount *Amount `json:"amount,omitempty"`
}

func (e *EntityInvoiceLine) GetPeriod() *string {
	if e == nil {
		return nil
	}
	return e.Period
}

func (e *EntityInvoiceLine) GetDescription() *string {
	if e == nil {
		return nil
	}
	return e.Description
}

func (e *EntityInvoiceLine) GetCount() *int64 {
	if e == nil {
		return nil
	}
	return e.Count
}

func (e *EntityInvoiceLine) GetVatPercentage() *int64 {
	if e == nil {
		return nil
	}
	return e.VatPercentage
}

func (e *EntityInvoiceLine) GetAmount() *Amount {
	if e == nil {
		return nil
	}
	return e.Amount
}

// EntityInvoiceLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
type EntityInvoiceLinks struct {
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Self *URLObj `json:"self,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Pdf *URLObj `json:"pdf,omitempty"`
	// In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
	Documentation *URLObj `json:"documentation,omitempty"`
}

func (e *EntityInvoiceLinks) GetSelf() *URLObj {
	if e == nil {
		return nil
	}
	return e.Self
}

func (e *EntityInvoiceLinks) GetPdf() *URLObj {
	if e == nil {
		return nil
	}
	return e.Pdf
}

func (e *EntityInvoiceLinks) GetDocumentation() *URLObj {
	if e == nil {
		return nil
	}
	return e.Documentation
}

type EntityInvoice struct {
	// Indicates that the response contains an invoice object.
	// Will always contain the string `invoice` for this endpoint.
	Resource *string `json:"resource,omitempty"`
	// The identifier uniquely referring to this invoice. Example: `inv_FrvewDA3Pr`.
	ID *string `json:"id,omitempty"`
	// The reference number of the invoice. An example value would be: `2024.10000`.
	Reference *string `json:"reference,omitempty"`
	// The VAT number to which the invoice was issued to, if applicable.
	VatNumber *string `json:"vatNumber,omitempty"`
	// Status of the invoice.
	Status *InvoiceStatus `json:"status,omitempty"`
	// In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
	NetAmount *Amount `json:"netAmount,omitempty"`
	// In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
	VatAmount *Amount `json:"vatAmount,omitempty"`
	// In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
	GrossAmount *Amount `json:"grossAmount,omitempty"`
	// The collection of products which make up the invoice.
	Lines []EntityInvoiceLine `json:"lines,omitempty"`
	// The invoice date in `YYYY-MM-DD` format.
	IssuedAt *string `json:"issuedAt,omitempty"`
	// The date on which the invoice was paid, if applicable, in `YYYY-MM-DD` format.
	PaidAt *string `json:"paidAt,omitempty"`
	// The date on which the invoice is due, if applicable, in `YYYY-MM-DD` format.
	DueAt *string `json:"dueAt,omitempty"`
	// An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
	Links *EntityInvoiceLinks `json:"_links,omitempty"`
}

func (e *EntityInvoice) GetResource() *string {
	if e == nil {
		return nil
	}
	return e.Resource
}

func (e *EntityInvoice) GetID() *string {
	if e == nil {
		return nil
	}
	return e.ID
}

func (e *EntityInvoice) GetReference() *string {
	if e == nil {
		return nil
	}
	return e.Reference
}

func (e *EntityInvoice) GetVatNumber() *string {
	if e == nil {
		return nil
	}
	return e.VatNumber
}

func (e *EntityInvoice) GetStatus() *InvoiceStatus {
	if e == nil {
		return nil
	}
	return e.Status
}

func (e *EntityInvoice) GetNetAmount() *Amount {
	if e == nil {
		return nil
	}
	return e.NetAmount
}

func (e *EntityInvoice) GetVatAmount() *Amount {
	if e == nil {
		return nil
	}
	return e.VatAmount
}

func (e *EntityInvoice) GetGrossAmount() *Amount {
	if e == nil {
		return nil
	}
	return e.GrossAmount
}

func (e *EntityInvoice) GetLines() []EntityInvoiceLine {
	if e == nil {
		return nil
	}
	return e.Lines
}

func (e *EntityInvoice) GetIssuedAt() *string {
	if e == nil {
		return nil
	}
	return e.IssuedAt
}

func (e *EntityInvoice) GetPaidAt() *string {
	if e == nil {
		return nil
	}
	return e.PaidAt
}

func (e *EntityInvoice) GetDueAt() *string {
	if e == nil {
		return nil
	}
	return e.DueAt
}

func (e *EntityInvoice) GetLinks() *EntityInvoiceLinks {
	if e == nil {
		return nil
	}
	return e.Links
}
