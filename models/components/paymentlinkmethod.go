// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type PaymentLinkMethod string

const (
	PaymentLinkMethodApplepay     PaymentLinkMethod = "applepay"
	PaymentLinkMethodBacs         PaymentLinkMethod = "bacs"
	PaymentLinkMethodBancomatpay  PaymentLinkMethod = "bancomatpay"
	PaymentLinkMethodBancontact   PaymentLinkMethod = "bancontact"
	PaymentLinkMethodBanktransfer PaymentLinkMethod = "banktransfer"
	PaymentLinkMethodBelfius      PaymentLinkMethod = "belfius"
	PaymentLinkMethodBillie       PaymentLinkMethod = "billie"
	PaymentLinkMethodBlik         PaymentLinkMethod = "blik"
	PaymentLinkMethodCreditcard   PaymentLinkMethod = "creditcard"
	PaymentLinkMethodEps          PaymentLinkMethod = "eps"
	PaymentLinkMethodGiftcard     PaymentLinkMethod = "giftcard"
	PaymentLinkMethodIdeal        PaymentLinkMethod = "ideal"
	PaymentLinkMethodIn3          PaymentLinkMethod = "in3"
	PaymentLinkMethodKbc          PaymentLinkMethod = "kbc"
	PaymentLinkMethodKlarna       PaymentLinkMethod = "klarna"
	PaymentLinkMethodMbway        PaymentLinkMethod = "mbway"
	PaymentLinkMethodMultibanco   PaymentLinkMethod = "multibanco"
	PaymentLinkMethodMybank       PaymentLinkMethod = "mybank"
	PaymentLinkMethodPaybybank    PaymentLinkMethod = "paybybank"
	PaymentLinkMethodPaypal       PaymentLinkMethod = "paypal"
	PaymentLinkMethodPaysafecard  PaymentLinkMethod = "paysafecard"
	PaymentLinkMethodPointofsale  PaymentLinkMethod = "pointofsale"
	PaymentLinkMethodPrzelewy24   PaymentLinkMethod = "przelewy24"
	PaymentLinkMethodRiverty      PaymentLinkMethod = "riverty"
	PaymentLinkMethodSatispay     PaymentLinkMethod = "satispay"
	PaymentLinkMethodSwish        PaymentLinkMethod = "swish"
	PaymentLinkMethodTrustly      PaymentLinkMethod = "trustly"
	PaymentLinkMethodTwint        PaymentLinkMethod = "twint"
	PaymentLinkMethodVoucher      PaymentLinkMethod = "voucher"
)

func (e PaymentLinkMethod) ToPointer() *PaymentLinkMethod {
	return &e
}
func (e *PaymentLinkMethod) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "applepay":
		fallthrough
	case "bacs":
		fallthrough
	case "bancomatpay":
		fallthrough
	case "bancontact":
		fallthrough
	case "banktransfer":
		fallthrough
	case "belfius":
		fallthrough
	case "billie":
		fallthrough
	case "blik":
		fallthrough
	case "creditcard":
		fallthrough
	case "eps":
		fallthrough
	case "giftcard":
		fallthrough
	case "ideal":
		fallthrough
	case "in3":
		fallthrough
	case "kbc":
		fallthrough
	case "klarna":
		fallthrough
	case "mbway":
		fallthrough
	case "multibanco":
		fallthrough
	case "mybank":
		fallthrough
	case "paybybank":
		fallthrough
	case "paypal":
		fallthrough
	case "paysafecard":
		fallthrough
	case "pointofsale":
		fallthrough
	case "przelewy24":
		fallthrough
	case "riverty":
		fallthrough
	case "satispay":
		fallthrough
	case "swish":
		fallthrough
	case "trustly":
		fallthrough
	case "twint":
		fallthrough
	case "voucher":
		*e = PaymentLinkMethod(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentLinkMethod: %v", v)
	}
}
