// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// BillingAddress - The customer's billing address details. We advise to provide these details to improve fraud protection and
// conversion.
//
// Should include `email` or a valid postal address consisting of `streetAndNumber`, `postalCode`, `city` and
// `country`.
//
// Required for payment method `in3`, `klarna`, `billie` and `riverty`.
type BillingAddress struct {
	// The title of the person, for example *Mr.* or *Mrs.*.
	Title *string `json:"title,omitempty"`
	// The given name (first name) of the person should be at least two characters and cannot contain only
	// numbers.
	//
	// Required for payment methods `billie`, `in3`, `klarna` and `riverty`.
	GivenName *string `json:"givenName,omitempty"`
	// The given family name (surname) of the person should be at least two characters and cannot contain only
	// numbers.
	//
	// Required for payment methods `billie`, `in3`, `klarna` and `riverty`.
	FamilyName *string `json:"familyName,omitempty"`
	// The name of the organization, in case the addressee is an organization.
	//
	// Required for payment method `billie`.
	OrganizationName any `json:"organizationName,omitempty"`
	// A street and street number.
	//
	// Required for payment methods `billie`, `in3`, `klarna` and `riverty`.
	StreetAndNumber *string `json:"streetAndNumber,omitempty"`
	// Any additional addressing details, for example an apartment number.
	StreetAdditional *string `json:"streetAdditional,omitempty"`
	// A postal code. This field may be required if the provided country has a postal code system.
	//
	// Required for payment methods `billie`, `in3`, `klarna` and `riverty`.
	PostalCode *string `json:"postalCode,omitempty"`
	// A valid e-mail address.
	//
	// If you provide the email address for a `banktransfer` payment, we will automatically send the instructions
	// email upon payment creation. The language of the email will follow the locale parameter of the payment.
	//
	// Required for payment methods `billie`, `in3`, `klarna` and `riverty`.
	Email *string `json:"email,omitempty"`
	// If provided, it must be in the [E.164](https://en.wikipedia.org/wiki/E.164) format. For example: +31208202070.
	Phone *string `json:"phone,omitempty"`
	// A city name.
	//
	// Required for payment methods `billie`, `in3`, `klarna` and `riverty`.
	City *string `json:"city,omitempty"`
	// The top-level administrative subdivision of the country. For example: Noord-Holland.
	Region *string `json:"region,omitempty"`
	// A country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
	//
	// Required for payment methods `billie`, `in3`, `klarna` and `riverty`.
	Country *string `json:"country,omitempty"`
}

func (b *BillingAddress) GetTitle() *string {
	if b == nil {
		return nil
	}
	return b.Title
}

func (b *BillingAddress) GetGivenName() *string {
	if b == nil {
		return nil
	}
	return b.GivenName
}

func (b *BillingAddress) GetFamilyName() *string {
	if b == nil {
		return nil
	}
	return b.FamilyName
}

func (b *BillingAddress) GetOrganizationName() any {
	if b == nil {
		return nil
	}
	return b.OrganizationName
}

func (b *BillingAddress) GetStreetAndNumber() *string {
	if b == nil {
		return nil
	}
	return b.StreetAndNumber
}

func (b *BillingAddress) GetStreetAdditional() *string {
	if b == nil {
		return nil
	}
	return b.StreetAdditional
}

func (b *BillingAddress) GetPostalCode() *string {
	if b == nil {
		return nil
	}
	return b.PostalCode
}

func (b *BillingAddress) GetEmail() *string {
	if b == nil {
		return nil
	}
	return b.Email
}

func (b *BillingAddress) GetPhone() *string {
	if b == nil {
		return nil
	}
	return b.Phone
}

func (b *BillingAddress) GetCity() *string {
	if b == nil {
		return nil
	}
	return b.City
}

func (b *BillingAddress) GetRegion() *string {
	if b == nil {
		return nil
	}
	return b.Region
}

func (b *BillingAddress) GetCountry() *string {
	if b == nil {
		return nil
	}
	return b.Country
}
